 AS V1.42 Beta [Bld 227] - Source File emuz80mon_RevB02.asm - Page 1 - 10/17/2022 9:42:47


       1/       0 :                     	page	0
       2/       0 :                     	cpu	z80
       3/       0 :                     ;;; 
       4/       0 :                     ;;; Universal Monitor for Zilog Z80
       5/       0 :                     ;;;   Copyright (C) 2019,2020,2021 Haruo Asano
       6/       0 :                     ;;;
       7/       0 :                     
       8/       0 :                     ;;; 2022.10.10 It was added functions by A.honda
       9/       0 :                     ;;; Rev.B02
      10/       0 :                     
      11/       0 :                     ;;; Constants
      12/       0 : =0DH                 CR	EQU	0DH
      13/       0 : =0AH                 LF	EQU	0AH
      14/       0 : =8H                  BS	EQU	08H
      15/       0 : =7FH                 DEL	EQU	7FH
      16/       0 : =20H                 BUFLEN	equ	32	
      17/       0 : =8H                  F_bitSize	equ	8
      18/       0 :                     ;;;
      19/       0 :                     ;;; Memory switch
      20/       0 :                     ;;;
      21/       0 :                     
      22/       0 : =1H                  RAM12K = 1
      23/       0 : =0H                  RAM8K = 0
      24/       0 : =0H                  RAM4K = 0
      25/       0 : =0H                  BACKDOOR = 0
      26/       0 :                     
      27/       0 : =>TRUE               	IF	RAM12K
      28/       0 :                     ;; ROM48K RAM12K for PIC18F47Q84
      29/       0 : =0FF00H              UARTDR	EQU	0FF00H	; UART DATA REGISTOR
      30/       0 : =0FF01H              UARTCR	EQU	0FF01H	; UART CONTROL REGISTOR
      31/       0 : =0EF00H              WORK_B	equ	0EF00H	; work area EF00-EFFF
      32/       0 : =0EF00H              STACKM	equ	0EF00H	; monitor stack
      33/       0 : =0EEC0H              STACK	equ	0EEC0H	; user stack
      34/       0 : =0H                  ROM_B	equ	0000H	;EMUZ80_Q84 ROM base address
      35/       0 : =0C000H              RAM_B	equ	0C000H	;EMUZ80_Q84 RAM base address
      36/       0 : =0EFFFH              RAM_E	equ	0EFFFH	;EMUZ80_Q84 RAM END address
      37/       0 : =0F000H              IO_B	equ	0F000H	;EMUZ80_Q84 I/O base address
      38/       0 : [27]                 	ENDIF
      39/       0 :                     
      40/       0 : =>FALSE              	IF	RAM8K
      41/       0 :                     ; ORIGINAL MEMORY MAP for PIC18F47Q84
      42/       0 :                     UARTDR	EQU	0E000H	; UART DATA REGISTOR
      43/       0 :                     UARTCR	EQU	0E001H	; UART CONTROL REGISTOR
      44/       0 :                     WORK_B	equ	9F00H	; work area 9F00-9FFF
      45/       0 :                     STACKM	equ	9F00H	; monitor stack
      46/       0 :                     STACK	equ	9EC0H	; user stack
      47/       0 :                     ROM_B	equ	0000H	;EMUZ80_Q84 ROM base address
      48/       0 :                     RAM_B	equ	8000H	;EMUZ80_Q84 RAM base address
      49/       0 :                     RAM_E	equ	9FFFH	;EMUZ80_Q84 RAM END address
      50/       0 :                     IO_B	equ	0E000H	;EMUZ80_Q84 I/O base address
      51/       0 : [40]                 	ENDIF
      52/       0 :                     
      53/       0 : =>FALSE              	IF	RAM4K
      54/       0 :                     ; ORIGINAL MEMORY MAP for PIC18F47Q43
      55/       0 :                     
      56/       0 :                     UARTDR	EQU	0E000H	; UART DATA REGISTOR
      57/       0 :                     UARTCR	EQU	0E001H	; UART CONTROL REGISTOR
      58/       0 :                     WORK_B	equ	8F00H	; work area 8F00-8FFF
      59/       0 :                     STACKM	equ	8F00H	; monitor stack
      60/       0 :                     STACK	equ	8EC0H	; user stack
      61/       0 :                     ROM_B	equ	0000H	;EMUZ80_Q43 ROM base address
      62/       0 :                     RAM_B	equ	8000H	;EMUZ80_Q43 RAM base address
      63/       0 :                     RAM_E	equ	9FFFH	;EMUZ80_Q43 RAM END address
      64/       0 :                     IO_B	equ	0E000H	;EMUZ80_Q43 I/O base address
      65/       0 : [53]                 	ENDIF
      66/       0 :                     
      67/       0 : =2000H               BASIC_TOP	equ	2000H
      68/       0 : =2000H               BASIC_CST	equ	2000H	; basic cold start
      69/       0 : =2003H               BASIC_WST	equ	2003H	; basic warm start
      70/       0 :                     
      71/       0 : =>TRUE               	IF	RAM12K
      72/       0 : =0F800H              TIM0_CTL0	equ	0F800H	; timer0 control0 register
      73/       0 : =0F801H              TIM0_CTL1	equ	0F801H	; timer0 control1 register
      74/       0 : =0F810H              TIMER0_CNTL	equ	0F810H	; timer0 16bit counter LSB
      75/       0 : =0F811H              TIMER0_CNTH	equ	0F811H	; timer0 16bit counter MSB
      76/       0 : =0F820H              TIMER0_SCTL	equ	0F820H	; timer0 seconds counter LSB
      77/       0 : =0F821H              TIMER0_SCTH	equ	0F821H	; timer0 seconds counter MSB
      78/       0 : =87E1H               TIMER0_INITC	equ	87e1h	; timer adjust count number
      79/       0 : [71]                 	ENDIF
      80/       0 :                     
      81/       0 : =40H                 ENTRY	EQU	0040H		; Entry point
      82/       0 :                     
      83/       0 :                     ;;; 
      84/       0 :                     ;;; ROM area
      85/       0 :                     ;;;
      86/       0 :                     start:
      87/       0 :                     
      88/       0 :                     	ORG	ROM_B	; (RST 00H)
      89/       0 :                     
      90/       0 :                     E_CSTART:
      91/       0 : C3 40 00            	JP	CSTART
      92/       3 :                     
      93/       3 :                     E_WSTART:
      94/       3 : C3 90 18            	JP	API01
      95/       6 :                     
      96/       6 : 00 00               	db	0008H - $ dup(00H)
      97/       8 :                     ;	ORG	0008H	; (RST 08H)
      98/       8 : =>FALSE              	IF	BACKDOOR
      99/       8 :                     	JP	RST08H
     100/       8 : =>TRUE               	ELSE
     101/       8 : C3 B4 1F            	JP	CONOUT
     102/       B : [98]                 	ENDIF
     103/       B :                     
     104/       B : 00 00 00 00 00      	db	0010H - $ dup(00H)
     105/      10 :                     ;	ORG	0010H	; (RST 10H)
     106/      10 : =>FALSE              	IF	BACKDOOR
     107/      10 :                     	JP	RST10H
     108/      10 : =>TRUE               	ELSE
     109/      10 : C3 A3 1F            	JP	CONIN
     110/      13 : [106]                	ENDIF
     111/      13 :                     
     112/      13 : 00 00 00 00 00      	db	0018H - $ dup(00H)	; nop
     113/      18 :                     ;	ORG	0018H	; (RST 18H)
     114/      18 : =>FALSE              	IF	BACKDOOR
     115/      18 :                     	JP	RST18H
     116/      18 : =>TRUE               	ELSE
     117/      18 : C9                  	RET
     118/      19 : [114]                	ENDIF
     119/      19 :                     
     120/      19 : 00 00 00 00 00 00   	db	0020H - $ dup(00H)	; nop
               1F : 00                
     121/      20 :                     ;	ORG	0020H	; (RST 20H)
     122/      20 : =>FALSE              	IF	BACKDOOR
     123/      20 :                     	JP	RST20H
     124/      20 : =>TRUE               	ELSE
     125/      20 : C9                  	RET
     126/      21 : [122]                	ENDIF
     127/      21 :                     
     128/      21 : 00 00 00 00 00 00   	db	0028H - $ dup(00H)	; nop
               27 : 00                
     129/      28 :                     ;	ORG	0028H	; (RST 28H)
     130/      28 : =>FALSE              	IF	BACKDOOR
     131/      28 :                     	RET
     132/      28 : =>TRUE               	ELSE
     133/      28 : C9                  	RET
     134/      29 : [130]                	ENDIF
     135/      29 :                     
     136/      29 : 00 00 00 00 00 00   	db	0030H - $ dup(00H)	; nop
               2F : 00                
     137/      30 :                     ;	ORG	0030H
     138/      30 : =>FALSE              	IF	BACKDOOR
     139/      30 :                     	JP	RST30H
     140/      30 : =>TRUE               	ELSE
     141/      30 : C3 53 18            	JP	RST30H_IN
     142/      33 : [138]                	ENDIF
     143/      33 :                     
     144/      33 : 00 00 00 00 00      	db	0038H - $ dup(00H)	; nop
     145/      38 :                     ;	ORG	0038H
     146/      38 : =>FALSE              	IF	BACKDOOR
     147/      38 :                     	JP	RST38H;
     148/      38 : =>TRUE               	ELSE
     149/      38 : C3 D4 18            	JP	RST38H_IN
     150/      3B : [146]                	ENDIF
     151/      3B :                     
     152/      3B :                     	;;
     153/      3B :                     	;; Entry point
     154/      3B :                     	;;
     155/      3B :                     
     156/      3B : 00 00 00 00 00      	db	ENTRY - $ dup(00H)
     157/      40 :                     	;	ORG	ENTRY
     158/      40 :                     
     159/      40 : =>FALSE              	IF	BACKDOOR
     160/      40 :                     ;;;
     161/      40 :                     ;;; RST 08H Handler
     162/      40 :                     ;;;
     163/      40 :                     RST08H:
     164/      40 :                     
     165/      40 :                     	ld	(save_hl), hl	; save hl
     166/      40 :                     	ld	hl, (stealRST08)
     167/      40 :                     	jr	jmp_rst
     168/      40 :                     
     169/      40 :                     ;;;
     170/      40 :                     ;;; RST 10H Handler
     171/      40 :                     ;;;
     172/      40 :                     RST10H:
     173/      40 :                     
     174/      40 :                     	ld	(save_hl), hl	; save hl
     175/      40 :                     	ld	hl, (stealRST10)
     176/      40 :                     	jr	jmp_rst
     177/      40 :                     
     178/      40 :                     ;;;
     179/      40 :                     ;;; RST 18H Handler
     180/      40 :                     ;;;
     181/      40 :                     RST18H:
     182/      40 :                     
     183/      40 :                     	ld	(save_hl), hl	; save hl
     184/      40 :                     	ld	hl, (stealRST18)
     185/      40 :                     	jr	jmp_rst
     186/      40 :                     
     187/      40 :                     ;;;
     188/      40 :                     ;;; RST 20H Handler
     189/      40 :                     ;;;
     190/      40 :                     RST20H:
     191/      40 :                     
     192/      40 :                     	ld	(save_hl), hl	; save hl
     193/      40 :                     	ld	hl, (stealRST20)
     194/      40 :                     	jr	jmp_rst
     195/      40 :                     
     196/      40 :                     ;;;
     197/      40 :                     ;;; RST 28H Handler
     198/      40 :                     ;;;
     199/      40 :                     RST28H:
     200/      40 :                     
     201/      40 :                     	ld	(save_hl), hl	; save hl
     202/      40 :                     	ld	hl, (stealRST28)
     203/      40 :                     	jr	jmp_rst
     204/      40 :                     
     205/      40 :                     ;;;
     206/      40 :                     ;;; RST 30H Handler
     207/      40 :                     ;;;
     208/      40 :                     RST30H:
     209/      40 :                     
     210/      40 :                     	ld	(save_hl), hl	; save hl
     211/      40 :                     	ld	hl, (stealRST30)
     212/      40 :                     	jr	jmp_rst
     213/      40 :                     
     214/      40 :                     ;;;
     215/      40 :                     ;;; RST 38H Handler
     216/      40 :                     ;;;
     217/      40 :                     RST38H:
     218/      40 :                     
     219/      40 :                     	ld	(save_hl), hl	; save hl
     220/      40 :                     	ld	hl, (stealRST38)
     221/      40 :                     jmp_rst:
     222/      40 :                     	push	hl		; set jump address
     223/      40 :                     	ld	hl, (save_hl)	; restore hl
     224/      40 :                     RST20H_IN:
     225/      40 :                     RST28H_IN:
     226/      40 :                     	ret			; jump (stealRST38)
     227/      40 : [159]                	ENDIF
     228/      40 :                     
     229/      40 :                     ;;;
     230/      40 :                     ;;; Universal Monitor Z80 Cold start
     231/      40 :                     ;;;
     232/      40 :                     
     233/      40 :                     CSTART:
     234/      40 : F3                  	DI
     235/      41 : 31 00 EF            	LD	SP,STACKM	; monitor stask defines STACKM
     236/      44 :                     
     237/      44 : 21 00 C0            	LD	HL,RAM_B
     238/      47 : 22 20 EF            	LD	(DSADDR),HL
     239/      4A : 22 27 EF            	LD	(SADDR),HL
     240/      4D : 22 25 EF            	LD	(GADDR),HL
     241/      50 : 3E 49               	LD	A,'I'
     242/      52 : 32 29 EF            	LD	(HEXMOD),A
     243/      55 :                     	
     244/      55 : =>FALSE              	IF	BACKDOOR
     245/      55 :                     	; init back door RST XXH entory point
     246/      55 :                     	ld	hl, CONOUT		; RST 08H : CONOUT
     247/      55 :                     	ld	(stealRST08), hl
     248/      55 :                     	ld	hl, CONIN
     249/      55 :                     	ld	(stealRST10), hl	; RST 10H : CONIN
     250/      55 :                     	ld	hl, CONST
     251/      55 :                     	ld	(stealRST18), hl	; RST 18H : CONST
     252/      55 :                     	ld	hl, RST20H_IN
     253/      55 :                     	ld	(stealRST20), hl
     254/      55 :                     	ld	hl, RST28H_IN
     255/      55 :                     	ld	(stealRST28), hl
     256/      55 :                     	ld	hl, RST30H_IN
     257/      55 :                     	ld	(stealRST30), hl
     258/      55 :                     	ld	hl, RST38H_IN
     259/      55 :                     	ld	(stealRST38), hl
     260/      55 : [244]                	ENDIF
     261/      55 :                     
     262/      55 :                     	;; Initialize register value
     263/      55 : AF                  	XOR	A
     264/      56 : 21 2C EF            	LD	HL,REG_B
     265/      59 : 06 1A               	LD	B,REG_E-REG_B
     266/      5B :                     IR0:
     267/      5B : 77                  	LD	(HL),A
     268/      5C : 23                  	INC	HL
     269/      5D : 10 FC               	DJNZ	IR0
     270/      5F :                     
     271/      5F : 21 C0 EE            	LD	HL,STACK		; user stack define STACK
     272/      62 : 22 40 EF            	LD	(REGSP),HL
     273/      65 : 21 00 C0            	ld	hl, RAM_B
     274/      68 : 22 42 EF            	ld	(REGPC), HL		; set program counter
     275/      6B :                     
     276/      6B : 06 08               	ld	b, F_bitSize
     277/      6D : 3E 2E               	ld	a, '.'
     278/      6F : 21 71 EF            	ld	hl, F_bit
     279/      72 :                     ir00:
     280/      72 : 77                  	ld	(hl), a
     281/      73 : 23                  	inc	hl
     282/      74 : 10 FC               	djnz	ir00		; init F_bit string
     283/      76 : AF                  	xor	a
     284/      77 : 77                  	ld	(hl), a		; delimiter
     285/      78 :                     ;
     286/      78 :                     ;	LD	B,100
     287/      78 :                     ;TL:	
     288/      78 :                     ;	XOR	A
     289/      78 :                     ;	CALL	CONOUT
     290/      78 :                     ;	DJNZ	TL
     291/      78 :                     ;
     292/      78 :                     	
     293/      78 :                     ; init dbg work area
     294/      78 :                     
     295/      78 : 06 14               	LD	B, dbg_wend - dbg_wtop
     296/      7A : 21 5D EF            	ld	hl,dbg_wtop	
     297/      7D : AF                  	XOR	A
     298/      7E :                     
     299/      7E :                     dbg_wini:
     300/      7E : 77                  	ld	(hl), a
     301/      7F : 23                  	inc	hl
     302/      80 : 10 FC               	DJNZ	dbg_wini
     303/      82 :                     
     304/      82 : 3E 49               	ld	a, 'I'
     305/      84 : 32 57 EF            	ld	(TM_mode), a	; default call_in mode
     306/      87 : 3E 4E               	ld	a, 'N'
     307/      89 : 32 56 EF            	ld	(TP_mode), a	; default display reg mode
     308/      8C : 2E 00               	ld	l, 0
     309/      8E : 65                  	ld	h, l
     310/      8F : 22 58 EF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     311/      92 : AF                  	xor	a
     312/      93 : 32 5C EF            	ld	(fever_t), a	; clear flag trace forever
     313/      96 :                     	; init bp, tp, gstop address & opcode
     314/      96 : 21 00 C0            	ld	hl, RAM_B
     315/      99 : 22 5F EF            	ld	(tpt1_adr), hl
     316/      9C : 22 63 EF            	ld	(tpt2_adr), hl
     317/      9F : 22 67 EF            	ld	(bpt1_adr), hl
     318/      A2 : 22 6B EF            	ld	(bpt2_adr), hl
     319/      A5 : 22 6F EF            	ld	(tmpb_adr), hl
     320/      A8 : 7E                  	ld	a, (hl)
     321/      A9 : 32 5E EF            	ld	(tpt1_op), a
     322/      AC : 32 62 EF            	ld	(tpt2_op), a
     323/      AF : 32 66 EF            	ld	(bpt1_op), a
     324/      B2 : 32 6A EF            	ld	(bpt2_op), a
     325/      B5 : 32 6E EF            	ld	(tmpb_op), a
     326/      B8 :                     	
     327/      B8 :                     ;; Opening message
     328/      B8 :                     
     329/      B8 : 21 0E 1D            	LD	HL,OPNMSG
     330/      BB : CD 47 17            	CALL	STROUT
     331/      BE :                     ;	EI
     332/      BE :                     
     333/      BE :                     WSTART:
     334/      BE : 21 4B 1D            	LD	HL,PROMPT
     335/      C1 : CD 47 17            	CALL	STROUT
     336/      C4 : CD A7 17            	CALL	GETLIN
     337/      C7 : CD 01 18            	CALL	SKIPSP
     338/      CA :                     ;	CALL	UPPER
     339/      CA : B7                  	OR	A
     340/      CB : 28 F1               	JR	Z, WSTART
     341/      CD :                     
     342/      CD : FE 44               	CP	'D'
     343/      CF : CA 60 06            	JP	Z, DUMP
     344/      D2 : FE 47               	CP	'G'
     345/      D4 : CA 46 13            	JP	Z, GO
     346/      D7 : FE 53               	CP	'S'
     347/      D9 : CA 0D 14            	JP	Z, SETM
     348/      DC :                     
     349/      DC : FE 4C               	CP	'L'
     350/      DE : CA 83 14            	JP	Z, LOADH
     351/      E1 : FE 50               	CP	'P'
     352/      E3 : CA 5D 15            	JP	Z, SAVEH
     353/      E6 :                     
     354/      E6 : FE 52               	CP	'R'
     355/      E8 : CA 35 16            	JP	Z, REG
     356/      EB :                     
     357/      EB : FE 23               	cp	'#'
     358/      ED : CA 0E 01            	jp	Z, Launcher
     359/      F0 :                     
     360/      F0 : FE 42               	cp	'B'
     361/      F2 : CA 22 02            	jp	z, brk_cmd	; break point command
     362/      F5 :                     	
     363/      F5 : FE 54               	cp	'T'
     364/      F7 : CA D7 02            	jp	z, trace_cmd	; trace point command
     365/      FA :                     
     366/      FA : FE 3F               	cp	'?'
     367/      FC : 28 08               	jr	z, command_hlp	; command help message
     368/      FE :                     
     369/      FE :                     ERR:
     370/      FE : 21 68 1D            	LD	HL,ERRMSG
     371/     101 : CD 47 17            	CALL	STROUT
     372/     104 : 18 B8               	JR	WSTART
     373/     106 :                     
     374/     106 :                     ;;
     375/     106 :                     ;; command help
     376/     106 :                     ;;
     377/     106 :                     command_hlp:
     378/     106 :                     
     379/     106 : 21 64 1B            	LD	HL, cmd_hlp
     380/     109 : CD 47 17            	CALL	STROUT
     381/     10C : 18 B0               	JR	WSTART
     382/     10E :                     
     383/     10E :                     ;;
     384/     10E :                     ;; Launch appended program
     385/     10E :                     ;;
     386/     10E :                     Launcher:
     387/     10E : 23                  	INC	HL
     388/     10F : CD 01 18            	CALL	SKIPSP		; A <- next char
     389/     112 :                     ;	CALL	UPPER
     390/     112 : B7                  	OR	A
     391/     113 : 28 E9               	JR	Z,ERR
     392/     115 :                     
     393/     115 :                     	; check L or number
     394/     115 :                     	
     395/     115 : FE 4C               	cp	'L'
     396/     117 : 28 25               	JR	Z,LST_PRG	; list append program
     397/     119 :                     
     398/     119 :                     	; check number
     399/     119 :                     
     400/     119 : CD B6 01            	call	GET_NUM		; return BC : number
     401/     11C : 38 E0               	JR	C, ERR
     402/     11E :                     
     403/     11E :                     	; check number
     404/     11E : 79                  	LD	A, C
     405/     11F : FE 11               	CP	(lanch1 - ApendTBL)/2 +1	; a < 17 ?
     406/     121 : D2 FE 00            	JP	NC, ERR
     407/     124 : B7                  	OR	A				; check '0'
     408/     125 : CA FE 00            	JP	Z, ERR
     409/     128 :                     
     410/     128 :                     	; A <- append program No.
     411/     128 :                     
     412/     128 : 3D                  	DEC	A	; 0 <= A <= 0FH
     413/     129 : 17                  	RLA		; A = A * 2
     414/     12A : 16 00               	LD	D, 0
     415/     12C : 5F                  	LD	E, A
     416/     12D : 21 5C 01            	LD	HL, ApendTBL
     417/     130 : 19                  	ADD	HL, DE	; get lanch address point
     418/     131 : 5E                  	LD	E, (HL)
     419/     132 : 23                  	INC	HL
     420/     133 : 56                  	LD	D, (HL)	; DE : JUMP POINT
     421/     134 :                     
     422/     134 :                     	; Jump to append program
     423/     134 :                     	
     424/     134 : EB                  	EX	DE, HL
     425/     135 : 5E                  	LD	E, (HL)
     426/     136 : 23                  	INC	HL
     427/     137 : 56                  	LD	D, (HL)	; DE : jump address
     428/     138 : 7A                  	LD	A, D
     429/     139 : B3                  	OR	E	; address check
     430/     13A : 28 C2               	JR	Z,ERR	; jump address NULL
     431/     13C : EB                  	EX	DE, HL
     432/     13D : E9                  	JP	(HL)	; lanch append program
     433/     13E :                     	
     434/     13E :                     	; List out append program
     435/     13E :                     LST_PRG:
     436/     13E :                     	; get address to DE
     437/     13E : 21 5C 01            	LD	HL, ApendTBL
     438/     141 :                     
     439/     141 :                     LST_PRG1:
     440/     141 : 5E                  	LD	E, (HL)
     441/     142 : 23                  	INC	HL
     442/     143 : 56                  	LD	D, (HL)
     443/     144 : 23                  	INC	HL
     444/     145 :                     
     445/     145 : D5                  	PUSH	DE
     446/     146 : DD E1               	POP	IX	; IX <-DE
     447/     148 : DD 7E 00            	LD	A, (IX+0)
     448/     14B : DD B6 01            	OR	(IX+1)
     449/     14E : 28 09               	JR	Z, LST_END
     450/     150 : 13                  	INC	DE
     451/     151 : 13                  	INC	DE	; get string address
     452/     152 :                     	
     453/     152 : EB                  	EX	DE, HL
     454/     153 : CD 47 17            	CALL	STROUT
     455/     156 : EB                  	EX	DE, HL
     456/     157 : 18 E8               	JR	LST_PRG1
     457/     159 :                     
     458/     159 :                     LST_END:
     459/     159 : C3 BE 00            	JP	WSTART
     460/     15C :                     	
     461/     15C :                     ; Append program launch table
     462/     15C :                     ;
     463/     15C :                     ApendTBL:
     464/     15C : 7C 01               	dw	lanch1
     465/     15E : 98 01               	dw	lanch2
     466/     160 : B4 01               	dw	lanch3
     467/     162 : B4 01               	dw	lanch4
     468/     164 : B4 01               	dw	lanch5
     469/     166 : B4 01               	dw	lanch6
     470/     168 : B4 01               	dw	lanch7
     471/     16A : B4 01               	dw	lanch8
     472/     16C : B4 01               	dw	lanch9
     473/     16E : B4 01               	dw	lanch10
     474/     170 : B4 01               	dw	lanch11
     475/     172 : B4 01               	dw	lanch12
     476/     174 : B4 01               	dw	lanch13
     477/     176 : B4 01               	dw	lanch14
     478/     178 : B4 01               	dw	lanch15
     479/     17A : B4 01               	dw	lanch16
     480/     17C :                     	
     481/     17C :                     lanch1:
     482/     17C : 00 20               	dw	BASIC_CST
     483/     17E : 31 2E 20 42 41 53   	DB	"1. BASIC4.7b Cold Start",CR,LF,00H
              184 : 49 43 34 2E 37 62 
              18A : 20 43 6F 6C 64 20 
              190 : 53 74 61 72 74 0D 
              196 : 0A 00             
     484/     198 :                     lanch2:
     485/     198 : 03 20               	dw	BASIC_WST
     486/     19A : 32 2E 20 42 41 53   	DB	"2. BASIC4.7b Warm Start",CR,LF,00H
              1A0 : 49 43 34 2E 37 62 
              1A6 : 20 57 61 72 6D 20 
              1AC : 53 74 61 72 74 0D 
              1B2 : 0A 00             
     487/     1B4 :                     
     488/     1B4 :                     lanch3:
     489/     1B4 :                     lanch4:
     490/     1B4 :                     lanch5:
     491/     1B4 :                     lanch6:
     492/     1B4 :                     lanch7:
     493/     1B4 :                     lanch8:
     494/     1B4 :                     lanch9:
     495/     1B4 :                     lanch10:
     496/     1B4 :                     lanch11:
     497/     1B4 :                     lanch12:
     498/     1B4 :                     lanch13:
     499/     1B4 :                     lanch14:
     500/     1B4 :                     lanch15:
     501/     1B4 :                     lanch16:
     502/     1B4 : 00 00               	dw	0
     503/     1B6 :                     
     504/     1B6 :                     	; get number
     505/     1B6 :                     	; input HL : string buffer
     506/     1B6 :                     	;
     507/     1B6 :                     	; Return
     508/     1B6 :                     	; CF =1 : Error
     509/     1B6 :                     	; BC: Calculation result
     510/     1B6 :                     
     511/     1B6 :                     GET_NUM:
     512/     1B6 : AF                  	XOR	A		; Initialize C
     513/     1B7 : 47                  	LD	B, A
     514/     1B8 : 4F                  	LD	C, A		; clear BC
     515/     1B9 :                     	
     516/     1B9 :                     GET_NUM0:
     517/     1B9 : CD 01 18            	CALL	SKIPSP		; A <- next char
     518/     1BC :                     ;	CALL	UPPER
     519/     1BC : B7                  	OR	A
     520/     1BD : C8                  	RET	Z		; ZF=1, ok! buffer end
     521/     1BE :                     
     522/     1BE : CD D4 01            	CALL	GET_BI
     523/     1C1 : D8                  	RET	C
     524/     1C2 :                     
     525/     1C2 : F5                  	push	af
     526/     1C3 : 08                  	EX	AF, AF'		;'AF <> AF: save A
     527/     1C4 : F1                  	pop	af
     528/     1C5 : CD E3 01            	CALL	MUL_10		; BC = BC * 10
     529/     1C8 : D8                  	RET	C		; overflow error
     530/     1C9 : 08                  	EX	AF, AF'		;'AF <> AF: restor A
     531/     1CA :                     
     532/     1CA : 16 00               	ld	d, 0
     533/     1CC : 5F                  	ld	e, a
     534/     1CD : CD FA 01            	CALL	BC_PLUS_DE	; BC = BC + A
     535/     1D0 : D8                  	RET	C		; overflow error
     536/     1D1 :                     				; result: BC = BC * 10 + A
     537/     1D1 : 23                  	INC	HL
     538/     1D2 : 18 E5               	JR	GET_NUM0
     539/     1D4 :                     ;
     540/     1D4 :                     ; Make binary to A
     541/     1D4 :                     ; ERROR if CF=1
     542/     1D4 :                     ;
     543/     1D4 :                     GET_BI:
     544/     1D4 : B7                  	OR	A
     545/     1D5 : 28 0A               	JR	Z, UP_BI
     546/     1D7 : FE 30               	CP	'0'
     547/     1D9 : D8                  	RET	C
     548/     1DA :                     	
     549/     1DA : FE 3A               	CP	'9'+1	; ASCII':'
     550/     1DC : 30 03               	JR	NC, UP_BI
     551/     1DE : D6 30               	SUB	'0'	; Make binary to A
     552/     1E0 : C9                  	RET
     553/     1E1 :                     
     554/     1E1 :                     UP_BI:
     555/     1E1 : 37                  	SCF		; Set CF
     556/     1E2 : C9                  	RET
     557/     1E3 :                     
     558/     1E3 :                     ;
     559/     1E3 :                     ; multiply by 10
     560/     1E3 :                     ; BC = BC * 10
     561/     1E3 :                     MUL_10:
     562/     1E3 : C5                  	push	bc
     563/     1E4 : CB 21               	SLA	C
     564/     1E6 : CB 10               	RL	B		; 2BC
     565/     1E8 : CB 21               	SLA	C
     566/     1EA : CB 10               	RL	B		; 4BC
     567/     1EC : CB 21               	SLA	C
     568/     1EE : CB 10               	RL	B		; 8BC
     569/     1F0 : D1                  	pop	de		; de = bc
     570/     1F1 : D8                  	ret	c
     571/     1F2 : CD FA 01            	CALL	BC_PLUS_DE	; 9BC
     572/     1F5 : D8                  	ret	c
     573/     1F6 : CD FA 01            	CALL	BC_PLUS_DE	; 10BC
     574/     1F9 : C9                  	RET			; result : BC = BC * 10
     575/     1FA :                     ;
     576/     1FA :                     ; BC = BC + DE
     577/     1FA :                     BC_PLUS_DE:
     578/     1FA : E5                  	push	hl
     579/     1FB :                     
     580/     1FB : D5                  	push	de
     581/     1FC : E1                  	pop	hl
     582/     1FD :                     
     583/     1FD : 09                  	add	hl, bc
     584/     1FE :                     
     585/     1FE : E5                  	push	hl
     586/     1FF : C1                  	pop	bc
     587/     200 :                     
     588/     200 : E1                  	pop	hl
     589/     201 : C9                  	RET
     590/     202 :                     
     591/     202 :                     ;
     592/     202 :                     ; list break point
     593/     202 :                     ;
     594/     202 :                     b_list:
     595/     202 : 3A 65 EF            	ld	a, (bpt1_f)
     596/     205 : B7                  	or	a
     597/     206 : 28 08               	jr	z, b_list1
     598/     208 :                     
     599/     208 : 2A 67 EF            	ld	hl, (bpt1_adr)
     600/     20B : 3E 31               	ld	a, '1'
     601/     20D : CD BD 02            	call	b_msg_out
     602/     210 :                     
     603/     210 :                     b_list1:
     604/     210 : 3A 69 EF            	ld	a, (bpt2_f)
     605/     213 : B7                  	or	a
     606/     214 : CA BE 00            	jp	z, WSTART
     607/     217 :                     
     608/     217 : 2A 6B EF            	ld	hl, (bpt2_adr)
     609/     21A : 3E 32               	ld	a, '2'
     610/     21C : CD BD 02            	call	b_msg_out
     611/     21F : C3 BE 00            	JP	WSTART
     612/     222 :                     
     613/     222 :                     
     614/     222 :                     ;;; 
     615/     222 :                     ;;; break point command
     616/     222 :                     ;;; 
     617/     222 :                     brk_cmd:
     618/     222 : 23                  	INC	HL
     619/     223 : CD 01 18            	CALL	SKIPSP		; A <- next char
     620/     226 :                     ;	CALL	UPPER
     621/     226 : B7                  	OR	A
     622/     227 : 28 D9               	JR	Z,b_list	; only type "B"
     623/     229 :                     
     624/     229 : 01 65 EF            	ld	bc, bpt1_f
     625/     22C : FE 31               	cp	'1'
     626/     22E : 28 0E               	jr	z, set_bp1
     627/     230 :                     
     628/     230 : 01 69 EF            	ld	bc, bpt2_f
     629/     233 : FE 32               	cp	'2'
     630/     235 : 28 07               	jr	z, set_bp1
     631/     237 :                     
     632/     237 : FE 43               	cp	'C'	;clear?
     633/     239 : 28 3E               	jr	z, bp_clr
     634/     23B : C3 FE 00            	jp	ERR
     635/     23E :                     
     636/     23E :                     set_bp1:
     637/     23E : 08                  	EX	AF, AF'
     638/     23F :                     
     639/     23F : 23                  	INC	HL
     640/     240 : CD 01 18            	CALL	SKIPSP		; A <- next char
     641/     243 :                     ;	CALL	UPPER
     642/     243 : B7                  	OR	A
     643/     244 : 28 5A               	JR	Z, bp_LOT 	;; No address input -> list out
     644/     246 : FE 2C               	cp	','
     645/     248 : C2 FE 00            	jp	nz, ERR
     646/     24B :                     
     647/     24B : 23                  	INC	HL
     648/     24C : CD 01 18            	CALL	SKIPSP
     649/     24F : C5                  	push	bc
     650/     250 : CD 11 18            	CALL	RDHEX		; 1st arg.
     651/     253 : E1                  	pop	hl		; hl <- bc
     652/     254 : DA FE 00            	jp	c, ERR
     653/     257 :                     
     654/     257 : CD 60 02            	call	setbpadr
     655/     25A : DA FE 00            	jp	c, ERR
     656/     25D : C3 BE 00            	JP	WSTART
     657/     260 :                     
     658/     260 :                     
     659/     260 :                     ; hl : point of bp flag( bpt1_f or bpt2_f)
     660/     260 :                     ; de : break point address
     661/     260 :                     
     662/     260 :                     ; check ram area, and set berak point
     663/     260 :                     ; 
     664/     260 :                     setbpadr:
     665/     260 : 7A                  	ld	a, d
     666/     261 : FE C0               	cp	RAM_B >> 8	; a - 0C0H
     667/     263 : DA 77 02            	jp	c, chkERR	; ROM area
     668/     266 : FE F0               	cp	IO_B >> 8	; a - 0F0H
     669/     268 : D2 77 02            	jp	nc, chkERR	; I/O area
     670/     26B : 3E 01               	ld	a,1
     671/     26D : 77                  	ld	(hl), a	; set flag
     672/     26E : 23                  	inc	hl
     673/     26F : 1A                  	ld	a, (de)		; get opcode
     674/     270 : 77                  	ld	(hl), a		; save opcode
     675/     271 : 23                  	inc	hl
     676/     272 : 73                  	ld	(hl), e ; set break point low address
     677/     273 : 23                  	inc	hl
     678/     274 : 72                  	ld	(hl), d ; set break point high address
     679/     275 : B7                  	or	a	; reset carry
     680/     276 : C9                  	ret
     681/     277 :                     
     682/     277 :                     chkERR:
     683/     277 : 37                  	scf	;set carry
     684/     278 : C9                  	ret
     685/     279 :                     
     686/     279 :                     ; clear break point
     687/     279 :                     
     688/     279 :                     bp_clr:
     689/     279 : 23                  	INC	HL
     690/     27A : CD 01 18            	CALL	SKIPSP		; A <- next char
     691/     27D :                     ;	CALL	UPPER
     692/     27D : B7                  	OR	A
     693/     27E : 28 14               	JR	Z,b_aclr	; all clear
     694/     280 :                     
     695/     280 : 01 65 EF            	ld	bc, bpt1_f
     696/     283 : FE 31               	cp	'1'
     697/     285 : 28 08               	jr	z, bp_clr1
     698/     287 :                     
     699/     287 : 01 69 EF            	ld	bc, bpt2_f
     700/     28A : FE 32               	cp	'2'
     701/     28C : C2 FE 00            	jp	nz, ERR
     702/     28F :                     
     703/     28F :                     bp_clr1:
     704/     28F : AF                  	xor	a
     705/     290 : 02                  	ld	(bc), a
     706/     291 : C3 BE 00            	JP	WSTART
     707/     294 :                     
     708/     294 :                     b_aclr:
     709/     294 : AF                  	xor	a
     710/     295 : 01 65 EF            	ld	bc, bpt1_f
     711/     298 : 02                  	ld	(bc), a
     712/     299 : 01 69 EF            	ld	bc, bpt2_f
     713/     29C : 02                  	ld	(bc), a
     714/     29D : C3 BE 00            	JP	WSTART
     715/     2A0 :                     
     716/     2A0 :                     ; when no address input. list out BP
     717/     2A0 :                     ;
     718/     2A0 :                     ; bc : break pointer buffer offset
     719/     2A0 :                     bp_LOT:
     720/     2A0 : 0A                  	ld	a, (bc)		; set break point?
     721/     2A1 : B7                  	or	a
     722/     2A2 : CA BE 00            	jp	z, WSTART	; no break point setting
     723/     2A5 :                     
     724/     2A5 : 08                  	EX	AF, AF'
     725/     2A6 : 2A 67 EF            	ld	hl, (bpt1_adr)
     726/     2A9 : FE 31               	cp	'1'
     727/     2AB : 28 03               	jr	z, l_b2
     728/     2AD : 2A 6B EF            	ld	hl, (bpt2_adr)
     729/     2B0 :                     l_b2:
     730/     2B0 : CD BD 02            	call	b_msg_out
     731/     2B3 : C3 BE 00            	JP	WSTART
     732/     2B6 :                     
     733/     2B6 : 42 50 28 00         bp_msg1:	db	"BP(",00H
     734/     2BA : 29 3A 00            bp_msg2:	db	"):",00H
     735/     2BD :                     
     736/     2BD :                     b_msg_out:
     737/     2BD : E5                  	push	hl
     738/     2BE : F5                  	push	af
     739/     2BF : 21 B6 02            	ld	hl, bp_msg1
     740/     2C2 : CD 47 17            	call	STROUT
     741/     2C5 : F1                  	pop	af
     742/     2C6 : CD B4 1F            	call	CONOUT
     743/     2C9 : 21 BA 02            	ld	hl, bp_msg2
     744/     2CC : CD 47 17            	call	STROUT
     745/     2CF : E1                  	pop	hl
     746/     2D0 : CD 50 17            	call	HEXOUT4
     747/     2D3 : CD 90 17            	call	CRLF	
     748/     2D6 : C9                  	ret
     749/     2D7 :                     
     750/     2D7 :                     ;;; 
     751/     2D7 :                     ;;; trace command
     752/     2D7 :                     ;;; 
     753/     2D7 :                     trace_cmd:
     754/     2D7 :                     
     755/     2D7 :                     ; T[address][,step数]
     756/     2D7 :                     ; TP[ON | OFF]
     757/     2D7 :                     ; TM[I | S]
     758/     2D7 :                     
     759/     2D7 :                     ; init steps
     760/     2D7 : E5                  	push	hl
     761/     2D8 : 2E 00               	ld	l, 0
     762/     2DA : 26 00               	ld	h, 0
     763/     2DC : 22 58 EF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     764/     2DF : 2A 42 EF            	ld	hl,(REGPC)
     765/     2E2 : 22 5A EF            	ld	(tmpT), hl	; init temp address
     766/     2E5 : AF                  	xor	a
     767/     2E6 : 32 5C EF            	ld	(fever_t), a	; clear flag trace forever
     768/     2E9 :                     
     769/     2E9 : E1                  	pop	hl
     770/     2EA : 23                  	inc	hl
     771/     2EB : CD 01 18            	CALL	SKIPSP
     772/     2EE : CD 11 18            	CALL	RDHEX		; 1st arg.
     773/     2F1 : D2 9D 03            	jp	nc, tadr_chk
     774/     2F4 : CD 01 18            	CALL	SKIPSP
     775/     2F7 : 7E                  	ld	a, (hl)
     776/     2F8 : B7                  	or	a
     777/     2F9 : CA C6 03            	Jp	z, t_op1	; only 1 step trace, check opcode
     778/     2FC : FE 2C               	cp	','
     779/     2FE : CA AE 03            	jp	z, stp_chk	; steps check
     780/     301 :                     
     781/     301 :                     ;	CALL	UPPER
     782/     301 : FE 50               	cp	'P'
     783/     303 : 28 4E               	jr	z, tp_cmd
     784/     305 : FE 4D               	cp	'M'
     785/     307 : C2 FE 00            	jp	nz, ERR
     786/     30A :                     	
     787/     30A :                     	; tm_cmd
     788/     30A :                     	
     789/     30A : 23                  	inc	hl
     790/     30B : CD 01 18            	CALL	SKIPSP		; A <- next char
     791/     30E :                     ;	CALL	UPPER
     792/     30E :                     dip_TM:
     793/     30E : 21 45 03            	ld	hl, tm_msg_i
     794/     311 : FE 49               	cp	'I'
     795/     313 : 28 10               	jr	z, set_TM
     796/     315 : 21 4B 03            	ld	hl, tm_msg_s
     797/     318 : FE 53               	cp	'S'
     798/     31A : 28 09               	jr	z, set_TM
     799/     31C : B7                  	or	a
     800/     31D : C2 FE 00            	jp	nz, ERR
     801/     320 :                     
     802/     320 :                     ;display T mode
     803/     320 : 3A 57 EF            	ld	a, (TM_mode)
     804/     323 : 18 E9               	jr	dip_TM
     805/     325 :                     
     806/     325 :                     ;set TM mode and display
     807/     325 :                     set_TM:
     808/     325 : 32 57 EF            	ld	(TM_mode),a
     809/     328 : E5                  	push	hl
     810/     329 : 21 36 03            	ld	hl, tm_msg_0
     811/     32C : CD 47 17            	call	STROUT
     812/     32F : E1                  	pop	hl
     813/     330 : CD 47 17            	call	STROUT
     814/     333 : C3 BE 00            	jp	WSTART
     815/     336 :                     
     816/     336 :                     tm_msg_0:
     817/     336 : 54 4D 20 6D 6F 64   	db	"TM mode:<CALL ", 00h
              33C : 65 3A 3C 43 41 4C 
              342 : 4C 20 00          
     818/     345 :                     tm_msg_i:
     819/     345 : 49 4E 3E 0D 0A 00   	db	"IN>", CR, LF, 00h
     820/     34B :                     tm_msg_s:
     821/     34B : 53 4B 49 50 3E 0D   	db	"SKIP>", CR, LF, 00h
              351 : 0A 00             
     822/     353 :                     	
     823/     353 :                     	
     824/     353 :                     	; tp_cmd
     825/     353 :                     tp_cmd:	
     826/     353 : 23                  	inc	hl
     827/     354 : CD 01 18            	CALL	SKIPSP		; A <- next char
     828/     357 :                     ;	CALL	UPPER
     829/     357 : B7                  	or	a
     830/     358 : 20 05               	jr	nz, tp_n1
     831/     35A : 3A 56 EF            	ld	a, (TP_mode)
     832/     35D : 18 09               	jr	tp_n2
     833/     35F :                     	
     834/     35F :                     tp_n1:
     835/     35F : FE 4F               	cp	'O'
     836/     361 : C2 FE 00            	jp	nz, ERR
     837/     364 : 23                  	inc	hl
     838/     365 : CD 01 18            	CALL	SKIPSP		; A <- next char
     839/     368 :                     ;	CALL	UPPER
     840/     368 :                     
     841/     368 :                     tp_n2:
     842/     368 : 21 92 03            	ld	hl, tp_msg_on
     843/     36B : FE 4E               	cp	'N'
     844/     36D : 28 08               	jr	z, tp_md_on
     845/     36F :                     
     846/     36F : 21 97 03            	ld	hl, tp_msg_off
     847/     372 : FE 46               	cp	'F'
     848/     374 : C2 FE 00            	jp	nz, ERR
     849/     377 :                     
     850/     377 :                     tp_md_on:
     851/     377 :                     	; set trace mode and display mode
     852/     377 : 32 56 EF            	ld	(TP_mode), a
     853/     37A : E5                  	push	hl
     854/     37B : 21 88 03            	ld	hl, tp_msg_0
     855/     37E : CD 47 17            	call	STROUT
     856/     381 : E1                  	pop	hl
     857/     382 : CD 47 17            	call	STROUT
     858/     385 : C3 BE 00            	jp	WSTART
     859/     388 :                     	
     860/     388 :                     tp_msg_0:
     861/     388 : 54 50 20 6D 6F 64   	db	"TP mode: ", 00h
              38E : 65 3A 20 00       
     862/     392 :                     tp_msg_on:
     863/     392 : 4F 4E 0D 0A 00      	db	"ON", CR, LF, 00h
     864/     397 :                     tp_msg_off:
     865/     397 : 4F 46 46 0D 0A 00   	db	"OFF", CR, LF, 00h
     866/     39D :                     
     867/     39D :                     tadr_chk:
     868/     39D : ED 53 5A EF         	ld	(tmpT), de	; set start address
     869/     3A1 : CD 01 18            	CALL	SKIPSP		; A <- next char
     870/     3A4 : B7                  	or	a
     871/     3A5 : 28 1F               	jr	z, t_op1	; 1step trace
     872/     3A7 : FE 2C               	cp	','
     873/     3A9 : 28 03               	jr	z, stp_chk
     874/     3AB : C3 FE 00            	jp	ERR
     875/     3AE :                     
     876/     3AE :                     stp_chk:
     877/     3AE : 23                  	inc	hl
     878/     3AF : CD 01 18            	CALL	SKIPSP		; A <- next char
     879/     3B2 : B7                  	or	a
     880/     3B3 : CA FE 00            	jp	z, ERR
     881/     3B6 : FE 2D               	cp	'-'
     882/     3B8 : 28 11               	jr	z, chk_fevre
     883/     3BA :                     
     884/     3BA :                     ; check steps
     885/     3BA :                     
     886/     3BA : CD B6 01            	call	GET_NUM		; get steps to BC
     887/     3BD : DA FE 00            	JP	C, ERR		; number error
     888/     3C0 :                     
     889/     3C0 :                     t_op11:
     890/     3C0 : ED 43 58 EF         	ld	(TC_cnt), bc	; set trace step counter
     891/     3C4 : 18 1B               	jr	t_op_chk
     892/     3C6 :                     
     893/     3C6 :                     t_op1:
     894/     3C6 : 01 01 00            	ld	bc, 1
     895/     3C9 : 18 F5               	jr	t_op11
     896/     3CB :                     
     897/     3CB :                     chk_fevre:
     898/     3CB : 23                  	inc	hl
     899/     3CC : CD 01 18            	CALL	SKIPSP		; A <- next char
     900/     3CF : FE 31               	cp	'1'
     901/     3D1 : C2 FE 00            	jp	nz, ERR
     902/     3D4 : 23                  	inc	hl
     903/     3D5 : CD 01 18            	CALL	SKIPSP		; A <- next char
     904/     3D8 : B7                  	or	a
     905/     3D9 : C2 FE 00            	jp	nz, ERR		; not "-1" then error
     906/     3DC : 3E 01               	ld	a, 1
     907/     3DE : 32 5C EF            	ld	(fever_t), a	; set flag trace forever
     908/     3E1 :                     
     909/     3E1 :                     t_op_chk:
     910/     3E1 : 2A 5A EF            	ld	hl, (tmpT)	; get PC address
     911/     3E4 : 7E                  	ld	a, (hl)		; get opcode
     912/     3E5 :                     	
     913/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     914/     3E5 :                     ;;;
     915/     3E5 :                     ;;; branch opecode check
     916/     3E5 :                     ;;;
     917/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     918/     3E5 :                     
     919/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     920/     3E5 :                     ; 2 insertion Trace code(TC) 
     921/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     922/     3E5 :                     INSTC2:
     923/     3E5 :                     	; check 1 byte machine code: branch (RET CC)
     924/     3E5 :                     
     925/     3E5 : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
     926/     3E8 : 21 7E 05            	ld	hl, RETCC_TBLS
     927/     3EB : ED B1               	cpir
     928/     3ED : 20 13               	jr	nz, next_bc1	; not RET CC
     929/     3EF :                     
     930/     3EF :                     	; RET CC
     931/     3EF :                     	; trace operation:
     932/     3EF :                     	;   1. ea = *REGSP; *ea = TC;
     933/     3EF :                     	;   2. ea = *REGPC; *(ea+1) = TC;
     934/     3EF :                     
     935/     3EF :                     	; 1
     936/     3EF : 0E 01               	ld	c, 1		; first TC point
     937/     3F1 : CD 47 05            	call	insBRK_sp
     938/     3F4 : DA 06 05            	jp	c, err_trace_seq
     939/     3F7 :                     	
     940/     3F7 :                     	; 2
     941/     3F7 : 0E 02               	ld	c, 2		; second TC point
     942/     3F9 : CD 27 05            	call	insBRK_1op
     943/     3FC : DA 06 05            	jp	c, err_trace_seq
     944/     3FF :                     
     945/     3FF : C3 03 05            	jp	END_INS_TC
     946/     402 :                     
     947/     402 :                     	; check 2 byte machine code: branch (JR CC, Relative Value)
     948/     402 :                     next_bc1:
     949/     402 :                     
     950/     402 : 01 05 00            	ld	bc, JRCC_TBLE - JRCC_TBLS
     951/     405 : 21 86 05            	ld	hl, JRCC_TBLS
     952/     408 : ED B1               	cpir
     953/     40A : 20 19               	jr	nz, next_bc2	; not JR CC
     954/     40C :                     
     955/     40C :                     	; JR CC, nn
     956/     40C :                     	; trace operation:
     957/     40C :                     	;   1. ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
     958/     40C :                     	;   2. ea = *REGPC; *(ea+2) = TC;
     959/     40C :                     
     960/     40C :                     	; 1
     961/     40C : 0E 01               	ld	c, 1		; first TC point
     962/     40E : 2A 5A EF            	ld	hl, (tmpT)
     963/     411 : CD 1A 05            	call	Rel_adr_c
     964/     414 : CD 54 05            	call	inadr_chk_and_wrt
     965/     417 : DA 06 05            	jp	c, err_trace_seq
     966/     41A :                     
     967/     41A :                     	; 2
     968/     41A : 0E 02               	ld	c, 2		; second TC point
     969/     41C : CD 2C 05            	call	insBRK_2op
     970/     41F : DA 06 05            	jp	c, err_trace_seq
     971/     422 :                     
     972/     422 : C3 03 05            	jp	END_INS_TC
     973/     425 :                     
     974/     425 :                     	; check 3 byte machine code: branch JP CC, nnnn 16bit literal)
     975/     425 :                     
     976/     425 :                     next_bc2:
     977/     425 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
     978/     428 : 21 8B 05            	ld	hl, JPCC_TBLS
     979/     42B : ED B1               	cpir
     980/     42D : 20 04               	jr	nz, next_bc21		; not JP CCC
     981/     42F :                     
     982/     42F :                     	; JP CC, nnnn
     983/     42F :                     	; trace operation:
     984/     42F :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
     985/     42F :                     	;   2. ea = *REGPC; *(ea+3) = TC;
     986/     42F :                     
     987/     42F : 0E 01               	ld	c, 1		; first TC point
     988/     431 : 18 13               	jr	next_bc222
     989/     433 :                     
     990/     433 :                     	; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
     991/     433 :                     
     992/     433 :                     next_bc21:
     993/     433 : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
     994/     436 : 21 93 05            	ld	hl, CLCC_TBLS
     995/     439 : ED B1               	cpir
     996/     43B : 20 1A               	jr	nz, INSTC1		; not CALL CCC
     997/     43D :                     
     998/     43D :                     	; CALL CC, nnnn
     999/     43D :                     	; trace operation:
    1000/     43D :                     	; TM_mode = 'I'
    1001/     43D :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
    1002/     43D :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1003/     43D :                     	;
    1004/     43D :                     	; TM_mode = 'S'
    1005/     43D :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1006/     43D :                     
    1007/     43D : 0E 01               	ld	c, 1		; first TC point
    1008/     43F : 3A 57 EF            	ld	a, (TM_mode)
    1009/     442 : FE 53               	cp	'S'
    1010/     444 : 28 08               	jr	z, next_bc22	; skip insertion 1.
    1011/     446 :                     
    1012/     446 :                     next_bc222:
    1013/     446 :                     	; 1. ea = *REGPC; *((char *)(ea+1)) = TC;
    1014/     446 : CD 3B 05            	call	insBRK_brp
    1015/     449 : DA 06 05            	jp	c, err_trace_seq
    1016/     44C :                     	
    1017/     44C :                     next_bc221:
    1018/     44C :                     	; 2. ea = *REGPC; *(ea+3) = TC;
    1019/     44C : 0E 02               	ld	c, 2		; second TC point
    1020/     44E :                     next_bc22:
    1021/     44E : CD 31 05            	call	insBRK_3op
    1022/     451 : DA 06 05            	jp	c, err_trace_seq
    1023/     454 :                     
    1024/     454 : C3 03 05            	jp	END_INS_TC
    1025/     457 :                     
    1026/     457 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1027/     457 :                     ; 1 insertion Trace code(TC) 
    1028/     457 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1029/     457 :                     INSTC1:
    1030/     457 :                     	; check 1 byte machine code: branch (return)
    1031/     457 : FE C9               	cp	0C9H		; RET ?
    1032/     459 : 20 0B               	jr	nz, next_bc3	; not RET
    1033/     45B :                     
    1034/     45B :                     	; RET
    1035/     45B :                     	; trace operation:
    1036/     45B :                     	;   ea = *REGSP; *ea = TC;
    1037/     45B : 0E 01               	ld	c, 1		; first TC point
    1038/     45D : CD 47 05            	call	insBRK_sp
    1039/     460 : DA 06 05            	jp	c, err_trace_seq
    1040/     463 : C3 03 05            	jp	END_INS_TC
    1041/     466 :                     
    1042/     466 :                     	; check RST p
    1043/     466 :                     next_bc3:
    1044/     466 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    1045/     469 : 21 9B 05            	ld	hl, RST_TBLS
    1046/     46C : ED B1               	cpir
    1047/     46E : 20 0B               	jr	nz, next_bc4		; not RST p
    1048/     470 :                     
    1049/     470 :                     	; RST p
    1050/     470 :                     	; can't trace: skip trace
    1051/     470 :                     	; trace operation:
    1052/     470 :                     	;   ea = *REGPC; *(ea+1) = TC;
    1053/     470 :                     ;	ld	hl, RST_DMSG
    1054/     470 :                     ;	call	STROUT		; message out "DETECT RST OPCODE"
    1055/     470 : 0E 01               	ld	c, 1		; first TC point
    1056/     472 : CD 27 05            	call	insBRK_1op
    1057/     475 : DA 06 05            	jp	c, err_trace_seq
    1058/     478 :                     	
    1059/     478 : C3 03 05            	jp	END_INS_TC
    1060/     47B :                     
    1061/     47B :                     ;RST_DMSG:
    1062/     47B :                     ;	db	"(RST nn) WILL BE SKIPPED. AND TRACE NEXT OPCODE", CR, LF,00
    1063/     47B :                     
    1064/     47B :                     	; check code 0EDH
    1065/     47B :                     next_bc4:
    1066/     47B : FE ED               	cp	0EDH		; CODE 0EDH ?
    1067/     47D : 20 13               	jr	nz, next_bc5	; not 0EDH
    1068/     47F :                     
    1069/     47F : 23                  	inc	hl
    1070/     480 : 7E                  	ld	a, (hl)
    1071/     481 : FE 45               	cp	45H		; RETN?
    1072/     483 : 28 04               	jr	z, next_bc6	; yes, RETN
    1073/     485 : FE 4D               	cp	4DH		; RETI?
    1074/     487 : 20 09               	jr	nz, next_bc5	; not RETN
    1075/     489 :                     
    1076/     489 :                     	; trace operation:
    1077/     489 :                     	;   ea = *REGSP; *ea = TC;
    1078/     489 :                     next_bc6:
    1079/     489 : 0E 01               	ld	c, 1		; first TC point
    1080/     48B : CD 47 05            	call	insBRK_sp
    1081/     48E : 38 76               	jr	c, err_trace_seq
    1082/     490 : 18 71               	jr	END_INS_TC
    1083/     492 :                     
    1084/     492 :                     	; check JP (HL)
    1085/     492 :                     next_bc5:
    1086/     492 : 2A 5A EF            	ld	hl, (tmpT)
    1087/     495 : 7E                  	ld	a, (hl)
    1088/     496 :                     
    1089/     496 : FE E9               	cp	0E9H		; JP (HL) ?
    1090/     498 : 20 0C               	jr	nz, next_bc7	; not JP (HL)
    1091/     49A :                     
    1092/     49A :                     	; JP (HL)
    1093/     49A :                     	; trace operation:
    1094/     49A :                     	;   ea = *REGHL; *ea = TC;
    1095/     49A : 2A 32 EF            	ld	hl, (REGHL)
    1096/     49D :                     jphl:
    1097/     49D : 0E 01               	ld	c, 1		; first TC point
    1098/     49F : CD 54 05            	call	inadr_chk_and_wrt
    1099/     4A2 : 38 62               	jr	c, err_trace_seq
    1100/     4A4 : 18 5D               	jr	END_INS_TC
    1101/     4A6 :                     
    1102/     4A6 :                     	; check JP (IX)
    1103/     4A6 :                     next_bc7:
    1104/     4A6 : FE DD               	cp	0DDH		; 1st OPOCDE 0DDH ?
    1105/     4A8 : 20 0B               	jr	nz, next_bc8	; no 0DDH
    1106/     4AA : 23                  	inc	hl
    1107/     4AB : 7E                  	ld	a, (hl)
    1108/     4AC : FE E9               	cp	0E9H		; JP (IX) ?
    1109/     4AE : 20 05               	jr	nz, next_bc8	; not JP (IX)
    1110/     4B0 :                     
    1111/     4B0 :                     	; JP (IX)
    1112/     4B0 :                     	; trace operation:
    1113/     4B0 :                     	;   ea = *REGIX; *ea = TC;
    1114/     4B0 : 2A 3C EF            	ld	hl, (REGIX)
    1115/     4B3 : 18 E8               	jr	jphl
    1116/     4B5 :                     
    1117/     4B5 :                     	; check JP (IY)
    1118/     4B5 :                     next_bc8:
    1119/     4B5 : 2A 5A EF            	ld	hl, (tmpT)
    1120/     4B8 : 7E                  	ld	a, (hl)
    1121/     4B9 :                     
    1122/     4B9 : FE FD               	cp	0FDH		; 1st OPOCDE 0FDH ?
    1123/     4BB : 20 0B               	jr	nz, next_bc9	; no 0FDH
    1124/     4BD : 23                  	inc	hl
    1125/     4BE : 7E                  	ld	a, (hl)
    1126/     4BF : FE E9               	cp	0E9H		; JP (IX) ?
    1127/     4C1 : 20 05               	jr	nz, next_bc9	; not JP (IX)
    1128/     4C3 :                     
    1129/     4C3 :                     	; JP (IY)
    1130/     4C3 :                     	; trace operation:
    1131/     4C3 :                     	;   ea = *REGIY; *ea = TC;
    1132/     4C3 : 2A 3E EF            	ld	hl, (REGIY)
    1133/     4C6 : 18 D5               	jr	jphl
    1134/     4C8 :                     
    1135/     4C8 :                     	; check JR relative
    1136/     4C8 :                     next_bc9:
    1137/     4C8 : 2A 5A EF            	ld	hl, (tmpT)
    1138/     4CB : 7E                  	ld	a, (hl)
    1139/     4CC : FE 18               	cp	18H		; JR relative ?
    1140/     4CE : 20 0C               	jr	nz, next_bc10	; not JR relative
    1141/     4D0 :                     
    1142/     4D0 :                     	; JR Relative
    1143/     4D0 :                     	; trace operation:
    1144/     4D0 :                     	;   ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
    1145/     4D0 : 0E 01               	ld	c, 1		; first TC point
    1146/     4D2 : CD 1A 05            	call	Rel_adr_c
    1147/     4D5 : CD 54 05            	call	inadr_chk_and_wrt
    1148/     4D8 : 38 2C               	jr	c, err_trace_seq
    1149/     4DA : 18 27               	jr	END_INS_TC
    1150/     4DC :                     
    1151/     4DC :                     	; check JP literal
    1152/     4DC :                     next_bc10:
    1153/     4DC : FE C3               	cp	0C3H		; JP literal ?
    1154/     4DE : 20 09               	jr	nz, next_bc11	; not JP literal
    1155/     4E0 :                     
    1156/     4E0 :                     	; JP literal
    1157/     4E0 :                     	; trace operation:
    1158/     4E0 :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1159/     4E0 : 0E 01               	ld	c, 1		; first TC point
    1160/     4E2 : CD 3B 05            	call	insBRK_brp
    1161/     4E5 : 38 1F               	jr	c, err_trace_seq
    1162/     4E7 : 18 1A               	jr	END_INS_TC
    1163/     4E9 :                     
    1164/     4E9 :                     	; check call literal
    1165/     4E9 :                     next_bc11:
    1166/     4E9 : FE CD               	cp	0CDH		; CALL literal ?
    1167/     4EB : C2 A3 05            	jp	nz, INS2	; no, check not branch opcode 
    1168/     4EE :                     
    1169/     4EE :                     	; CALL literal
    1170/     4EE :                     	; trace operation:
    1171/     4EE :                     	; TM_mode = 'I'
    1172/     4EE :                     	;   ea = *REGPC; *((short *)(ea+1)) = TC;
    1173/     4EE :                     	; TM_mode = 'S'
    1174/     4EE :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1175/     4EE :                     
    1176/     4EE : 0E 01               	ld	c, 1		; first TC point
    1177/     4F0 : 3A 57 EF            	ld	a, (TM_mode)
    1178/     4F3 : FE 53               	cp	'S'
    1179/     4F5 : 28 07               	jr	z, next_bc111	; yes, TM_mode='S'
    1180/     4F7 :                     
    1181/     4F7 :                     	; TM_mode = 'I'
    1182/     4F7 :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1183/     4F7 : CD 3B 05            	call	insBRK_brp
    1184/     4FA : 38 0A               	jr	c, err_trace_seq
    1185/     4FC : 18 05               	jr	END_INS_TC
    1186/     4FE :                     
    1187/     4FE :                     	; TM_mode = 'S'
    1188/     4FE :                     	; ea = *REGPC; *(ea+3) = TC;
    1189/     4FE :                     next_bc111:
    1190/     4FE : CD 31 05            	call	insBRK_3op
    1191/     501 : 38 03               	jr	c, err_trace_seq
    1192/     503 :                     
    1193/     503 :                     END_INS_TC:
    1194/     503 : C3 89 13            	jp	G0	; go, trace operation
    1195/     506 :                     
    1196/     506 :                     err_trace_seq:
    1197/     506 : 21 10 05            	ld	hl, terr_msg
    1198/     509 : CD 47 17            	call	STROUT
    1199/     50C : C3 BE 00            	JP	WSTART
    1200/     50F : FF                  	rst	38h
    1201/     510 :                     ;	
    1202/     510 : 41 64 72 20 45 52   terr_msg:	db	"Adr ERR", CR, LF, 00H
              516 : 52 0D 0A 00       
    1203/     51A :                     
    1204/     51A :                     ;--------------------------------------
    1205/     51A :                     ; 2 byte machine code branch
    1206/     51A :                     ; - 2nd byte is Relative address
    1207/     51A :                     ; - input hl : opecode address
    1208/     51A :                     ; - output hl : target address
    1209/     51A :                     ;--------------------------------------
    1210/     51A :                     Rel_adr_c:
    1211/     51A : 23                  	inc	hl
    1212/     51B : 5E                  	ld	e, (hl)		; e = 2nd operand
    1213/     51C : 23                  	inc	hl		; hl = PC + 2
    1214/     51D : 16 FF               	ld	d, 0ffh
    1215/     51F : CB 7B               	bit	7, e		; test msb bit
    1216/     521 : 20 02               	jr	nz, exp_msb	; 
    1217/     523 : 16 00               	ld	d, 0
    1218/     525 :                     exp_msb:
    1219/     525 : 19                  	add	hl, de
    1220/     526 : C9                  	ret
    1221/     527 :                     
    1222/     527 :                     ;--------------------------------------
    1223/     527 :                     ; 1 byte op code, insert TC
    1224/     527 :                     ; ea = *REGPC; *(ea+1) = TC
    1225/     527 :                     ;--------------------------------------
    1226/     527 :                     insBRK_1op:
    1227/     527 :                     ;	ld	hl, (REGPC)
    1228/     527 : 2A 5A EF            	ld	hl, (tmpT)
    1229/     52A : 18 0A               	jr	ib1
    1230/     52C :                     	
    1231/     52C :                     ;--------------------------------------
    1232/     52C :                     ; 2 byte op code, insert TC
    1233/     52C :                     ; ea = *REGPC; *(ea+2) = TC
    1234/     52C :                     ;--------------------------------------
    1235/     52C :                     insBRK_2op:
    1236/     52C :                     ;	ld	hl, (REGPC)
    1237/     52C : 2A 5A EF            	ld	hl, (tmpT)
    1238/     52F : 18 04               	jr	ib2
    1239/     531 :                     	
    1240/     531 :                     ;--------------------------------------
    1241/     531 :                     ; 3 byte op code, insert TC
    1242/     531 :                     ; ea = *REGPC; *(ea+3) = TC;
    1243/     531 :                     ;--------------------------------------
    1244/     531 :                     insBRK_3op:
    1245/     531 :                     ;	ld	hl, (REGPC)
    1246/     531 : 2A 5A EF            	ld	hl, (tmpT)
    1247/     534 :                     ib3:
    1248/     534 : 23                  	inc	hl
    1249/     535 :                     ib2:
    1250/     535 : 23                  	inc	hl
    1251/     536 :                     ib1:
    1252/     536 : 23                  	inc	hl
    1253/     537 : CD 54 05            	call	inadr_chk_and_wrt
    1254/     53A : C9                  	ret
    1255/     53B :                     
    1256/     53B :                     ;--------------------------------------
    1257/     53B :                     ; 3 byte op code, insert TC in branch point
    1258/     53B :                     ; ea = *REGPC; *((char *)(ea+1)) = TC;
    1259/     53B :                     ;--------------------------------------
    1260/     53B :                     insBRK_brp:
    1261/     53B :                     ;	ld	hl, (REGPC)
    1262/     53B : 2A 5A EF            	ld	hl, (tmpT)
    1263/     53E : 23                  	inc	hl
    1264/     53F : 5E                  	ld	e, (hl)
    1265/     540 : 23                  	inc	hl
    1266/     541 : 56                  	ld	d, (hl)
    1267/     542 : EB                  	ex	de,  hl
    1268/     543 : CD 54 05            	call	inadr_chk_and_wrt
    1269/     546 : C9                  	ret
    1270/     547 :                     
    1271/     547 :                     ;--------------------------------------
    1272/     547 :                     ; insert TC at SP
    1273/     547 :                     ; ea = *REGSP; *ea = TC;
    1274/     547 :                     ;--------------------------------------
    1275/     547 :                     insBRK_sp:
    1276/     547 : ED 5B 40 EF         	ld	de, (REGSP)
    1277/     54B : 1A                  	ld	a, (de)
    1278/     54C : 6F                  	ld	l, a
    1279/     54D : 13                  	inc	de
    1280/     54E : 1A                  	ld	a, (de)
    1281/     54F : 67                  	ld	h, a		; hl = *sp
    1282/     550 : CD 54 05            	call	inadr_chk_and_wrt
    1283/     553 : C9                  	ret
    1284/     554 :                     
    1285/     554 :                     ;--------------------------------------
    1286/     554 :                     ; check (HL) is RAM AREA
    1287/     554 :                     ; insert Trace code at (HL)
    1288/     554 :                     ;--------------------------------------
    1289/     554 :                     inadr_chk_and_wrt:
    1290/     554 : 7C                  	ld	a, h
    1291/     555 :                     
    1292/     555 : =>TRUE               	IF	RAM12K
    1293/     555 : FE C0               	cp	RAM_B >> 8	; a & 0c0h
    1294/     557 : 38 23               	jr	c, NO_RAM_AREA
    1295/     559 : FE F0               	cp	IO_B >> 8
    1296/     55B : 30 1F               	jr	nc, NO_RAM_AREA
    1297/     55D : [1292]               	ENDIF
    1298/     55D :                     
    1299/     55D : =>FALSE              	IF	RAM8K
    1300/     55D :                     	cp	RAM_B >> 8		; 80H
    1301/     55D :                     	jr	c, NO_RAM_AREA
    1302/     55D :                     	cp	RAM_E >> 8		; 9FH
    1303/     55D :                     	jr	nc, NO_RAM_AREA
    1304/     55D : [1299]               	ENDIF
    1305/     55D :                     
    1306/     55D : =>FALSE              	IF	RAM4K
    1307/     55D :                     	cp	RAM_B >> 8		; 80H
    1308/     55D :                     	jr	c, NO_RAM_AREA
    1309/     55D :                     	cp	RAM_E >> 8		; 8FH
    1310/     55D :                     	jr	nc, NO_RAM_AREA
    1311/     55D : [1306]               	ENDIF
    1312/     55D :                     
    1313/     55D : 79                  	ld	a, c
    1314/     55E : FE 01               	cp	1		;first save?
    1315/     560 : 20 0D               	jr	nz, icka1
    1316/     562 : 11 5D EF            	ld	de, tpt1_f
    1317/     565 : 12                  	ld	(de), a		; set trace ON
    1318/     566 : 22 5F EF            	ld	(tpt1_adr), hl
    1319/     569 : 7E                  	ld	a, (hl)		; get opcode
    1320/     56A : 32 5E EF            	ld	(tpt1_op), a	; save opcode
    1321/     56D : 18 0B               	jr	icka_end
    1322/     56F :                     icka1:
    1323/     56F : 11 61 EF            	ld	de, tpt2_f
    1324/     572 : 12                  	ld	(de), a		; set trace ON
    1325/     573 : 22 63 EF            	ld	(tpt2_adr), hl
    1326/     576 : 7E                  	ld	a, (hl)		; get opcode
    1327/     577 : 32 62 EF            	ld	(tpt2_op), a	; save opcode
    1328/     57A :                     icka_end:
    1329/     57A : AF                  	xor	a
    1330/     57B : C9                  	ret
    1331/     57C :                     
    1332/     57C :                     NO_RAM_AREA:
    1333/     57C : 37                  	SCF
    1334/     57D : C9                  	ret
    1335/     57E :                     	
    1336/     57E :                     
    1337/     57E :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1338/     57E :                     ; 2 insertion TC TABLE
    1339/     57E :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1340/     57E :                     ;
    1341/     57E :                     ; 1 byte machine code: branch (RET CC)
    1342/     57E :                     RETCC_TBLS:
    1343/     57E : C0                  	DB	0C0H	; RET	NZ
    1344/     57F : C8                  	DB	0C8H	; RET	Z
    1345/     580 : D0                  	DB	0D0H	; RET	NC
    1346/     581 : D8                  	DB	0D8H	; RET	C
    1347/     582 : E0                  	DB	0E0H	; RET	PO
    1348/     583 : E8                  	DB	0E8H	; RET	PE
    1349/     584 : F0                  	DB	0F0H	; RET	P
    1350/     585 : F8                  	DB	0F8H	; RET	M
    1351/     586 :                     RETCC_TBLE:
    1352/     586 :                     
    1353/     586 :                     ; 2 byte machine code: branch (JR CC, Relative)
    1354/     586 :                     JRCC_TBLS:
    1355/     586 : 10                  	DB	10H	; DJNZ	$
    1356/     587 :                     JRCC_TBLS1:
    1357/     587 : 20                  	DB	20H	; JR	NZ,$
    1358/     588 : 28                  	DB	28H	; JR	Z,$
    1359/     589 : 30                  	DB	30H	; JR	NC,$
    1360/     58A : 38                  	DB	38H	; JR	C,$
    1361/     58B :                     JRCC_TBLE:
    1362/     58B :                     
    1363/     58B :                     ; 3 byte machine code: branch (JP CC, 16bit literal)
    1364/     58B :                     JPCC_TBLS:
    1365/     58B : C2                  	DB	0C2H	; JP	NZ,1234H
    1366/     58C : CA                  	DB	0CAH	; JP	Z,1234H
    1367/     58D : D2                  	DB	0D2H	; JP	NC,1234H
    1368/     58E : DA                  	DB	0DAH	; JP	C,1234H
    1369/     58F : E2                  	DB	0E2H	; JP	PO,1234H
    1370/     590 : EA                  	DB	0EAH	; JP	PE,1234H
    1371/     591 : F2                  	DB	0F2H	; JP	P,1234H
    1372/     592 : FA                  	DB	0FAH	; JP	M,1234H
    1373/     593 :                     JPCC_TBLE:
    1374/     593 :                     
    1375/     593 :                     ; (call 16bit literal)
    1376/     593 :                     CLCC_TBLS:
    1377/     593 : C4                  	DB	0C4H	; CALL	NZ,1234H
    1378/     594 : CC                  	DB	0CCH	; CALL	Z,1234H
    1379/     595 : D4                  	DB	0D4H	; CALL	NC,1234H
    1380/     596 : DC                  	DB	0DCH	; CALL	C,1234H
    1381/     597 : E4                  	DB	0E4H	; CALL	PO,1234H
    1382/     598 : EC                  	DB	0ECH	; CALL	PE,1234H
    1383/     599 : F4                  	DB	0F4H	; CALL	P,1234H
    1384/     59A : FC                  	DB	0FCH	; CALL	M,1234H
    1385/     59B :                     CLCC_TBLE:
    1386/     59B :                     
    1387/     59B :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1388/     59B :                     ; 1 insertion TC TABLE
    1389/     59B :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1390/     59B :                     
    1391/     59B :                     ; restart
    1392/     59B :                     RST_TBLS:
    1393/     59B : C7                  	DB	0C7H	; RST	00H
    1394/     59C : CF                  	DB	0CFH	; RST	08H
    1395/     59D : D7                  	DB	0D7H	; RST	10H
    1396/     59E : DF                  	DB	0DFH	; RST	18H
    1397/     59F : E7                  	DB	0E7H	; RST	20H
    1398/     5A0 : EF                  	DB	0EFH	; RST	28H
    1399/     5A1 : F7                  	DB	0F7H	; RST	30H
    1400/     5A2 : FF                  	DB	0FFH	; RST	38H
    1401/     5A3 :                     RST_TBLE:
    1402/     5A3 :                     
    1403/     5A3 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1404/     5A3 :                     ;;;
    1405/     5A3 :                     ;;; machine code check(except branch)
    1406/     5A3 :                     ;;;
    1407/     5A3 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1408/     5A3 :                     INS2:
    1409/     5A3 :                     
    1410/     5A3 :                     	; 2byte machine code search
    1411/     5A3 : 01 12 00            	ld	bc, TWO_OPTBL_E - TWO_OPTBL
    1412/     5A6 : 21 3C 06            	ld	hl, TWO_OPTBL
    1413/     5A9 : ED B1               	cpir
    1414/     5AB : CA 17 06            	jp	z, meet_op2
    1415/     5AE :                     
    1416/     5AE :                     	; 3byte machine code search
    1417/     5AE : 01 08 00            	ld	bc, THREE_OPTBL_E - THREE_OPTBL
    1418/     5B1 : 21 4E 06            	ld	hl, THREE_OPTBL
    1419/     5B4 : ED B1               	cpir
    1420/     5B6 : CA 22 06            	jp	z, meet_op3
    1421/     5B9 :                     
    1422/     5B9 :                     	; check 0CBH
    1423/     5B9 :                     	
    1424/     5B9 :                     	; readjust hl
    1425/     5B9 : 2A 5A EF            	ld	hl, (tmpT)
    1426/     5BC :                     
    1427/     5BC : FE CB               	cp	0CBH		; opecode 0CBH?
    1428/     5BE : 28 57               	jr	z, meet_op2
    1429/     5C0 :                     	
    1430/     5C0 :                     	; check 0DDH
    1431/     5C0 : FE DD               	cp	0ddh		; opecode 0DDH?
    1432/     5C2 : 28 0A               	jr	z, meet_dd
    1433/     5C4 :                     	
    1434/     5C4 :                     	; check 0EDH
    1435/     5C4 : FE ED               	cp	0edh		; opecode 0EDH?
    1436/     5C6 : 28 28               	jr	z, meet_ed
    1437/     5C8 :                     
    1438/     5C8 :                     	; check 0FDH
    1439/     5C8 : FE FD               	cp	0fdh		; opecode 0FDH?
    1440/     5CA : 28 02               	jr	z, meet_dd
    1441/     5CC :                     
    1442/     5CC :                     	; 1byte machine code
    1443/     5CC : 18 3E               	jr	meet_op1
    1444/     5CE :                     
    1445/     5CE :                     	; opecode 0DDh
    1446/     5CE :                     meet_dd:
    1447/     5CE : 23                  	inc	hl
    1448/     5CF : 7E                  	ld	a, (hl)	
    1449/     5D0 : FE CB               	cp	0cbh		; 2nd 0CBH?
    1450/     5D2 : 28 59               	jr	z, meet_op4
    1451/     5D4 : FE 21               	cp	21h		; 2nd 21H?
    1452/     5D6 : 28 55               	jr	z, meet_op4
    1453/     5D8 : FE 22               	cp	22h		; 2nd 22H?
    1454/     5DA : 28 51               	jr	z, meet_op4
    1455/     5DC : FE 2A               	cp	2ah		; 2nd 2AH?
    1456/     5DE : 28 4D               	jr	z, meet_op4
    1457/     5E0 : FE 36               	cp	36h		; 2nd 36H?
    1458/     5E2 : 28 49               	jr	z, meet_op4
    1459/     5E4 :                     
    1460/     5E4 :                     	; 2nd code search
    1461/     5E4 : 01 0A 00            	ld	bc, DD_2NDTBL_E - DD_2NDTBL
    1462/     5E7 : 21 56 06            	ld	hl, DD_2NDTBL
    1463/     5EA : ED B1               	cpir
    1464/     5EC : 28 29               	jr	z, meet_op2
    1465/     5EE : 18 32               	jr	meet_op3
    1466/     5F0 :                     
    1467/     5F0 :                     meet_ed:
    1468/     5F0 : 23                  	inc	hl
    1469/     5F1 : 7E                  	ld	a, (hl)	
    1470/     5F2 : FE 43               	cp	43h		; 2nd 43H?
    1471/     5F4 : 28 37               	jr	z, meet_op4
    1472/     5F6 : FE 4B               	cp	4bh		; 2nd 4BH?
    1473/     5F8 : 28 33               	jr	z, meet_op4
    1474/     5FA : FE 53               	cp	53h		; 2nd 53H?
    1475/     5FC : 28 2F               	jr	z, meet_op4
    1476/     5FE : FE 5B               	cp	5bh		; 2nd 5BH?
    1477/     600 : 28 2B               	jr	z, meet_op4
    1478/     602 : FE 73               	cp	73h		; 2nd 73H?
    1479/     604 : 28 27               	jr	z, meet_op4
    1480/     606 : FE 7B               	cp	7bh		; 2nd 7BH?
    1481/     608 : 28 23               	jr	z, meet_op4
    1482/     60A : 18 0B               	jr	meet_op2
    1483/     60C :                     
    1484/     60C :                     ; 1 machine code
    1485/     60C :                     meet_op1:
    1486/     60C : 0E 01               	ld	c, 1
    1487/     60E : CD 27 05            	call	insBRK_1op
    1488/     611 : DA 06 05            	jp	c, err_trace_seq
    1489/     614 : C3 03 05            	jp	END_INS_TC
    1490/     617 :                     
    1491/     617 :                     ; 2 machine code
    1492/     617 :                     meet_op2:
    1493/     617 : 0E 01               	ld	c, 1
    1494/     619 : CD 2C 05            	call	insBRK_2op
    1495/     61C : DA 06 05            	jp	c, err_trace_seq
    1496/     61F : C3 03 05            	jp	END_INS_TC
    1497/     622 :                     ; 3 machine code
    1498/     622 :                     meet_op3:
    1499/     622 : 0E 01               	ld	c, 1
    1500/     624 : CD 31 05            	call	insBRK_3op
    1501/     627 : DA 06 05            	jp	c, err_trace_seq
    1502/     62A : C3 03 05            	jp	END_INS_TC
    1503/     62D :                     
    1504/     62D :                     ; 4 machine codee
    1505/     62D :                     meet_op4:
    1506/     62D : 0E 01               	ld	c, 1
    1507/     62F :                     ;	ld	hl, (REGPC)
    1508/     62F : 2A 5A EF            	ld	hl, (tmpT)
    1509/     632 : 23                  	inc	hl
    1510/     633 : CD 34 05            	call	ib3
    1511/     636 : DA 06 05            	jp	c, err_trace_seq
    1512/     639 : C3 03 05            	jp	END_INS_TC
    1513/     63C :                     
    1514/     63C :                     TWO_OPTBL:	; second byte is 8bitliteral[nn]
    1515/     63C :                     ld_r_nn_s:
    1516/     63C : 06                  	DB	06h	; LD	B,nn
    1517/     63D : 0E                  	DB	0Eh	; LD	C,nn
    1518/     63E : 16                  	DB	16h	; LD	D,nn
    1519/     63F : 1E                  	DB	1Eh	; LD	E,nn
    1520/     640 : 26                  	DB	26h	; LD	H,nn
    1521/     641 : 2E                  	DB	2Eh	; LD	L,nn
    1522/     642 : 36                  	DB	36h	; LD	(HL),nn
    1523/     643 : 3E                  	DB	3Eh	; LD	A,nn
    1524/     644 :                     ld_r_nn_e:
    1525/     644 :                     
    1526/     644 :                     log_op_s:
    1527/     644 : C6                  	DB	0C6h	; ADD	A,nn
    1528/     645 : CE                  	DB	0CEh	; ADC	A,nn
    1529/     646 : DE                  	DB	0DEh	; SBC	A,nn
    1530/     647 : D6                  	DB	0D6h	; SUB	nn
    1531/     648 : E6                  	DB	0E6h	; AND	nn
    1532/     649 : EE                  	DB	0EEh	; XOR	nn
    1533/     64A : F6                  	DB	0F6h	; OR	nn
    1534/     64B : FE                  	DB	0FEh	; CP	nn
    1535/     64C : DB                  	DB	0DBh	; IN	A,(nn)
    1536/     64D : D3                  	DB	0D3h	; OUT	(nn),A
    1537/     64E :                     log_op_e:
    1538/     64E :                     TWO_OPTBL_E:
    1539/     64E :                     
    1540/     64E :                     THREE_OPTBL:	; 2nd, 3rd byte is 16bitliteral[nnnn]
    1541/     64E : 01                  	DB	01h	; LD	BC,nnnn
    1542/     64F : 11                  	DB	11h	; LD	DE,nnnn
    1543/     650 : 21                  	DB	21h	; LD	HL,nnnn
    1544/     651 : 31                  	DB	31h	; LD	SP,nnnn
    1545/     652 :                     THREE_OPTBLe
    1546/     652 : 22                  	DB	22h	; LD	(nnnn),HL
    1547/     653 : 32                  	DB	32h	; LD	(nnnn),A
    1548/     654 :                     
    1549/     654 : 2A                  	DB	2Ah	; LD	HL,(nnnn)
    1550/     655 : 3A                  	DB	3Ah	; LD	A,(nnnn)
    1551/     656 :                     THREE_OPTBL_E:
    1552/     656 :                     
    1553/     656 :                     DD_2NDTBL:
    1554/     656 : 09                  	DB	09h	; ADD	IX,BC
    1555/     657 : 19                  	DB	19h	; ADD	IX,DE
    1556/     658 : 29                  	DB	29h	; ADD	IX,IX
    1557/     659 : 39                  	DB	39h	; ADD	IX,SP
    1558/     65A :                     DD_2NDTBL1:
    1559/     65A : 23                  	DB	23h	; INC	IX
    1560/     65B : 2B                  	DB	2Bh	; DEC	IX
    1561/     65C : E5                  	DB	0E5h	; PUSH	IX
    1562/     65D : E1                  	DB	0E1h	; POP	IX
    1563/     65E :                     DD_2NDTBL2:
    1564/     65E : E3                  	DB	0E3h	; EX	(SP),IX
    1565/     65F : F9                  	DB	0F9h	; LD	SP,IX
    1566/     660 :                     DD_2NDTBL_E:
    1567/     660 :                     
    1568/     660 :                     ;;; 
    1569/     660 :                     ;;; Dump memory
    1570/     660 :                     ;;; 
    1571/     660 :                     
    1572/     660 :                     DUMP:
    1573/     660 : 23                  	INC	HL
    1574/     661 : CD 01 18            	CALL	SKIPSP
    1575/     664 : CD 11 18            	CALL	RDHEX		; 1st arg.
    1576/     667 : 30 14               	jr	nc, DP0
    1577/     669 :                     	;; No arg. chk
    1578/     669 : CD 01 18            	CALL	SKIPSP
    1579/     66C : 7E                  	LD	A,(HL)
    1580/     66D : B7                  	OR	A
    1581/     66E : C2 64 07            	JP	NZ,disassemble
    1582/     671 : 2A 20 EF            	LD	HL,(DSADDR)
    1583/     674 : 01 80 00            	LD	BC,128
    1584/     677 : 09                  	ADD	HL,BC
    1585/     678 : 22 22 EF            	LD	(DEADDR),HL
    1586/     67B : 18 2F               	JR	DPM
    1587/     67D :                     
    1588/     67D :                     	;; 1st arg. found
    1589/     67D :                     DP0:
    1590/     67D : ED 53 20 EF         	LD	(DSADDR),DE
    1591/     681 : CD 01 18            	CALL	SKIPSP
    1592/     684 : 7E                  	LD	A,(HL)
    1593/     685 : FE 2C               	CP	','
    1594/     687 : 28 0D               	JR	Z,DP1
    1595/     689 : B7                  	OR	A
    1596/     68A : C2 FE 00            	JP	NZ,ERR
    1597/     68D :                     	;; No 2nd arg.
    1598/     68D : 21 80 00            	LD	HL,128
    1599/     690 : 19                  	ADD	HL,DE
    1600/     691 : 22 22 EF            	LD	(DEADDR),HL
    1601/     694 : 18 16               	JR	DPM
    1602/     696 :                     DP1:
    1603/     696 : 23                  	INC	HL
    1604/     697 : CD 01 18            	CALL	SKIPSP
    1605/     69A : CD 11 18            	CALL	RDHEX
    1606/     69D : DA FE 00            	jp	c, ERR
    1607/     6A0 : CD 01 18            	CALL	SKIPSP
    1608/     6A3 : B7                  	OR	A
    1609/     6A4 : C2 FE 00            	jp	nz, ERR
    1610/     6A7 : 13                  	INC	DE
    1611/     6A8 : ED 53 22 EF         	LD	(DEADDR),DE
    1612/     6AC :                     DPM:
    1613/     6AC :                     	;; DUMP main
    1614/     6AC : 2A 20 EF            	LD	HL,(DSADDR)
    1615/     6AF : 3E F0               	LD	A,0F0H
    1616/     6B1 : A5                  	AND	L
    1617/     6B2 : 6F                  	LD	L,A
    1618/     6B3 : AF                  	XOR	A
    1619/     6B4 : 32 24 EF            	LD	(DSTATE),A
    1620/     6B7 :                     DPM0:
    1621/     6B7 : E5                  	PUSH	HL
    1622/     6B8 : CD DE 06            	CALL	DPL
    1623/     6BB : E1                  	POP	HL
    1624/     6BC : 01 10 00            	LD	BC,16
    1625/     6BF : 09                  	ADD	HL,BC
    1626/     6C0 : CD AE 1F            	CALL	CONST
    1627/     6C3 : 20 10               	JR	NZ,DPM1
    1628/     6C5 : 3A 24 EF            	LD	A,(DSTATE)
    1629/     6C8 : FE 02               	CP	2
    1630/     6CA : 38 EB               	JR	C,DPM0
    1631/     6CC : 2A 22 EF            	LD	HL,(DEADDR)
    1632/     6CF : 22 20 EF            	LD	(DSADDR),HL
    1633/     6D2 : C3 BE 00            	JP	WSTART
    1634/     6D5 :                     DPM1:
    1635/     6D5 : 22 20 EF            	LD	(DSADDR),HL
    1636/     6D8 : CD A3 1F            	CALL	CONIN
    1637/     6DB : C3 BE 00            	JP	WSTART
    1638/     6DE :                     
    1639/     6DE :                     DPL:
    1640/     6DE :                     	;; DUMP line
    1641/     6DE : CD 50 17            	CALL	HEXOUT4
    1642/     6E1 : E5                  	PUSH	HL
    1643/     6E2 : 21 70 1D            	LD	HL,DSEP0
    1644/     6E5 : CD 47 17            	CALL	STROUT
    1645/     6E8 : E1                  	POP	HL
    1646/     6E9 : DD 21 00 EF         	LD	IX,INBUF
    1647/     6ED : 06 10               	LD	B,16
    1648/     6EF :                     DPL0:
    1649/     6EF : CD 18 07            	CALL	DPB
    1650/     6F2 : 10 FB               	DJNZ	DPL0
    1651/     6F4 :                     
    1652/     6F4 : 21 73 1D            	LD	HL,DSEP1
    1653/     6F7 : CD 47 17            	CALL	STROUT
    1654/     6FA :                     
    1655/     6FA : 21 00 EF            	LD	HL,INBUF
    1656/     6FD : 06 10               	LD	B,16
    1657/     6FF :                     DPL1:
    1658/     6FF : 7E                  	LD	A,(HL)
    1659/     700 : 23                  	INC	HL
    1660/     701 : FE 20               	CP	' '
    1661/     703 : 38 09               	JR	C,DPL2
    1662/     705 : FE 7F               	CP	7FH
    1663/     707 : 30 05               	JR	NC,DPL2
    1664/     709 : CD B4 1F            	CALL	CONOUT
    1665/     70C : 18 05               	JR	DPL3
    1666/     70E :                     DPL2:
    1667/     70E : 3E 2E               	LD	A,'.'
    1668/     710 : CD B4 1F            	CALL	CONOUT
    1669/     713 :                     DPL3:
    1670/     713 : 10 EA               	DJNZ	DPL1
    1671/     715 : C3 90 17            	JP	CRLF
    1672/     718 :                     
    1673/     718 :                     DPB:	; Dump byte
    1674/     718 : 3E 20               	LD	A,' '
    1675/     71A : CD B4 1F            	CALL	CONOUT
    1676/     71D : 3A 24 EF            	LD	A,(DSTATE)
    1677/     720 : B7                  	OR	A
    1678/     721 : 20 20               	JR	NZ,DPB2
    1679/     723 :                     	; Dump state 0
    1680/     723 : 3A 20 EF            	LD	A,(DSADDR)	; Low byte
    1681/     726 : BD                  	CP	L
    1682/     727 : 20 06               	JR	NZ,DPB0
    1683/     729 : 3A 21 EF            	LD	A,(DSADDR+1)	; High byte
    1684/     72C : BC                  	CP	H
    1685/     72D : 28 0F               	JR	Z,DPB1
    1686/     72F :                     DPB0:	; Still 0 or 2
    1687/     72F : 3E 20               	LD	A,' '
    1688/     731 : CD B4 1F            	CALL	CONOUT
    1689/     734 : CD B4 1F            	CALL	CONOUT
    1690/     737 : DD 77 00            	LD	(IX),A
    1691/     73A : 23                  	INC	HL
    1692/     73B : DD 23               	INC	IX
    1693/     73D : C9                  	RET
    1694/     73E :                     DPB1:	; Found start address
    1695/     73E : 3E 01               	LD	A,1
    1696/     740 : 32 24 EF            	LD	(DSTATE),A
    1697/     743 :                     DPB2:
    1698/     743 : 3A 24 EF            	LD	A,(DSTATE)
    1699/     746 : FE 01               	CP	1
    1700/     748 : 20 E5               	JR	NZ,DPB0
    1701/     74A :                     	; Dump state 1
    1702/     74A : 7E                  	LD	A,(HL)
    1703/     74B : DD 77 00            	LD	(IX),A
    1704/     74E : CD 55 17            	CALL	HEXOUT2
    1705/     751 : 23                  	INC	HL
    1706/     752 : DD 23               	INC	IX
    1707/     754 : 3A 22 EF            	LD	A,(DEADDR)	; Low byte
    1708/     757 : BD                  	CP	L
    1709/     758 : C0                  	RET	NZ
    1710/     759 : 3A 23 EF            	LD	A,(DEADDR+1)	; High byte
    1711/     75C : BC                  	CP	H
    1712/     75D : C0                  	RET	NZ
    1713/     75E :                     	; Found end address
    1714/     75E : 3E 02               	LD	A,2
    1715/     760 : 32 24 EF            	LD	(DSTATE),A
    1716/     763 : C9                  	RET
    1717/     764 :                     
    1718/     764 :                     ;;;
    1719/     764 :                     ;;; Disassemble
    1720/     764 :                     ;;; 
    1721/     764 :                     
    1722/     764 :                     
    1723/     764 :                     ; DI[<address>][,s<steps>|<end address>]
    1724/     764 :                     
    1725/     764 :                     disassemble:
    1726/     764 : FE 49               	cp	'I'
    1727/     766 : C2 FE 00            	jp	nz, ERR
    1728/     769 :                     	
    1729/     769 : 23                  	INC	HL
    1730/     76A : CD 01 18            	CALL	SKIPSP
    1731/     76D : CD 11 18            	CALL	RDHEX		; 1st arg.
    1732/     770 : 30 11               	jr	nc, get_DI1
    1733/     772 :                     
    1734/     772 :                     di_nxt:
    1735/     772 :                     	;; No arg. chk
    1736/     772 : CD 01 18            	CALL	SKIPSP
    1737/     775 : 7E                  	LD	A,(HL)
    1738/     776 : B7                  	OR	A
    1739/     777 : 20 11               	jr	NZ, chk_DI1	; ',' check
    1740/     779 :                     
    1741/     779 :                     ; No arg
    1742/     779 : 3E 0A               	ld	a, 10
    1743/     77B : 32 7C EF            	ld	(dasm_stpf), a	; set step flag
    1744/     77E : 32 7A EF            	ld	(dasm_ed), a	; set 10 steps
    1745/     781 : 18 34               	jr	DISASM_go
    1746/     783 :                     
    1747/     783 :                     ; 1st arg
    1748/     783 :                     get_DI1:
    1749/     783 : ED 53 7D EF         	ld	(dasm_adr), de	; save start address
    1750/     787 : 23                  	INC	HL
    1751/     788 : 18 E8               	jr	di_nxt
    1752/     78A :                     
    1753/     78A :                     chk_DI1:
    1754/     78A : FE 2C               	cp	','
    1755/     78C : C2 FE 00            	jp	nz, ERR
    1756/     78F :                     
    1757/     78F :                     ; check 2nd arg
    1758/     78F :                     
    1759/     78F : 23                  	INC	HL
    1760/     790 : CD 01 18            	CALL	SKIPSP
    1761/     793 :                     ;	call	UPPER
    1762/     793 : FE 53               	cp	'S'
    1763/     795 : 20 12               	jr	nz, chk_stpDI
    1764/     797 :                     
    1765/     797 :                     ; step arg
    1766/     797 : 3E 01               	ld	a, 1
    1767/     799 : 32 7C EF            	ld	(dasm_stpf), a	; set step flag
    1768/     79C : 23                  	inc	hl
    1769/     79D : CD B6 01            	call	GET_NUM		; get decimal number to binary
    1770/     7A0 : DA FE 00            	jp	c, ERR
    1771/     7A3 : ED 43 7A EF         	ld	(dasm_ed), bc	; set steps
    1772/     7A7 : 18 0E               	jr	DISASM_go
    1773/     7A9 :                     
    1774/     7A9 :                     chk_stpDI:
    1775/     7A9 : CD 11 18            	CALL	RDHEX		; 2nd arg.
    1776/     7AC : DA FE 00            	jp	c, ERR
    1777/     7AF : ED 53 7A EF         	ld	(dasm_ed), de	; set end address
    1778/     7B3 : AF                  	xor	a
    1779/     7B4 : 32 7C EF            	ld	(dasm_stpf), a	; clear step flag
    1780/     7B7 :                     
    1781/     7B7 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1782/     7B7 :                     ; operation Disassemble
    1783/     7B7 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1784/     7B7 :                     
    1785/     7B7 :                     DISASM_go:
    1786/     7B7 : CD AE 1F            	call	CONST
    1787/     7BA : 28 06               	jr	z, dis_go1
    1788/     7BC : CD A3 1F            	call	CONIN		;discard key
    1789/     7BF : C3 BE 00            	jp	WSTART		; exit disasm command
    1790/     7C2 :                     
    1791/     7C2 :                     dis_go1:
    1792/     7C2 :                     	; get opcode
    1793/     7C2 : CD 46 08            	call	dis_analysis
    1794/     7C5 : CD 0B 08            	call	mk_adr_str	; conout address and machine code
    1795/     7C8 :                     				; *dasm_adr is next opcode address
    1796/     7C8 : 21 84 EF            	ld	hl, adr_mc_buf
    1797/     7CB : CD 47 17            	call	STROUT		; conout disassemble strings
    1798/     7CE :                     
    1799/     7CE : 3A 7C EF            	ld	a, (dasm_stpf)
    1800/     7D1 : B7                  	or	a
    1801/     7D2 : 20 0E               	jr	nz, calc_dis_step
    1802/     7D4 :                     	
    1803/     7D4 :                     	; *dasm_adr > *dasm_ed ?, yes, finish
    1804/     7D4 : 2A 7A EF            	ld	hl, (dasm_ed)
    1805/     7D7 : ED 4B 7D EF         	ld	bc, (dasm_adr)
    1806/     7DB : ED 42               	sbc	hl, bc
    1807/     7DD : 30 D8               	jr	nc, DISASM_go
    1808/     7DF : C3 BE 00            	jp	WSTART
    1809/     7E2 :                     
    1810/     7E2 :                     calc_dis_step:
    1811/     7E2 : 2A 7A EF            	ld	hl, (dasm_ed)
    1812/     7E5 : 2B                  	dec	hl
    1813/     7E6 : 22 7A EF            	ld	(dasm_ed), hl
    1814/     7E9 : 7C                  	ld	a, h
    1815/     7EA : B5                  	or	l
    1816/     7EB : 20 CA               	jr	nz, DISASM_go
    1817/     7ED : C3 BE 00            	jp	WSTART
    1818/     7F0 :                     
    1819/     7F0 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1820/     7F0 :                     ; Disassemble and maked strings to user buffer
    1821/     7F0 :                     ; input de : user buffer
    1822/     7F0 :                     ;       hl : disassemble address
    1823/     7F0 :                     ; output de : next MC address
    1824/     7F0 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1825/     7F0 :                     get_disasm_st:
    1826/     7F0 : 22 7D EF            	ld	(dasm_adr), hl
    1827/     7F3 : D5                  	push	de
    1828/     7F4 : CD 46 08            	call	dis_analysis
    1829/     7F7 : CD 0B 08            	call	mk_adr_str	; conout address and machine code
    1830/     7FA : D1                  	pop	de
    1831/     7FB : 21 84 EF            	ld	hl, adr_mc_buf
    1832/     7FE : 01 2A 00            	ld	bc, dasm_be - dasm_bs
    1833/     801 : ED B0               	ldir
    1834/     803 : ED 5B 7D EF         	ld	de, (dasm_adr)
    1835/     807 : 3A 83 EF            	ld	a, (mc_Size)
    1836/     80A : C9                  	ret
    1837/     80B :                     
    1838/     80B :                     ;-------------------------------------------------
    1839/     80B :                     ; Make address and machine code at adr_mc_buf
    1840/     80B :                     ; "XXXX XX XX XX XX " (17bytes)
    1841/     80B :                     ;-------------------------------------------------
    1842/     80B :                     mk_adr_str:
    1843/     80B : 21 84 EF            	ld	hl, adr_mc_buf
    1844/     80E : ED 5B 7D EF         	ld	de, (dasm_adr)
    1845/     812 : CD E6 0F            	call	hex4str		; address XXXX
    1846/     815 : CD 76 10            	call	ins_spcR
    1847/     818 : CD 76 10            	call	ins_spcR
    1848/     81B :                     
    1849/     81B : 06 04               	ld	b, 4
    1850/     81D : 3A 83 EF            	ld	a, (mc_Size)
    1851/     820 : 4F                  	ld	c, a
    1852/     821 :                     mas_1:
    1853/     821 : 1A                  	ld	a, (de)
    1854/     822 : 13                  	inc	de
    1855/     823 :                     
    1856/     823 : D5                  	push	de
    1857/     824 : 5F                  	ld	e, a
    1858/     825 : CD EE 0F            	call	hex2str		; MC XX
    1859/     828 : CD 76 10            	call	ins_spcR
    1860/     82B : D1                  	pop	de
    1861/     82C :                     
    1862/     82C : 05                  	dec	b
    1863/     82D : 28 0F               	jr	z, mas_3	; end
    1864/     82F : 0D                  	dec	c
    1865/     830 : 20 EF               	jr	nz, mas_1
    1866/     832 :                     
    1867/     832 :                     mas_2:	
    1868/     832 : CD 76 10            	call	ins_spcR
    1869/     835 : CD 76 10            	call	ins_spcR
    1870/     838 : CD 76 10            	call	ins_spcR
    1871/     83B : 05                  	dec	b
    1872/     83C : 20 F4               	jr	nz, mas_2
    1873/     83E :                     mas_3:
    1874/     83E : CD 76 10            	call	ins_spcR
    1875/     841 : ED 53 7D EF         	ld	(dasm_adr), de	; set next analysis address
    1876/     845 : C9                  	ret
    1877/     846 :                     
    1878/     846 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1879/     846 :                     ; dis assemble analysis
    1880/     846 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1881/     846 :                     
    1882/     846 :                     dis_analysis:
    1883/     846 :                     
    1884/     846 :                     	; pre init string buffer
    1885/     846 :                     
    1886/     846 : 3E 01               	ld	a, 1
    1887/     848 : 32 83 EF            	ld	(mc_Size), a
    1888/     84B :                     
    1889/     84B : 11 45 11            	ld	de, LDstr	; insert LD string
    1890/     84E : CD 0A 10            	call	mkopcstr
    1891/     851 :                     
    1892/     851 : 21 9F EF            	ld	hl, dasm_OprStr
    1893/     854 : CD 36 10            	call	insPostStr	; CR, LF, 00h
    1894/     857 :                     
    1895/     857 : 2A 7D EF            	ld	hl, (dasm_adr)
    1896/     85A : 7E                  	ld	a, (hl)		; get opcode
    1897/     85B :                     
    1898/     85B :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1899/     85B :                     	; analysys 1 byte MC
    1900/     85B :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1901/     85B :                     
    1902/     85B :                     ;  check no operand
    1903/     85B :                     
    1904/     85B : 01 0D 00            	ld	bc, oth_1op_e - oth_1op_s
    1905/     85E : 21 89 10            	ld	hl, oth_1op_s
    1906/     861 : ED B1               	cpir
    1907/     863 : 20 12               	jr	nz, chk_ld
    1908/     865 :                     
    1909/     865 :                     ;  no operand
    1910/     865 :                     
    1911/     865 : 21 98 12            	ld	hl, oth_1op_tbl
    1912/     868 : CD 8C 0F            	call	get_strBufpoint
    1913/     86B : C3 0A 10            	jp	mkopcstr
    1914/     86E :                     
    1915/     86E :                     get_r_num:
    1916/     86E : E6 38               	and	38H
    1917/     870 : 0F                  	rrca
    1918/     871 : 0F                  	rrca
    1919/     872 : 0F                  	rrca
    1920/     873 : 4F                  	ld	c, a
    1921/     874 : 06 00               	ld	b, 0		; bc ; register No.
    1922/     876 : C9                  	ret
    1923/     877 :                     ;
    1924/     877 :                     ; LD opecode
    1925/     877 :                     ;
    1926/     877 :                     
    1927/     877 :                     ; check LD "A,(BC)", "A,(DE)", "(BC),A", "(DE),A", "SP,HL"
    1928/     877 :                     
    1929/     877 :                     chk_ld:
    1930/     877 : FE 0A               	cp	0AH	; LD	A,(BC)
    1931/     879 : 28 19               	jr	z, ld_a_kbck
    1932/     87B : FE 1A               	cp	1AH	; LD	A,(DE)
    1933/     87D : 28 23               	jr	z, ld_a_kdek
    1934/     87F : FE 02               	cp	02H	; LD	(BC),A
    1935/     881 : 28 24               	jr	z, ld_kbck_a
    1936/     883 : FE 12               	cp	12H	; LD	(DE),A
    1937/     885 : 28 29               	jr	z, ld_kdek_a
    1938/     887 : FE F9               	cp	0F9H	; LD	SP,HL
    1939/     889 : 20 2A               	jr	nz, chk_ld1
    1940/     88B :                     
    1941/     88B :                     ; LD SP, HL
    1942/     88B : 11 98 1F            	ld	de, RNSP
    1943/     88E : CD 5D 10            	call	mk_rcs		; "SP, "
    1944/     891 : C3 30 10            	jp	hl_crlf
    1945/     894 :                     	
    1946/     894 :                     ; LD A, (BC)
    1947/     894 :                     ld_a_kbck:
    1948/     894 : 11 57 1F            	ld	de, RNBC
    1949/     897 :                     ld_a_kxxk:
    1950/     897 : D5                  	push	de
    1951/     898 : CD 5A 10            	call	a_colon_sp	; "A, "
    1952/     89B : D1                  	pop	de
    1953/     89C : CD 44 10            	call	mk_krk		; "(BC)", "(DE)"
    1954/     89F : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    1955/     8A2 :                     
    1956/     8A2 :                     ; LD A, (DE)
    1957/     8A2 :                     ld_a_kdek:
    1958/     8A2 : 11 5E 1F            	ld	de, RNDE
    1959/     8A5 : 18 F0               	jr	ld_a_kxxk
    1960/     8A7 :                     
    1961/     8A7 :                     ; LD (BC), A
    1962/     8A7 :                     ld_kbck_a:
    1963/     8A7 : 11 57 1F            	ld	de, RNBC
    1964/     8AA :                     
    1965/     8AA :                     ld_kxxk_a:
    1966/     8AA : CD 4C 10            	call	mk_krkcs	; "(BC), ", "(DE), "
    1967/     8AD : C3 25 10            	jp	a_crlf		; "A",CR,LF
    1968/     8B0 :                     
    1969/     8B0 :                     ; LD (DE), A
    1970/     8B0 :                     ld_kdek_a:
    1971/     8B0 : 11 5E 1F            	ld	de, RNDE
    1972/     8B3 : 18 F5               	jr	ld_kxxk_a
    1973/     8B5 :                     
    1974/     8B5 :                     ; check other 1byte LD MC
    1975/     8B5 :                     
    1976/     8B5 :                     chk_ld1:
    1977/     8B5 : FE 40               	cp	40h
    1978/     8B7 : DA 4D 09            	jp	c, chk_inc
    1979/     8BA : FE 80               	cp	80h
    1980/     8BC : 30 28               	jr	nc, chk_add
    1981/     8BE : FE 76               	cp	76h	; HALT?
    1982/     8C0 : 20 06               	jr	nz, LD1op
    1983/     8C2 :                     
    1984/     8C2 : 11 48 11            	ld	de, HLTstr	; HALT string
    1985/     8C5 : C3 0A 10            	jp	mkopcstr	; de : next string buffer addr
    1986/     8C8 :                     
    1987/     8C8 :                     ; LD
    1988/     8C8 :                     
    1989/     8C8 :                     LD1op:
    1990/     8C8 : CD 6E 08            	call	get_r_num
    1991/     8CB : CD 89 0F            	call	get_rstg_off
    1992/     8CE : 21 9F EF            	ld	hl, dasm_OprStr
    1993/     8D1 : CD 5D 10            	call	mk_rcs		; "REG, "
    1994/     8D4 :                     
    1995/     8D4 :                     mk_2ndopr:
    1996/     8D4 : ED 5B 7D EF         	ld	de, (dasm_adr)
    1997/     8D8 : 1A                  	ld	a, (de)		; get opcode
    1998/     8D9 : E6 07               	and	07h
    1999/     8DB : 4F                  	ld	c, a
    2000/     8DC : 06 00               	ld	b, 0
    2001/     8DE :                     
    2002/     8DE :                     mk_2ndopr1:
    2003/     8DE : E5                  	push	hl		; save copy buffer
    2004/     8DF : CD 89 0F            	call	get_rstg_off
    2005/     8E2 : E1                  	pop	hl		; copy buffer
    2006/     8E3 : C3 33 10            	jp	cpstr_crlf	; "REG",CR,LF
    2007/     8E6 :                     
    2008/     8E6 :                     ; ADD 80H - 87H
    2009/     8E6 :                     ; check ADD code
    2010/     8E6 :                     
    2011/     8E6 :                     chk_add:
    2012/     8E6 : FE 88               	cp	88h
    2013/     8E8 : 30 08               	jr	nc, chk_adc
    2014/     8EA :                     
    2015/     8EA :                     ; ADD
    2016/     8EA : CD 07 10            	call	add_opstr
    2017/     8ED : CD 5A 10            	call	a_colon_sp
    2018/     8F0 : 18 E2               	jr	mk_2ndopr
    2019/     8F2 :                     
    2020/     8F2 :                     ; ADC 88H - 8FH
    2021/     8F2 :                     ; check ADC code
    2022/     8F2 :                     
    2023/     8F2 :                     chk_adc:
    2024/     8F2 : FE 90               	cp	90h
    2025/     8F4 : 30 0B               	jr	nc, chk_sub
    2026/     8F6 :                     
    2027/     8F6 :                     ; ADC
    2028/     8F6 : 11 51 11            	ld	de, ADCstr
    2029/     8F9 : CD 0A 10            	call	mkopcstr
    2030/     8FC : CD 5A 10            	call	a_colon_sp
    2031/     8FF : 18 D3               	jr	mk_2ndopr
    2032/     901 :                     
    2033/     901 :                     ; SUB 90H - 97H
    2034/     901 :                     ; check SUB code
    2035/     901 :                     
    2036/     901 :                     chk_sub:
    2037/     901 : FE 98               	cp	98h
    2038/     903 : 30 08               	jr	nc, chk_sbc
    2039/     905 :                     
    2040/     905 :                     ; SUB
    2041/     905 : 11 55 11            	ld	de, SUBstr
    2042/     908 : CD 0A 10            	call	mkopcstr
    2043/     90B : 18 C7               	jr	mk_2ndopr
    2044/     90D :                     
    2045/     90D :                     ; SBC 98H - 9FH
    2046/     90D :                     ; check SBC code
    2047/     90D :                     
    2048/     90D :                     chk_sbc:
    2049/     90D : FE A0               	cp	0A0h
    2050/     90F : 30 0B               	jr	nc, chk_and
    2051/     911 :                     
    2052/     911 :                     ; SBC
    2053/     911 : 11 59 11            	ld	de, SBCstr
    2054/     914 : CD 0A 10            	call	mkopcstr
    2055/     917 : CD 5A 10            	call	a_colon_sp
    2056/     91A : 18 B8               	jr	mk_2ndopr
    2057/     91C :                     
    2058/     91C :                     ; AND 0A0H - 0A7H
    2059/     91C :                     ; check AND code
    2060/     91C :                     
    2061/     91C :                     chk_and:
    2062/     91C : FE A8               	cp	0A8h
    2063/     91E : 30 08               	jr	nc, chk_xor
    2064/     920 :                     
    2065/     920 :                     ; AND
    2066/     920 : 11 5D 11            	ld	de, ANDstr
    2067/     923 : CD 0A 10            	call	mkopcstr
    2068/     926 : 18 AC               	jr	mk_2ndopr
    2069/     928 :                     
    2070/     928 :                     ; XOR 0A8H - 0AFH
    2071/     928 :                     ; check XOR code
    2072/     928 :                     
    2073/     928 :                     chk_xor:
    2074/     928 :                     
    2075/     928 : FE B0               	cp	0B0h
    2076/     92A : 30 08               	jr	nc, chk_or
    2077/     92C :                     
    2078/     92C :                     ; XOR
    2079/     92C : 11 61 11            	ld	de, XORstr
    2080/     92F : CD 0A 10            	call	mkopcstr
    2081/     932 : 18 A0               	jr	mk_2ndopr
    2082/     934 :                     
    2083/     934 :                     ; OR 0B0H - 0B7H
    2084/     934 :                     ; check OR code
    2085/     934 :                     
    2086/     934 :                     chk_or:
    2087/     934 : FE B8               	cp	0B8h
    2088/     936 : 30 08               	jr	nc, chk_cp
    2089/     938 :                     
    2090/     938 :                     ; OR
    2091/     938 : 11 65 11            	ld	de, ORstr
    2092/     93B : CD 0A 10            	call	mkopcstr
    2093/     93E : 18 94               	jr	mk_2ndopr
    2094/     940 :                     
    2095/     940 :                     ; CP 0B8H - 0BFH
    2096/     940 :                     ; check CP code
    2097/     940 :                     
    2098/     940 :                     chk_cp:
    2099/     940 : FE C0               	cp	0C0h
    2100/     942 : D2 C9 09            	jp	nc, chk_pop_rp
    2101/     945 :                     
    2102/     945 :                     ; CP
    2103/     945 : 11 68 11            	ld	de, CPstr
    2104/     948 : CD 0A 10            	call	mkopcstr
    2105/     94B : 18 87               	jr	mk_2ndopr
    2106/     94D :                     
    2107/     94D :                     ;check INC
    2108/     94D :                     
    2109/     94D :                     chk_inc:
    2110/     94D : 01 08 00            	ld	bc, INC_OPCDTBLE - INC_OPCDTBLS
    2111/     950 : 21 96 10            	ld	hl, INC_OPCDTBLS
    2112/     953 : ED B1               	cpir
    2113/     955 : 20 0E               	jr	nz, chk_dec
    2114/     957 :                     
    2115/     957 :                     ; INC
    2116/     957 : F5                  	push	af
    2117/     958 : 11 6B 11            	ld	de, INCstr
    2118/     95B : CD 0A 10            	call	mkopcstr
    2119/     95E : F1                  	pop	af
    2120/     95F :                     
    2121/     95F :                     inc_dec:
    2122/     95F : CD 6E 08            	call	get_r_num
    2123/     962 : C3 DE 08            	jp	mk_2ndopr1
    2124/     965 :                     
    2125/     965 :                     ;check dec
    2126/     965 :                     
    2127/     965 :                     chk_dec:
    2128/     965 : 01 08 00            	ld	bc, DEC_OPCDTBLE - DEC_OPCDTBLS
    2129/     968 : 21 9E 10            	ld	hl, DEC_OPCDTBLS
    2130/     96B : ED B1               	cpir
    2131/     96D : 20 0A               	jr	nz, chk_inc_rp
    2132/     96F :                     
    2133/     96F :                     ; DEC
    2134/     96F : F5                  	push	af
    2135/     970 : 11 6F 11            	ld	de, DECstr
    2136/     973 : CD 0A 10            	call	mkopcstr
    2137/     976 : F1                  	pop	af
    2138/     977 : 18 E6               	jr	inc_dec
    2139/     979 :                     
    2140/     979 :                     ; check inc rp
    2141/     979 :                     
    2142/     979 :                     chk_inc_rp:
    2143/     979 : 01 04 00            	ld	bc, inc_rp_e - inc_rp_s
    2144/     97C : 21 A6 10            	ld	hl, inc_rp_s
    2145/     97F : ED B1               	cpir
    2146/     981 : 20 0F               	jr	nz, chk_dec_rp
    2147/     983 :                     
    2148/     983 :                     ; INC rp
    2149/     983 : 11 6B 11            	ld	de, INCstr
    2150/     986 : CD 0A 10            	call	mkopcstr
    2151/     989 :                     
    2152/     989 : 21 88 12            	ld	hl, INC_DEC_ADDrp
    2153/     98C : CD 80 0F            	call	mk_str
    2154/     98F : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2155/     992 :                     
    2156/     992 :                     ; check dec rp
    2157/     992 :                     
    2158/     992 :                     chk_dec_rp:
    2159/     992 : 01 04 00            	ld	bc, dec_rp_e - dec_rp_s
    2160/     995 : 21 AA 10            	ld	hl, dec_rp_s
    2161/     998 : ED B1               	cpir
    2162/     99A : 20 0F               	jr	nz, chk_add_rp
    2163/     99C :                     
    2164/     99C :                     ; dec rp
    2165/     99C : 11 6F 11            	ld	de, DECstr
    2166/     99F : CD 0A 10            	call	mkopcstr
    2167/     9A2 :                     
    2168/     9A2 : 21 88 12            	ld	hl, INC_DEC_ADDrp
    2169/     9A5 : CD 80 0F            	call	mk_str
    2170/     9A8 : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2171/     9AB :                     
    2172/     9AB :                     ;check ADD HL, rp
    2173/     9AB :                     
    2174/     9AB :                     chk_add_rp:
    2175/     9AB : 01 04 00            	ld	bc, add_rp_e - add_rp_s
    2176/     9AE : 21 AE 10            	ld	hl, add_rp_s
    2177/     9B1 : ED B1               	cpir
    2178/     9B3 : 20 46               	jr	nz, chk_ex
    2179/     9B5 :                     
    2180/     9B5 :                     ; add hl, rp
    2181/     9B5 :                     
    2182/     9B5 : CD 07 10            	call	add_opstr
    2183/     9B8 :                     
    2184/     9B8 : 11 65 1F            	ld	de, RNHL
    2185/     9BB : CD 5D 10            	call	mk_rcs		; "HL, "
    2186/     9BE :                     
    2187/     9BE : E5                  	push	hl
    2188/     9BF : 21 88 12            	ld	hl, INC_DEC_ADDrp
    2189/     9C2 : CD 8C 0F            	call	get_strBufpoint
    2190/     9C5 : E1                  	pop	hl
    2191/     9C6 : C3 33 10            	jp	cpstr_crlf	; CR, LF, 00h
    2192/     9C9 :                     
    2193/     9C9 :                     ; check POP rp
    2194/     9C9 :                     
    2195/     9C9 :                     chk_pop_rp:
    2196/     9C9 : 01 04 00            	ld	bc, pop_rp_e - pop_rp_s
    2197/     9CC : 21 B2 10            	ld	hl, pop_rp_s
    2198/     9CF : ED B1               	cpir
    2199/     9D1 : 20 0F               	jr	nz, chk_push_rp
    2200/     9D3 :                     
    2201/     9D3 :                     ; POP RP
    2202/     9D3 :                     
    2203/     9D3 : 11 73 11            	ld	de, POPstr
    2204/     9D6 : CD 0A 10            	call	mkopcstr
    2205/     9D9 :                     
    2206/     9D9 : 21 90 12            	ld	hl, POP_PUSHrp
    2207/     9DC : CD 80 0F            	call	mk_str
    2208/     9DF : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2209/     9E2 :                     
    2210/     9E2 :                     ; check PUSH rp
    2211/     9E2 :                     
    2212/     9E2 :                     chk_push_rp:
    2213/     9E2 : 01 04 00            	ld	bc, push_rp_e - push_rp_s
    2214/     9E5 : 21 B6 10            	ld	hl, push_rp_s
    2215/     9E8 : ED B1               	cpir
    2216/     9EA : 20 0F               	jr	nz, chk_ex
    2217/     9EC :                     
    2218/     9EC :                     ; PUSH RP
    2219/     9EC :                     
    2220/     9EC : 11 77 11            	ld	de, PUSHstr
    2221/     9EF : CD 0A 10            	call	mkopcstr
    2222/     9F2 :                     
    2223/     9F2 : 21 90 12            	ld	hl, POP_PUSHrp
    2224/     9F5 : CD 80 0F            	call	mk_str
    2225/     9F8 : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2226/     9FB :                     
    2227/     9FB :                     ; check EX XX, XX
    2228/     9FB :                     
    2229/     9FB :                     chk_ex:
    2230/     9FB : FE 08               	cp	08H		; EX	AF,AF'
    2231/     9FD : 28 17               	jr	z, ex_af_af
    2232/     9FF : FE E3               	cp	0E3H		; EX	(SP),HL
    2233/     A01 : 28 21               	jr	z, ex_sp_hl
    2234/     A03 : FE EB               	cp	0EBH		; EX	DE,HL
    2235/     A05 : 20 25               	jr	nz, chk_1mc_bnh
    2236/     A07 :                     
    2237/     A07 :                     ; EX DE, HL
    2238/     A07 : 11 5E 1F            	ld	de, RNDE
    2239/     A0A : CD 5D 10            	call	mk_rcs
    2240/     A0D :                     
    2241/     A0D :                     ins_hl_opr:
    2242/     A0D : CD 30 10            	call	hl_crlf
    2243/     A10 :                     
    2244/     A10 :                     ins_ex_opc:
    2245/     A10 : 11 7C 11            	ld	de, EXstr
    2246/     A13 : C3 0A 10            	jp	mkopcstr
    2247/     A16 :                     
    2248/     A16 :                     ; EX AF,AF'
    2249/     A16 :                     ex_af_af:
    2250/     A16 : 11 26 11            	ld	de, RNAF
    2251/     A19 : CD 5D 10            	call	mk_rcs
    2252/     A1C : 11 29 11            	ld	de, RNAFX
    2253/     A1F : CD 33 10            	call	cpstr_crlf
    2254/     A22 : 18 EC               	jr ins_ex_opc
    2255/     A24 :                     
    2256/     A24 :                     ; EX (SP),HL
    2257/     A24 :                     ex_sp_hl:
    2258/     A24 : 11 98 1F            	ld	de, RNSP
    2259/     A27 : CD 4C 10            	call	mk_krkcs
    2260/     A2A : 18 E1               	jr	ins_hl_opr
    2261/     A2C :                     
    2262/     A2C :                     ; check other one MC code
    2263/     A2C :                     
    2264/     A2C :                     chk_1mc_bnh:
    2265/     A2C :                     
    2266/     A2C :                     ; check JP (HL)
    2267/     A2C :                     
    2268/     A2C : FE E9               	cp	0E9H		; JP (HL) ?
    2269/     A2E : 20 0F               	jr	nz, chk_ret
    2270/     A30 :                     
    2271/     A30 :                     ; JP (HL)
    2272/     A30 : 11 31 11            	ld	de, JPstr
    2273/     A33 : CD 0A 10            	call	mkopcstr	; "JP "
    2274/     A36 :                     
    2275/     A36 : 11 65 1F            	ld	de, RNHL
    2276/     A39 : CD 41 10            	call	mk_krk_1
    2277/     A3C : C3 36 10            	jp	insPostStr
    2278/     A3F :                     
    2279/     A3F :                     ; check RET CC
    2280/     A3F :                     chk_ret:
    2281/     A3F : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
    2282/     A42 : 21 7E 05            	ld	hl, RETCC_TBLS
    2283/     A45 : ED B1               	cpir
    2284/     A47 : 20 0F               	jr	nz, chk_rst
    2285/     A49 :                     
    2286/     A49 :                     ; RET CC
    2287/     A49 :                     ; BC : 7 >= BC >= 0
    2288/     A49 :                     
    2289/     A49 :                     	; make opcode string
    2290/     A49 : 11 2D 11            	ld	de, RETstr
    2291/     A4C : CD 0A 10            	call	mkopcstr
    2292/     A4F :                     
    2293/     A4F :                     	; make operand string
    2294/     A4F :                     
    2295/     A4F : 21 70 12            	ld	hl, CC_opr	; string base
    2296/     A52 : CD 80 0F            	call	mk_str
    2297/     A55 : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2298/     A58 :                     
    2299/     A58 :                     ; check RST p
    2300/     A58 :                     
    2301/     A58 :                     chk_rst:
    2302/     A58 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    2303/     A5B : 21 9B 05            	ld	hl, RST_TBLS
    2304/     A5E : ED B1               	cpir
    2305/     A60 : 20 17               	jr	nz, chk_2MC		; 2bytes MC
    2306/     A62 :                     
    2307/     A62 :                     ; RST p
    2308/     A62 :                     
    2309/     A62 : 11 41 11            	ld	de, RSTstr
    2310/     A65 : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2311/     A68 :                     
    2312/     A68 :                     ; 0 <= BC <= 7
    2313/     A68 :                     ; 7: 00H  (0000 0 111 : 00 000 000)
    2314/     A68 :                     ; 6: 08H  (0000 0 110 : 00 001 000)
    2315/     A68 :                     ; 5: 10H  (0000 0 101 : 00 010 000)
    2316/     A68 :                     ; 4: 18H  (0000 0 100 : 00 011 000)
    2317/     A68 :                     ; 3: 20H  (0000 0 011 : 00 100 000)
    2318/     A68 :                     ; 2: 28H  (0000 0 010 : 00 101 000)
    2319/     A68 :                     ; 1: 30H  (0000 0 001 : 00 110 000)
    2320/     A68 :                     ; 0: 38H  (0000 0 000 : 00 111 000)
    2321/     A68 :                     ;
    2322/     A68 : 79                  	ld	a, c
    2323/     A69 : 2F                  	cpl		; not a
    2324/     A6A : CB 27               	sla	a
    2325/     A6C : CB 27               	sla	a
    2326/     A6E : CB 27               	sla	a
    2327/     A70 : E6 38               	and	38H	; a = RST No.
    2328/     A72 :                     
    2329/     A72 : 5F                  	ld	e, a
    2330/     A73 : 21 9F EF            	ld	hl, dasm_OprStr
    2331/     A76 : C3 95 0F            	jp	mk_n2crlf	; "nnH", CR, LF
    2332/     A79 :                     
    2333/     A79 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2334/     A79 :                     	; analysys 2 byte MC
    2335/     A79 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2336/     A79 :                     
    2337/     A79 :                     chk_2MC:
    2338/     A79 :                     
    2339/     A79 : F5                  	push	af
    2340/     A7A : 3E 02               	ld	a, 2
    2341/     A7C : 32 83 EF            	ld	(mc_Size), a
    2342/     A7F : F1                  	pop	af
    2343/     A80 :                     
    2344/     A80 :                     ; check LD r, nn
    2345/     A80 :                     
    2346/     A80 : 01 08 00            	ld	bc, ld_r_nn_e - ld_r_nn_s
    2347/     A83 : 21 3C 06            	ld	hl, ld_r_nn_s
    2348/     A86 : ED B1               	cpir
    2349/     A88 : 20 16               	jr	nz, chk_logop2
    2350/     A8A :                     
    2351/     A8A :                     ; LD r, nn
    2352/     A8A :                     
    2353/     A8A : CD 6E 08            	call	get_r_num
    2354/     A8D : CD 89 0F            	call	get_rstg_off
    2355/     A90 : CD 5D 10            	call	mk_rcs		; "REG, "
    2356/     A93 :                     
    2357/     A93 : ED 5B 7D EF         	ld	de, (dasm_adr)
    2358/     A97 : 13                  	inc	de
    2359/     A98 : 1A                  	ld	a, (de)		; get nn
    2360/     A99 : 5F                  	ld	e, a
    2361/     A9A : CD D8 0F            	call	hex2str_asm	; "nnH"
    2362/     A9D : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2363/     AA0 :                     
    2364/     AA0 :                     ; check logical operation with 8 bit literal
    2365/     AA0 :                     
    2366/     AA0 :                     chk_logop2:
    2367/     AA0 :                     
    2368/     AA0 : 01 0A 00            	ld	bc, log_op_e - log_op_s
    2369/     AA3 : 21 44 06            	ld	hl, log_op_s
    2370/     AA6 : ED B1               	cpir
    2371/     AA8 : C2 F4 0A            	jp	nz, chk_djnz
    2372/     AAB :                     
    2373/     AAB :                     ; logical operation with 8 bit literal
    2374/     AAB :                     
    2375/     AAB :                     
    2376/     AAB : C5                  	push	bc
    2377/     AAC : 21 B2 12            	ld	hl, logop2str
    2378/     AAF : CD 8C 0F            	call	get_strBufpoint
    2379/     AB2 : CD 0A 10            	call	mkopcstr		; make op code string
    2380/     AB5 : C1                  	pop	bc
    2381/     AB6 : 79                  	ld	a, c
    2382/     AB7 :                     
    2383/     AB7 : FE 01               	cp	1
    2384/     AB9 : 28 14               	jr	z, acs_kn2k	; insert "A, (nn)"
    2385/     ABB : B7                  	or	a
    2386/     ABC : 28 1A               	jr	z, ins_kn2k	; insert "(nn), A"
    2387/     ABE : FE 07               	cp	7
    2388/     AC0 : 38 03               	jr	c, ins_n2crlf	; insert  "nnH"
    2389/     AC2 :                     
    2390/     AC2 :                     ; insert "A, "
    2391/     AC2 :                     
    2392/     AC2 : CD 5A 10            	call	a_colon_sp
    2393/     AC5 :                     
    2394/     AC5 :                     ; "nn"
    2395/     AC5 :                     ins_n2crlf:
    2396/     AC5 : ED 5B 7D EF         	ld	de, (dasm_adr)
    2397/     AC9 : 13                  	inc	de
    2398/     ACA : 1A                  	ld	a, (de)
    2399/     ACB : 5F                  	ld	e, a		; get nn
    2400/     ACC : C3 95 0F            	jp	mk_n2crlf	; "nnH", CR, LF
    2401/     ACF :                     
    2402/     ACF :                     acs_kn2k:
    2403/     ACF : CD 5A 10            	call	a_colon_sp	; "A, "
    2404/     AD2 : CD E4 0A            	call	kn2k		; "(nnH)"
    2405/     AD5 : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2406/     AD8 :                     
    2407/     AD8 :                     ; "(nn), A"
    2408/     AD8 :                     ins_kn2k:
    2409/     AD8 : 21 9F EF            	ld	hl, dasm_OprStr	;operand str buffer
    2410/     ADB : CD E4 0A            	call	kn2k		; "(nnH)"
    2411/     ADE : CD 82 10            	call	ins_kmR		; " ,"
    2412/     AE1 : C3 25 10            	jp	a_crlf		; "A", CR, LF, 00h
    2413/     AE4 :                     
    2414/     AE4 :                     ; "(nnH)"
    2415/     AE4 :                     kn2k:
    2416/     AE4 : CD 6D 10            	call	ins_kakkoL	; "("
    2417/     AE7 : ED 5B 7D EF         	ld	de, (dasm_adr)
    2418/     AEB : 13                  	inc	de
    2419/     AEC : 1A                  	ld	a, (de)		; get nn
    2420/     AED : 5F                  	ld	e, a		; e: nn
    2421/     AEE : CD D8 0F            	call	hex2str_asm	; hex strings
    2422/     AF1 : C3 71 10            	jp	ins_kakkoR	; ")"
    2423/     AF4 :                     
    2424/     AF4 :                     
    2425/     AF4 :                     ; check DJNZ nn
    2426/     AF4 :                     chk_djnz:
    2427/     AF4 : FE 10               	cp	10H
    2428/     AF6 : 20 05               	jr	nz, chk_jrnn
    2429/     AF8 :                     
    2430/     AF8 :                     ; check DJNZ nn
    2431/     AF8 : 11 37 11            	ld	de, DJNZstr
    2432/     AFB : 18 07               	jr	jr_n4crlf
    2433/     AFD :                     
    2434/     AFD :                     ; check jr nn
    2435/     AFD :                     chk_jrnn:
    2436/     AFD : FE 18               	cp	18H
    2437/     AFF : 20 0C               	jr	nz, chk_jrcc	; not JR relative
    2438/     B01 :                     
    2439/     B01 :                     ; JR Relative
    2440/     B01 : 11 34 11            	ld	de, JRstr
    2441/     B04 :                     jr_n4crlf:
    2442/     B04 : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2443/     B07 : 21 9F EF            	ld	hl, dasm_OprStr
    2444/     B0A : C3 B9 0F            	jp	mkRel_str	; "nnnnH",cr,lf : nnnn : branch address
    2445/     B0D :                     
    2446/     B0D :                     ; JR CC, nn
    2447/     B0D :                     
    2448/     B0D :                     chk_jrcc:
    2449/     B0D : 01 04 00            	ld	bc, JRCC_TBLE - JRCC_TBLS1
    2450/     B10 : 21 87 05            	ld	hl, JRCC_TBLS1
    2451/     B13 : ED B1               	cpir
    2452/     B15 : 20 12               	jr	nz, chk_3MC	; no, check 3 bnytes MC
    2453/     B17 :                     
    2454/     B17 :                     ; JR CC, nn(Relative Value)
    2455/     B17 :                     
    2456/     B17 : 11 34 11            	ld	de, JRstr
    2457/     B1A : CD 0A 10            	call	mkopcstr
    2458/     B1D : 21 80 12            	ld	hl, JRCC_opr1	; string base
    2459/     B20 : CD 80 0F            	call	mk_str		; "NZ", "Z", "NC", "C"
    2460/     B23 : CD 82 10            	call	ins_kmR		; ", "
    2461/     B26 : C3 B9 0F            	jp	mkRel_str	; "nnnnH", cr, lf
    2462/     B29 :                     
    2463/     B29 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2464/     B29 :                     	; analysys 3 byte MC
    2465/     B29 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2466/     B29 :                     
    2467/     B29 :                     chk_3MC:
    2468/     B29 : F5                  	push	af
    2469/     B2A : 3E 03               	ld	a, 3
    2470/     B2C : 32 83 EF            	ld	(mc_Size), a
    2471/     B2F : F1                  	pop	af
    2472/     B30 :                     
    2473/     B30 : 01 04 00            	ld	bc, THREE_OPTBLe - THREE_OPTBL
    2474/     B33 : 21 4E 06            	ld	hl, THREE_OPTBL
    2475/     B36 : ED B1               	cpir
    2476/     B38 : C2 4A 0B            	jp	nz, chk_ld16
    2477/     B3B :                     
    2478/     B3B :                     ; LD rp, nnnn
    2479/     B3B :                     
    2480/     B3B : 21 C6 12            	ld	hl, logop3str
    2481/     B3E : CD 8C 0F            	call	get_strBufpoint
    2482/     B41 : CD 5D 10            	call	mk_rcs		; "Reg, "
    2483/     B44 :                     
    2484/     B44 :                     get_n4crlf:
    2485/     B44 : CD 72 0B            	call	get_n4
    2486/     B47 : C3 9B 0F            	jp	mk_n4crlf	; "nnnnH", CR, LF, 00h
    2487/     B4A :                     
    2488/     B4A :                     ; LD 16bit literal
    2489/     B4A :                     chk_ld16:
    2490/     B4A : FE 22               	cp	22h
    2491/     B4C : 28 12               	jr	z, ins_kkhl	; "(nnnnH), HL"
    2492/     B4E : FE 32               	cp	32h
    2493/     B50 : 28 14               	jr	z, ins_kka	; "(nnnnH), A"
    2494/     B52 : FE 2A               	cp	2ah
    2495/     B54 : 28 26               	jr	z, ins_hlkk	; "HL, (nnnnH)"
    2496/     B56 : FE 3A               	cp	3ah
    2497/     B58 : C2 8B 0B            	jp	nz, chk_jpn4	; check jp n4
    2498/     B5B :                     
    2499/     B5B :                     ; "A, (nnnnH)"
    2500/     B5B : CD 5A 10            	call	a_colon_sp	; "A, "
    2501/     B5E : 18 22               	jr	kn4kcrlf
    2502/     B60 :                     
    2503/     B60 :                     ; "(nnnnH), HL"
    2504/     B60 :                     ins_kkhl:
    2505/     B60 : CD 6C 0B            	call	kn4hk
    2506/     B63 : C3 30 10            	jp	hl_crlf		; "HL",cr,lf
    2507/     B66 :                     
    2508/     B66 :                     ; "(nnnnH), A"
    2509/     B66 :                     ins_kka:
    2510/     B66 : CD 6C 0B            	call	kn4hk
    2511/     B69 : C3 25 10            	jp	a_crlf		; "A",cr,lf
    2512/     B6C :                     
    2513/     B6C :                     kn4hk:
    2514/     B6C : CD 72 0B            	call	get_n4
    2515/     B6F : C3 A1 0F            	jp	ins_kn4kcs	; "(nnnnH), "
    2516/     B72 :                     
    2517/     B72 :                     get_n4:
    2518/     B72 : E5                  	push	hl
    2519/     B73 : 2A 7D EF            	ld	hl, (dasm_adr)
    2520/     B76 : 23                  	inc	hl
    2521/     B77 : 5E                  	ld	e, (hl)
    2522/     B78 : 23                  	inc	hl
    2523/     B79 : 56                  	ld	d, (hl)
    2524/     B7A : E1                  	pop	hl
    2525/     B7B : C9                  	ret
    2526/     B7C :                     
    2527/     B7C :                     ; "HL, (nnnnH)"
    2528/     B7C :                     ins_hlkk:
    2529/     B7C : 11 65 1F            	ld	de, RNHL
    2530/     B7F : CD 5D 10            	call	mk_rcs		; "HL ,"
    2531/     B82 :                     
    2532/     B82 :                     kn4kcrlf:
    2533/     B82 : CD 72 0B            	call	get_n4
    2534/     B85 : CD B0 0F            	call	mk_kn4k		; "(nnnnH)"
    2535/     B88 : C3 36 10            	jp	insPostStr	; cr, lf
    2536/     B8B :                     
    2537/     B8B :                     ; check JP literal
    2538/     B8B :                     
    2539/     B8B :                     chk_jpn4:
    2540/     B8B : FE C3               	cp	0C3H		; JP literal ?
    2541/     B8D : 20 08               	jr	nz, chk_calln4	; not JP literal
    2542/     B8F :                     
    2543/     B8F :                     ; "JP nnnnH"
    2544/     B8F :                     
    2545/     B8F : 11 31 11            	ld	de, JPstr
    2546/     B92 : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2547/     B95 : 18 AD               	jr	get_n4crlf
    2548/     B97 :                     
    2549/     B97 :                     ; check call literal
    2550/     B97 :                     
    2551/     B97 :                     chk_calln4:
    2552/     B97 : FE CD               	cp	0CDH		; CALL literal ?
    2553/     B99 : 20 08               	jr	nz, chk_jpcc
    2554/     B9B :                     
    2555/     B9B :                     ; "CALL nnnnH",cr,lf
    2556/     B9B :                     
    2557/     B9B : 11 3C 11            	ld	de, CALLstr
    2558/     B9E : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2559/     BA1 : 18 A1               	jr	get_n4crlf
    2560/     BA3 :                     
    2561/     BA3 :                     
    2562/     BA3 :                     ; check 3 byte machine code: branch JP CC, nnnn
    2563/     BA3 :                     
    2564/     BA3 :                     chk_jpcc:
    2565/     BA3 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
    2566/     BA6 : 21 8B 05            	ld	hl, JPCC_TBLS
    2567/     BA9 : ED B1               	cpir
    2568/     BAB : 20 11               	jr	nz, chk_calcc
    2569/     BAD :                     
    2570/     BAD :                     ; JP CC, nnnn
    2571/     BAD :                     ; BC : 7 >= BC >= 0
    2572/     BAD :                     
    2573/     BAD : 11 31 11            	ld	de, JPstr
    2574/     BB0 :                     
    2575/     BB0 :                     CC_NNNN:
    2576/     BB0 : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2577/     BB3 :                     
    2578/     BB3 : 21 70 12            	ld	hl, CC_opr	; string base
    2579/     BB6 : CD 80 0F            	call	mk_str		; de: point (string end) + 1
    2580/     BB9 : CD 82 10            	call	ins_kmR		; " ,"
    2581/     BBC : 18 86               	jr	get_n4crlf	; "nnnnh", cr,lf
    2582/     BBE :                     
    2583/     BBE :                     
    2584/     BBE :                     ; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
    2585/     BBE :                     
    2586/     BBE :                     chk_calcc:
    2587/     BBE : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
    2588/     BC1 : 21 93 05            	ld	hl, CLCC_TBLS
    2589/     BC4 : ED B1               	cpir
    2590/     BC6 : 20 05               	jr	nz, chk_0CBH
    2591/     BC8 :                     
    2592/     BC8 :                     ; CALL CC, nnnn
    2593/     BC8 :                     ; BC : 7 >= BC >= 0 CALLstr
    2594/     BC8 :                     
    2595/     BC8 : 11 3C 11            	ld	de, CALLstr
    2596/     BCB : 18 E3               	jr	CC_NNNN
    2597/     BCD :                     
    2598/     BCD :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2599/     BCD :                     	; OPECODE 0CBH check
    2600/     BCD :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2601/     BCD :                     
    2602/     BCD :                     chk_0CBH:
    2603/     BCD : 2A 7D EF            	ld	hl, (dasm_adr)
    2604/     BD0 : 23                  	inc	hl		; 2nd opecode address
    2605/     BD1 :                     
    2606/     BD1 : F5                  	push	af
    2607/     BD2 : 3E 02               	ld	a, 2
    2608/     BD4 : 32 83 EF            	ld	(mc_Size), a	; set 2bytes MC
    2609/     BD7 : F1                  	pop	af
    2610/     BD8 :                     
    2611/     BD8 : FE CB               	cp	0cbh
    2612/     BDA : C2 93 0C            	jp	nz, chk_0DDH
    2613/     BDD :                     
    2614/     BDD : 7E                  	ld	a, (hl)		; a : 2nd opecode
    2615/     BDE : 21 9F EF            	ld	hl, dasm_OprStr ; set operand string buffer
    2616/     BE1 :                     
    2617/     BE1 : FE 08               	cp	08h
    2618/     BE3 : DA 1C 0C            	jp	c, mk_rlcr
    2619/     BE6 : FE 10               	cp	10h
    2620/     BE8 : DA 25 0C            	jp	c, mk_rrcr
    2621/     BEB : FE 18               	cp	18h
    2622/     BED : DA 2E 0C            	jp	c, mk_rlr
    2623/     BF0 : FE 20               	cp	20h
    2624/     BF2 : DA 37 0C            	jp	c, mk_rrr
    2625/     BF5 : FE 28               	cp	28h
    2626/     BF7 : DA 40 0C            	jp	c, mk_slar
    2627/     BFA : FE 30               	cp	30h
    2628/     BFC : DA 49 0C            	jp	c, mk_srar
    2629/     BFF : FE 38               	cp	38h
    2630/     C01 : DA 6D 0C            	jp	c, op_err
    2631/     C04 : FE 40               	cp	40h
    2632/     C06 : DA 52 0C            	jp	c, mk_srlr
    2633/     C09 : FE 80               	cp	80h
    2634/     C0B : DA 5B 0C            	jp	c, mk_bitr
    2635/     C0E : FE C0               	cp	0c0h
    2636/     C10 : DA 64 0C            	jp	c, mk_resr
    2637/     C13 :                     
    2638/     C13 :                     ; make SET n, r, SET n, (HL)
    2639/     C13 :                     
    2640/     C13 : CD 73 0C            	call	mk_bitr_str
    2641/     C16 : 11 3B 12            	ld	de, SETstr
    2642/     C19 : C3 0A 10            	jp	mkopcstr
    2643/     C1C :                     
    2644/     C1C :                     
    2645/     C1C :                     ; make RLC r, RLC (HL)
    2646/     C1C :                     mk_rlcr:
    2647/     C1C : CD 78 0C            	call	ins_rstg
    2648/     C1F : 11 B6 11            	ld	de, RLCstr
    2649/     C22 : C3 0A 10            	jp	mkopcstr
    2650/     C25 :                     
    2651/     C25 :                     ; make RRC r, RRC (HL)
    2652/     C25 :                     mk_rrcr:
    2653/     C25 : CD 78 0C            	call	ins_rstg
    2654/     C28 : 11 BA 11            	ld	de, RRCstr
    2655/     C2B : C3 0A 10            	jp	mkopcstr
    2656/     C2E :                     
    2657/     C2E :                     ; make RL r, RL (HL)
    2658/     C2E :                     mk_rlr:
    2659/     C2E : CD 78 0C            	call	ins_rstg
    2660/     C31 : 11 BE 11            	ld	de, RLstr
    2661/     C34 : C3 0A 10            	jp	mkopcstr
    2662/     C37 :                     
    2663/     C37 :                     ; make RR r, RR (HL)
    2664/     C37 :                     mk_rrr:
    2665/     C37 : CD 78 0C            	call	ins_rstg
    2666/     C3A : 11 C1 11            	ld	de, RRstr
    2667/     C3D : C3 0A 10            	jp	mkopcstr
    2668/     C40 :                     
    2669/     C40 :                     ; make SLA r, SLA (HL)
    2670/     C40 :                     mk_slar:
    2671/     C40 : CD 78 0C            	call	ins_rstg
    2672/     C43 : 11 C4 11            	ld	de, SLAstr
    2673/     C46 : C3 0A 10            	jp	mkopcstr
    2674/     C49 :                     
    2675/     C49 :                     ; make SRA r, SRA (HL)
    2676/     C49 :                     mk_srar:
    2677/     C49 : CD 78 0C            	call	ins_rstg
    2678/     C4C : 11 3B 12            	ld	de, SETstr
    2679/     C4F : C3 0A 10            	jp	mkopcstr
    2680/     C52 :                     
    2681/     C52 :                     ; make SRL r, SRL (HL)
    2682/     C52 :                     mk_srlr:
    2683/     C52 : CD 78 0C            	call	ins_rstg
    2684/     C55 : 11 CC 11            	ld	de, SRLstr
    2685/     C58 : C3 0A 10            	jp	mkopcstr
    2686/     C5B :                     
    2687/     C5B :                     ; make BIT n, r, BIT n, (HL)
    2688/     C5B :                     mk_bitr:
    2689/     C5B : CD 73 0C            	call	mk_bitr_str
    2690/     C5E : 11 D0 11            	ld	de, BITstr
    2691/     C61 : C3 0A 10            	jp	mkopcstr
    2692/     C64 :                     
    2693/     C64 :                     ; make RES n, r, RES n, (HL)
    2694/     C64 :                     mk_resr:
    2695/     C64 : CD 73 0C            	call	mk_bitr_str
    2696/     C67 : 11 D4 11            	ld	de, RESstr
    2697/     C6A : C3 0A 10            	jp	mkopcstr
    2698/     C6D :                     
    2699/     C6D :                     op_err:
    2700/     C6D : 11 3F 12            	ld	de, ER_OPMSG
    2701/     C70 : C3 0A 10            	jp	mkopcstr
    2702/     C73 :                     
    2703/     C73 :                     ;-------------------------------------------
    2704/     C73 :                     ; input a : 2nd opecode
    2705/     C73 :                     ;	hl : make string buffer
    2706/     C73 :                     ; make "bit No, r" string to *hl
    2707/     C73 :                     ; (ex) *hl = "1, B"
    2708/     C73 :                     ;-------------------------------------------
    2709/     C73 :                     mk_bitr_str:
    2710/     C73 : F5                  	push	af
    2711/     C74 : CD 85 0C            	call	set_bitno
    2712/     C77 : F1                  	pop	af
    2713/     C78 :                     
    2714/     C78 :                     ins_rstg:
    2715/     C78 : E6 07               	and	07h
    2716/     C7A : 4F                  	ld	c, a	; table offset
    2717/     C7B : 06 00               	ld	b, 0		; bc : string offset
    2718/     C7D : E5                  	push	hl
    2719/     C7E : CD 89 0F            	call	get_rstg_off	; get string address to de
    2720/     C81 : E1                  	pop	hl
    2721/     C82 : C3 33 10            	jp	cpstr_crlf	; "REG", CR, LF, 00h
    2722/     C85 :                     ;
    2723/     C85 :                     ; input hl : make string buffer
    2724/     C85 :                     ;
    2725/     C85 :                     set_bitno:
    2726/     C85 : E6 38               	and	38h
    2727/     C87 : 0F                  	rrca
    2728/     C88 : 0F                  	rrca
    2729/     C89 : 0F                  	rrca
    2730/     C8A : 47                  	ld	b, a	; bit number
    2731/     C8B :                     
    2732/     C8B : 3E 30               	ld	a, 30h
    2733/     C8D : B0                  	or	b		; a : bit string "0" - "7"
    2734/     C8E : 77                  	ld	(hl), a
    2735/     C8F : 23                  	inc	hl
    2736/     C90 : C3 82 10            	jp	ins_kmR
    2737/     C93 :                     
    2738/     C93 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2739/     C93 :                     	; OPECODE 0DDH check
    2740/     C93 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2741/     C93 :                     
    2742/     C93 :                     chk_0DDH:
    2743/     C93 : FE DD               	cp	0ddh
    2744/     C95 : C2 39 0E            	jp	nz, chk_0EDH
    2745/     C98 :                     
    2746/     C98 : 11 92 1F            	ld	de, RNIX
    2747/     C9B : ED 53 7F EF         	ld	(reg_xy), de	; save index reg string
    2748/     C9F : 11 E2 12            	ld	de, addixrp_tbl
    2749/     CA2 : ED 53 81 EF         	ld	(xy_srtp), de
    2750/     CA6 :                     
    2751/     CA6 :                     chk_0DDH_1:
    2752/     CA6 :                     
    2753/     CA6 : 7E                  	ld	a, (hl)		; get 2nd opcode
    2754/     CA7 :                     
    2755/     CA7 : FE E3               	cp	0E3h	; EX (SP),IX
    2756/     CA9 : CA ED 0C            	jp	z, ins_kspkix
    2757/     CAC : FE E9               	cp	0E9h	; JP (IX)
    2758/     CAE : CA DB 0C            	jp	z, ins_jpix
    2759/     CB1 : FE F9               	cp	0F9h	; LD SP, IX
    2760/     CB3 : CA FC 0C            	jp	z, ins_spix
    2761/     CB6 :                     
    2762/     CB6 : 01 04 00            	ld	bc, DD_2NDTBL1 - DD_2NDTBL
    2763/     CB9 : 21 56 06            	ld	hl, DD_2NDTBL
    2764/     CBC : ED B1               	cpir
    2765/     CBE : CA 05 0D            	jp	z, ins_ixrp
    2766/     CC1 :                     
    2767/     CC1 : 01 04 00            	ld	bc, DD_2NDTBL2 - DD_2NDTBL1
    2768/     CC4 : 21 5A 06            	ld	hl, DD_2NDTBL1
    2769/     CC7 : ED B1               	cpir
    2770/     CC9 : C2 1A 0D            	jp	nz, chk_0DD3op
    2771/     CCC :                     
    2772/     CCC :                     ; INC	IX
    2773/     CCC :                     ; DEC	IX
    2774/     CCC :                     ; PUSH	IX
    2775/     CCC :                     ; POP	IX
    2776/     CCC : 21 DA 12            	ld	hl, dd_2opt
    2777/     CCF : CD 8C 0F            	call	get_strBufpoint
    2778/     CD2 : CD 0A 10            	call	mkopcstr		; inseert OPCODE strings to dasm_OpcStr
    2779/     CD5 :                     
    2780/     CD5 : 21 9F EF            	ld	hl, dasm_OprStr
    2781/     CD8 : C3 2A 10            	jp	ix_crlf			; "IX", CR, LF, 00h
    2782/     CDB :                     
    2783/     CDB :                     ; JP	(IX)
    2784/     CDB :                     ins_jpix:
    2785/     CDB : ED 5B 7F EF         	ld	de, (reg_xy)
    2786/     CDF :                     ins_jpix1:
    2787/     CDF : D5                  	push	de
    2788/     CE0 : 11 31 11            	ld	de, JPstr
    2789/     CE3 : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2790/     CE6 :                     
    2791/     CE6 : D1                  	pop	de
    2792/     CE7 : CD 41 10            	call	mk_krk_1
    2793/     CEA : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    2794/     CED :                     
    2795/     CED :                     ; EX	(SP),IX
    2796/     CED :                     ins_kspkix:
    2797/     CED : 11 7C 11            	ld	de, EXstr
    2798/     CF0 : CD 0A 10            	call	mkopcstr	; de : next string buffer addr
    2799/     CF3 : 11 98 1F            	ld	de, RNSP
    2800/     CF6 : CD 4C 10            	call	mk_krkcs	; "(SP), "
    2801/     CF9 : C3 2A 10            	jp	ix_crlf		; "IX",cr,lf
    2802/     CFC :                     
    2803/     CFC :                     ; LD	SP,IX
    2804/     CFC :                     ins_spix:
    2805/     CFC : 11 98 1F            	ld	de, RNSP
    2806/     CFF : CD 5D 10            	call	mk_rcs		; "SP, "
    2807/     D02 : C3 2A 10            	jp	ix_crlf		; "IX",cr,lf
    2808/     D05 :                     
    2809/     D05 :                     ; ADD	IX,BC
    2810/     D05 :                     ; ADD	IX,DE
    2811/     D05 :                     ; ADD	IX,IX
    2812/     D05 :                     ; ADD	IX,SP
    2813/     D05 :                     ins_ixrp:
    2814/     D05 : CD 07 10            	call	add_opstr	; de : next string buffer addr
    2815/     D08 :                     
    2816/     D08 : ED 5B 7F EF         	ld	de, (reg_xy)
    2817/     D0C : CD 5D 10            	call	mk_rcs		; "IX, "
    2818/     D0F :                     
    2819/     D0F : E5                  	push	hl
    2820/     D10 : 2A 81 EF            	ld	hl, (xy_srtp)
    2821/     D13 : CD 8C 0F            	call	get_strBufpoint
    2822/     D16 : E1                  	pop	hl
    2823/     D17 : C3 33 10            	jp	cpstr_crlf	; "REG",cr,lf
    2824/     D1A :                     
    2825/     D1A :                     ;
    2826/     D1A :                     ; check 0DD 3bytes MC
    2827/     D1A :                     ;
    2828/     D1A :                     chk_0DD3op:
    2829/     D1A : F5                  	push	af
    2830/     D1B : 3E 03               	ld	a, 3
    2831/     D1D : 32 83 EF            	ld	(mc_Size), a	; 2byte machine code
    2832/     D20 : F1                  	pop	af
    2833/     D21 :                     
    2834/     D21 : 01 0E 00            	ld	bc, dd_ld_tble - dd_ld_tbl
    2835/     D24 : 21 BA 10            	ld	hl, dd_ld_tbl
    2836/     D27 : ED B1               	cpir
    2837/     D29 : CA 59 0D            	jp	z, dd_ld
    2838/     D2C :                     
    2839/     D2C : FE 86               	cp	86h
    2840/     D2E : CA 84 0D            	jp	z, dd_mix
    2841/     D31 : FE 8E               	cp	8eh
    2842/     D33 : CA 8F 0D            	jp	z, dd_mix1
    2843/     D36 : FE 9E               	cp	9eh
    2844/     D38 : CA 94 0D            	jp	z, dd_mix2
    2845/     D3B :                     
    2846/     D3B : 01 07 00            	ld	bc, dd_log_tble - dd_log_tbl
    2847/     D3E : 21 C8 10            	ld	hl, dd_log_tbl
    2848/     D41 : ED B1               	cpir
    2849/     D43 : C2 99 0D            	jp	nz, chk_0DD4op
    2850/     D46 :                     
    2851/     D46 :                     ;
    2852/     D46 :                     ; make "SUB (IX+nn)", "AND (IX+nn)", "XOR (IX+nn)"
    2853/     D46 :                     ;       "OR (IX+nn)",  "CP (IX+nn)"
    2854/     D46 :                     ;      "INC (IX+nn)", "DEC (IX+nn)"
    2855/     D46 :                     ;
    2856/     D46 : 21 F2 12            	ld	hl, ddlogtbl
    2857/     D49 : CD 8C 0F            	call	get_strBufpoint
    2858/     D4C : CD 0A 10            	call	mkopcstr
    2859/     D4F :                     
    2860/     D4F :                     mk_kixpnk:
    2861/     D4F : ED 5B 7F EF         	ld	de, (reg_xy)
    2862/     D53 :                     
    2863/     D53 :                     mk_kiypnk:
    2864/     D53 : 21 9F EF            	ld	hl, dasm_OprStr
    2865/     D56 : C3 50 0F            	jp	kixypnk_crlf		; "(IX+nnH)",cr,lf
    2866/     D59 :                     
    2867/     D59 :                     ;
    2868/     D59 :                     ; make "LD (IX+nn), r" or "LD r, (IX+nn)"
    2869/     D59 :                     ;
    2870/     D59 :                     dd_ld:
    2871/     D59 : 79                  	ld	a, c
    2872/     D5A : FE 07               	cp	7
    2873/     D5C : D2 71 0D            	jp	nc, dd_ld1
    2874/     D5F :                     	
    2875/     D5F :                     ; LD (IX+nn), r
    2876/     D5F : ED 5B 7F EF         	ld	de, (reg_xy)
    2877/     D63 : CD 47 0F            	call	kixypnk_cs	; make "(IX+nn), "
    2878/     D66 :                     
    2879/     D66 : E5                  	push	hl
    2880/     D67 : 21 00 13            	ld	hl, dd_ldtbl
    2881/     D6A : CD 8C 0F            	call	get_strBufpoint
    2882/     D6D : E1                  	pop	hl
    2883/     D6E : C3 33 10            	jp	cpstr_crlf	; "A", "L", "H", "E", D", "C", "B"
    2884/     D71 :                     				; CR, LF, 00h
    2885/     D71 :                     	
    2886/     D71 :                     ; LD r, (IX+nn)
    2887/     D71 :                     dd_ld1:
    2888/     D71 : D6 07               	sub	7
    2889/     D73 : 4F                  	ld	c, a
    2890/     D74 : 21 00 13            	ld	hl, dd_ldtbl
    2891/     D77 : CD 8C 0F            	call	get_strBufpoint
    2892/     D7A :                     
    2893/     D7A : CD 5D 10            	call	mk_rcs		; "REG, "
    2894/     D7D :                     dd_mix4:
    2895/     D7D : ED 5B 7F EF         	ld	de, (reg_xy)
    2896/     D81 : C3 50 0F            	jp	kixypnk_crlf	; "(IX+nn)", CR, LF, 00h
    2897/     D84 :                     
    2898/     D84 :                     
    2899/     D84 :                     ; "ADD A,(IX+nn)"
    2900/     D84 :                     dd_mix:
    2901/     D84 : 11 4D 11            	ld	de, ADDstr
    2902/     D87 :                     dd_mix3:
    2903/     D87 : CD 0A 10            	call	mkopcstr	; "ADD"
    2904/     D8A : CD 5A 10            	call	a_colon_sp	; "A, "
    2905/     D8D : 18 EE               	jr	dd_mix4		; "(IX+nn)",cr,lf
    2906/     D8F :                     
    2907/     D8F :                     ;"ADC A,(IX+nn)"
    2908/     D8F :                     dd_mix1:
    2909/     D8F : 11 51 11            	ld	de, ADCstr
    2910/     D92 : 18 F3               	jr	dd_mix3
    2911/     D94 :                     
    2912/     D94 :                     ;"SBC A,(IX+nn)"
    2913/     D94 :                     dd_mix2:
    2914/     D94 : 11 59 11            	ld	de, SBCstr
    2915/     D97 : 18 EE               	jr	dd_mix3
    2916/     D99 :                     
    2917/     D99 :                     ;
    2918/     D99 :                     ; check 0DD 4bytes MC
    2919/     D99 :                     ;
    2920/     D99 :                     chk_0DD4op:
    2921/     D99 : F5                  	push	af
    2922/     D9A : 3E 04               	ld	a, 4
    2923/     D9C : 32 83 EF            	ld	(mc_Size), a	; 2byte machine code
    2924/     D9F : F1                  	pop	af
    2925/     DA0 :                     
    2926/     DA0 : FE 21               	cp	21h
    2927/     DA2 : CA BF 0D            	jp	z, DD_21
    2928/     DA5 : FE 22               	cp	22h
    2929/     DA7 : CA CC 0D            	jp	z, DD_22
    2930/     DAA : FE 2A               	cp	2ah
    2931/     DAC : CA D5 0D            	jp	z, DD_2a
    2932/     DAF : FE 36               	cp	36h
    2933/     DB1 : C2 E5 0D            	jp	nz, chk_DD_CB
    2934/     DB4 :                     ; DD 36
    2935/     DB4 :                     ; "LD (IX+xx), yy"
    2936/     DB4 :                     
    2937/     DB4 : ED 5B 7F EF         	ld	de, (reg_xy)
    2938/     DB8 : CD 47 0F            	call	kixypnk_cs	; "(IX+xx), "
    2939/     DBB : 5A                  	ld	e, d		; e: yy
    2940/     DBC : C3 95 0F            	jp	mk_n2crlf	; "0yyH",cr,lf
    2941/     DBF :                     
    2942/     DBF :                     
    2943/     DBF :                     ; "LD IX, nnnn"
    2944/     DBF :                     DD_21:
    2945/     DBF : ED 5B 7F EF         	ld	de, (reg_xy)
    2946/     DC3 : CD 5D 10            	call	mk_rcs		; "IX, "
    2947/     DC6 : CD 75 0F            	call	get_nnnn
    2948/     DC9 : C3 9B 0F            	jp	mk_n4crlf	; "nnnnH",cr,lf
    2949/     DCC :                     
    2950/     DCC :                     ; "LD (nnnn), IX"
    2951/     DCC :                     DD_22:
    2952/     DCC : CD 75 0F            	call	get_nnnn
    2953/     DCF : CD A1 0F            	call	ins_kn4kcs	; "(nnnnH), "
    2954/     DD2 : C3 2A 10            	jp	ix_crlf		; "IX",cr,lf
    2955/     DD5 :                     
    2956/     DD5 :                     ; "LD IX, (nnnn)"
    2957/     DD5 :                     DD_2a:
    2958/     DD5 : ED 5B 7F EF         	ld	de, (reg_xy)
    2959/     DD9 :                     DD_2a1:
    2960/     DD9 : CD 5D 10            	call	mk_rcs		; "IX, "
    2961/     DDC : CD 75 0F            	call	get_nnnn
    2962/     DDF : CD B0 0F            	call	mk_kn4k		; "(nnnnH)"
    2963/     DE2 : C3 36 10            	jp	insPostStr	; cr,lf
    2964/     DE5 :                     
    2965/     DE5 :                     chk_DD_CB
    2966/     DE5 : FE CB               	cp	0CBH
    2967/     DE7 : C2 6D 0C            	jp	nz, op_err
    2968/     DEA :                     
    2969/     DEA : CD 75 0F            	call	get_nnnn	; d: 3rd OP, e:nn
    2970/     DED : 7A                  	ld	a, d
    2971/     DEE :                     
    2972/     DEE : 01 07 00            	ld	bc, dd_rt_tble - dd_rt_tbles
    2973/     DF1 : 21 CF 10            	ld	hl, dd_rt_tbles
    2974/     DF4 : ED B1               	cpir
    2975/     DF6 : C2 05 0E            	jp	nz, DD_CB_nn_XX
    2976/     DF9 :                     
    2977/     DF9 : 21 38 13            	ld	hl, dd_rt_str
    2978/     DFC : CD 8C 0F            	call	get_strBufpoint
    2979/     DFF : CD 0A 10            	call	mkopcstr	; RLC, RRC, RL, RR, SLA, SRA, SRL
    2980/     E02 : C3 4F 0D            	jp	mk_kixpnk	; "(IX+nnH)",cr,lf
    2981/     E05 :                     
    2982/     E05 :                     ; check BIT, RES, SET
    2983/     E05 :                     DD_CB_nn_XX:
    2984/     E05 :                     
    2985/     E05 :                     	; check undefine MC
    2986/     E05 : 01 18 00            	ld	bc, dd_bit_opTble - dd_bit_opTbl
    2987/     E08 : 21 D6 10            	ld	hl, dd_bit_opTbl
    2988/     E0B : ED B1               	cpir
    2989/     E0D : C2 6D 0C            	jp	nz, op_err
    2990/     E10 :                     
    2991/     E10 : FE 80               	cp	80h
    2992/     E12 : DA 29 0E            	jp	c, dd_bit
    2993/     E15 : FE C0               	cp	0c0h
    2994/     E17 : DA 31 0E            	jp	c, dd_res
    2995/     E1A :                     
    2996/     E1A :                     ; DD_SET
    2997/     E1A :                     ; "SET i, (IX+nn)"
    2998/     E1A :                     
    2999/     E1A : 11 3B 12            	ld	de, SETstr
    3000/     E1D : CD 0A 10            	call	mkopcstr
    3001/     E20 :                     
    3002/     E20 :                     DD_BSR:
    3003/     E20 :                     
    3004/     E20 : 21 9F EF            	ld	hl, dasm_OprStr ; set operand string buffer
    3005/     E23 : CD 85 0C            	call	set_bitno	; "i, "
    3006/     E26 : C3 7D 0D            	jp	dd_mix4		; "(IX+nn)", cr,lf
    3007/     E29 :                     
    3008/     E29 :                     ; DD_BIT
    3009/     E29 :                     ; "BIT i, (IX+nn)"
    3010/     E29 :                     dd_bit:
    3011/     E29 : 11 D0 11            	ld	de, BITstr
    3012/     E2C : CD 0A 10            	call	mkopcstr
    3013/     E2F : 18 EF               	jr	DD_BSR
    3014/     E31 :                     
    3015/     E31 :                     ; DD_RES
    3016/     E31 :                     ; "RES i, (IX+nn)"
    3017/     E31 :                     dd_res:
    3018/     E31 : 11 D4 11            	ld	de, RESstr
    3019/     E34 : CD 0A 10            	call	mkopcstr
    3020/     E37 : 18 E7               	jr	DD_BSR
    3021/     E39 :                     
    3022/     E39 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3023/     E39 :                     	; OPECODE 0EDH check
    3024/     E39 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3025/     E39 :                     
    3026/     E39 :                     chk_0EDH:
    3027/     E39 : FE ED               	cp	0edh
    3028/     E3B : C2 36 0F            	jp	nz, chk_0FDH
    3029/     E3E :                     
    3030/     E3E : 7E                  	ld	a, (hl)		; get 2nd opcode
    3031/     E3F :                     
    3032/     E3F :                     	; check undefine MC
    3033/     E3F : 01 38 00            	ld	bc, ed_op_tble - ed_op_tbl
    3034/     E42 : 21 EE 10            	ld	hl, ed_op_tbl
    3035/     E45 : ED B1               	cpir
    3036/     E47 : C2 6D 0C            	jp	nz, op_err
    3037/     E4A :                     
    3038/     E4A : 79                  	ld	a, c
    3039/     E4B : FE 06               	cp	6
    3040/     E4D : DA 17 0F            	jp	c, ed_4mc
    3041/     E50 : FE 1B               	cp	27
    3042/     E52 : DA 09 0F            	jp	c, ed_no_opr
    3043/     E55 : FE 1E               	cp	30
    3044/     E57 : DA F6 0E            	jp	c, ed_im
    3045/     E5A : CA D6 0E            	jp	z, ed_ld_ar
    3046/     E5D : FE 1F               	cp	31
    3047/     E5F : CA DF 0E            	jp	z, ed_ld_ai
    3048/     E62 : FE 20               	cp	32
    3049/     E64 : CA E8 0E            	jp	z, ed_ld_ra
    3050/     E67 : FE 21               	cp	33
    3051/     E69 : CA F1 0E            	jp	z, ed_ld_ia
    3052/     E6C : FE 26               	cp	38
    3053/     E6E : DA C5 0E            	jp	c, ed_adc
    3054/     E71 : FE 2A               	cp	42
    3055/     E73 : DA AF 0E            	jp	c, ed_sbc
    3056/     E76 : FE 31               	cp	49
    3057/     E78 : DA 94 0E            	jp	c, ed_out
    3058/     E7B :                     
    3059/     E7B :                     ; c: 49 - 55 : IN r,(C) (r:B,C,D,E,H,L,A)
    3060/     E7B :                     
    3061/     E7B : 11 B3 11            	ld	de, INstr
    3062/     E7E : CD 0A 10            	call	mkopcstr
    3063/     E81 :                     
    3064/     E81 : 79                  	ld	a, c
    3065/     E82 : D6 31               	sub	49
    3066/     E84 : 4F                  	ld	c, a
    3067/     E85 : 21 00 13            	ld	hl, dd_ldtbl
    3068/     E88 : CD 8C 0F            	call	get_strBufpoint	; get strung buffer
    3069/     E8B : CD 5D 10            	call	mk_rcs		; "REG, "
    3070/     E8E : 11 43 12            	ld	de, KCKstr
    3071/     E91 : C3 33 10            	jp	cpstr_crlf	; "(C)",cr,lf
    3072/     E94 :                     
    3073/     E94 :                     ; c: 42 - 48 : OUT (C),r(r:B,C,D,E,H,L,A)
    3074/     E94 :                     ed_out:
    3075/     E94 : 11 AF 11            	ld	de, OUTstr
    3076/     E97 : CD 0A 10            	call	mkopcstr
    3077/     E9A :                     
    3078/     E9A : 11 43 12            	ld	de, KCKstr
    3079/     E9D : CD 5D 10            	call	mk_rcs		; "(C), "
    3080/     EA0 :                     
    3081/     EA0 : 79                  	ld	a, c
    3082/     EA1 : D6 2A               	sub	42
    3083/     EA3 : 4F                  	ld	c, a
    3084/     EA4 : E5                  	push	hl
    3085/     EA5 : 21 00 13            	ld	hl, dd_ldtbl
    3086/     EA8 :                     
    3087/     EA8 :                     ed_out1:
    3088/     EA8 : CD 8C 0F            	call	get_strBufpoint	; get strung buffer
    3089/     EAB : E1                  	pop	hl
    3090/     EAC : C3 33 10            	jp	cpstr_crlf	; "REG",cr,lf
    3091/     EAF :                     
    3092/     EAF :                     ; c: 38 - 41 : SBC HL,rr(rr:BC,DE,HL,SP)
    3093/     EAF :                     ed_sbc:
    3094/     EAF : 11 59 11            	ld	de, SBCstr
    3095/     EB2 : CD 0A 10            	call	mkopcstr
    3096/     EB5 :                     
    3097/     EB5 : 11 65 1F            	ld	de, RNHL
    3098/     EB8 : CD 5D 10            	call	mk_rcs		; "HL, "
    3099/     EBB :                     
    3100/     EBB : 79                  	ld	a, c
    3101/     EBC : D6 26               	sub	38
    3102/     EBE :                     ed_sbc1:
    3103/     EBE : 4F                  	ld	c, a
    3104/     EBF : E5                  	push	hl
    3105/     EC0 : 21 88 12            	ld	hl, INC_DEC_ADDrp
    3106/     EC3 : 18 E3               	jr	ed_out1
    3107/     EC5 :                     
    3108/     EC5 :                     ; c: 34 - 37 : ADC HL,rr(rr:BC,DE,HL,SP)
    3109/     EC5 :                     ed_adc:
    3110/     EC5 : 11 51 11            	ld	de, ADCstr
    3111/     EC8 : CD 0A 10            	call	mkopcstr
    3112/     ECB :                     
    3113/     ECB : 11 65 1F            	ld	de, RNHL
    3114/     ECE : CD 5D 10            	call	mk_rcs		; "HL, "
    3115/     ED1 :                     
    3116/     ED1 : 79                  	ld	a, c
    3117/     ED2 : D6 22               	sub	34
    3118/     ED4 : 18 E8               	jr	ed_sbc1
    3119/     ED6 :                     
    3120/     ED6 :                     ; c: 30, 31 : LD A,R ; LD A,I
    3121/     ED6 :                     ed_ld_ar:
    3122/     ED6 : CD 5A 10            	call	a_colon_sp	; "A, "
    3123/     ED9 : 11 A0 1F            	ld	de, RNR
    3124/     EDC : C3 33 10            	jp	cpstr_crlf	; "R",cr,lf
    3125/     EDF :                     	
    3126/     EDF :                     ed_ld_ai:
    3127/     EDF : CD 5A 10            	call	a_colon_sp	; "A, "
    3128/     EE2 : 11 9E 1F            	ld	de, RNI
    3129/     EE5 : C3 33 10            	jp	cpstr_crlf	; "I",cr,lf
    3130/     EE8 :                     	
    3131/     EE8 :                     ; c: 32, 33 : LD R,A ; LD I,A
    3132/     EE8 :                     ed_ld_ra:
    3133/     EE8 : 11 A0 1F            	ld	de, RNR
    3134/     EEB :                     ed_ld_ra1:
    3135/     EEB : CD 5D 10            	call	mk_rcs		; "R, "
    3136/     EEE : C3 25 10            	jp	a_crlf		; "A",cr,lf
    3137/     EF1 :                     
    3138/     EF1 :                     ed_ld_ia:
    3139/     EF1 : 11 9E 1F            	ld	de, RNI
    3140/     EF4 : 18 F5               	jr	ed_ld_ra1
    3141/     EF6 :                     	
    3142/     EF6 :                     ; c: 27, 28, 29 : IM 2, IM 1, IM 0
    3143/     EF6 :                     ed_im:
    3144/     EF6 : 11 DC 11            	ld	de, IMstr
    3145/     EF9 : CD 0A 10            	call	mkopcstr
    3146/     EFC :                     
    3147/     EFC : 3E 1D               	ld	a, 29
    3148/     EFE : 91                  	sub	c
    3149/     EFF : C6 30               	add	a, '0'		; '0', '1', '2'
    3150/     F01 : 21 9F EF            	ld	hl, dasm_OprStr
    3151/     F04 : 77                  	ld	(hl), a
    3152/     F05 : 23                  	inc	hl
    3153/     F06 : C3 36 10            	jp	insPostStr
    3154/     F09 :                     
    3155/     F09 :                     ; c: 6 - 26 ed_noopr
    3156/     F09 :                     ed_no_opr:
    3157/     F09 : D6 06               	sub	6
    3158/     F0B : 4F                  	ld	c, a
    3159/     F0C : 06 00               	ld	b, 0
    3160/     F0E : 21 0E 13            	ld	hl, ed_noopr
    3161/     F11 : CD 8C 0F            	call	get_strBufpoint		; de : string buffer
    3162/     F14 : C3 0A 10            	jp	mkopcstr
    3163/     F17 :                     ;
    3164/     F17 :                     ; check ED 4 byte MC
    3165/     F17 :                     ;
    3166/     F17 :                     ed_4mc:
    3167/     F17 : 3E 04               	ld	a, 4
    3168/     F19 : 32 83 EF            	ld	(mc_Size), a	; 4byte machine code
    3169/     F1C :                     
    3170/     F1C : C5                  	push	bc
    3171/     F1D : 79                  	ld	a, c
    3172/     F1E : 21 CE 12            	ld	hl, ed_rp_str
    3173/     F21 : CD 8C 0F            	call	get_strBufpoint		; de : string buffer
    3174/     F24 : C1                  	pop	bc
    3175/     F25 : 79                  	ld	a, c
    3176/     F26 : FE 03               	cp	3
    3177/     F28 : DA D9 0D            	jp	c, DD_2a1		; "rr, (nnnnH)",cr,lf
    3178/     F2B :                     					; rr: BC, DE, SP
    3179/     F2B :                     ; "(nnnnH), rr" rr: BC, DE, SP
    3180/     F2B :                     
    3181/     F2B : D5                  	push	de
    3182/     F2C : CD 75 0F            	call	get_nnnn
    3183/     F2F : CD A1 0F            	call	ins_kn4kcs	; "(nnnnH), "
    3184/     F32 : D1                  	pop	de
    3185/     F33 : C3 33 10            	jp	cpstr_crlf	; "REG",cr,lf
    3186/     F36 :                     
    3187/     F36 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3188/     F36 :                     	; OPECODE 0FDH check
    3189/     F36 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3190/     F36 :                     
    3191/     F36 :                     chk_0FDH:
    3192/     F36 :                     
    3193/     F36 : 11 95 1F            	ld	de, RNIY
    3194/     F39 : ED 53 7F EF         	ld	(reg_xy), de	; save index reg string
    3195/     F3D : 11 EA 12            	ld	de, addiyrp_tbl
    3196/     F40 : ED 53 81 EF         	ld	(xy_srtp), de
    3197/     F44 :                     
    3198/     F44 : C3 A6 0C            	jp	chk_0DDH_1
    3199/     F47 :                     
    3200/     F47 :                     ;-----------------------------------
    3201/     F47 :                     ; make "(REG+nn), " at dasm_OprStr
    3202/     F47 :                     ;	REG : IX or IY
    3203/     F47 :                     ; input de: RNIX, or RNIY
    3204/     F47 :                     ;-----------------------------------
    3205/     F47 :                     kixypnk_cs:
    3206/     F47 : 21 9F EF            	ld	hl, dasm_OprStr
    3207/     F4A : CD 56 0F            	call	mk_kixypnk
    3208/     F4D : C3 82 10            	jp	ins_kmR
    3209/     F50 :                     
    3210/     F50 :                     ;-----------------------------------
    3211/     F50 :                     ; make "(REG+nn)",cr,lf 
    3212/     F50 :                     ;	REG : IX or IY
    3213/     F50 :                     ; input de: RNIX, or RNIY
    3214/     F50 :                     ;       hl: string buffer
    3215/     F50 :                     ;-----------------------------------
    3216/     F50 :                     kixypnk_crlf:
    3217/     F50 : CD 56 0F            	call	mk_kixypnk
    3218/     F53 : C3 36 10            	jp	insPostStr	; CR, LF, 00h
    3219/     F56 :                     
    3220/     F56 :                     ;-----------------------------------
    3221/     F56 :                     ; make "(IX+nn)", "(IY+nn)" string
    3222/     F56 :                     ; input de: RNIX, or RNIY
    3223/     F56 :                     ;       hl: string buffer
    3224/     F56 :                     ;-----------------------------------
    3225/     F56 :                     mk_kixypnk:
    3226/     F56 : CD 6D 10            	call	ins_kakkoL	; "("
    3227/     F59 : CD 65 10            	call	st_copy	; IX
    3228/     F5C : CD 75 0F            	call	get_nnnn
    3229/     F5F : 7B                  	ld	a, e		;get number
    3230/     F60 : FE 80               	cp	80h
    3231/     F62 : 38 0C               	jr	c, numPlus	; number plus
    3232/     F64 : ED 44               	neg			; a = not a + 1
    3233/     F66 : 5F                  	ld	e, a
    3234/     F67 : CD 7E 10            	call	ins_misR	; -
    3235/     F6A :                     sv_nnkr:
    3236/     F6A : CD D8 0F            	call	hex2str_asm	; nnh
    3237/     F6D : C3 71 10            	jp	ins_kakkoR	; ")"
    3238/     F70 :                     	
    3239/     F70 :                     numPlus:
    3240/     F70 : CD 7A 10            	call	ins_plsR	; +
    3241/     F73 : 18 F5               	jr	sv_nnkr
    3242/     F75 :                     
    3243/     F75 :                     ; de : nnnn , or d:yy, e:xx
    3244/     F75 :                     get_nnnn:
    3245/     F75 : E5                  	push	hl
    3246/     F76 : 2A 7D EF            	ld	hl, (dasm_adr)
    3247/     F79 : 23                  	inc	hl		; 2nd opecode address
    3248/     F7A : 23                  	inc	hl		; operand address
    3249/     F7B : 5E                  	ld	e, (hl)		; get nn
    3250/     F7C : 23                  	inc	hl
    3251/     F7D : 56                  	ld	d, (hl)		; d:yy use for "LD (IX+xx), yy"
    3252/     F7E :                     				; d:OP use for 4bytes MC like "DD CB xx OP"
    3253/     F7E :                     				; de : YYXX : ED OP XX YY
    3254/     F7E : E1                  	pop	hl
    3255/     F7F : C9                  	ret
    3256/     F80 :                     
    3257/     F80 :                     ;-------------------------------------------------
    3258/     F80 :                     ; hl: massage table
    3259/     F80 :                     ; bc: found operand point
    3260/     F80 :                     ;
    3261/     F80 :                     ; output: copy strings to dasm_OprStr buffer
    3262/     F80 :                     ;         hl = end point of copied string buffer
    3263/     F80 :                     ;-------------------------------------------------
    3264/     F80 :                     mk_str:
    3265/     F80 : CD 8C 0F            	call	get_strBufpoint
    3266/     F83 : 21 9F EF            	ld	hl, dasm_OprStr
    3267/     F86 : C3 65 10            	jp	st_copy
    3268/     F89 :                     
    3269/     F89 :                     ;------------------------------------------------
    3270/     F89 :                     ; get register strings address
    3271/     F89 :                     ; input bc: string buffer offset
    3272/     F89 :                     ; output de: register strings address
    3273/     F89 :                     ;------------------------------------------------
    3274/     F89 :                     get_rstg_off:
    3275/     F89 : 21 60 12            	ld	hl, disRegTbl
    3276/     F8C :                     
    3277/     F8C :                     ;-------------------------------------------------
    3278/     F8C :                     ; input
    3279/     F8C :                     ;	bc: found operand point
    3280/     F8C :                     ;	hl: massage table
    3281/     F8C :                     ; output: 
    3282/     F8C :                     ;	DE : string point
    3283/     F8C :                     ;-------------------------------------------------
    3284/     F8C :                     get_strBufpoint:
    3285/     F8C : CB 21               	sla	c
    3286/     F8E : CB 10               	rl	b		; bc *=2
    3287/     F90 : 09                  	add	hl, bc		; get operand string point
    3288/     F91 : 5E                  	ld	e, (hl)
    3289/     F92 : 23                  	inc	hl
    3290/     F93 : 56                  	ld	d, (hl)
    3291/     F94 : C9                  	ret
    3292/     F95 :                     
    3293/     F95 :                     ;------------------------------------------------
    3294/     F95 :                     ; insert "nnH", CR, LF to buffer
    3295/     F95 :                     ;input e: value
    3296/     F95 :                     ;      hl: string buffer
    3297/     F95 :                     ;------------------------------------------------
    3298/     F95 :                     mk_n2crlf:
    3299/     F95 : CD D8 0F            	call	hex2str_asm
    3300/     F98 : C3 36 10            	jp	insPostStr
    3301/     F9B :                     
    3302/     F9B :                     ;------------------------------------------------
    3303/     F9B :                     ; insert "nnnnH", CR, LF to buffer
    3304/     F9B :                     ;input de: value
    3305/     F9B :                     ;      hl: string buffer
    3306/     F9B :                     ;------------------------------------------------
    3307/     F9B :                     mk_n4crlf:
    3308/     F9B : CD C7 0F            	call	hex4str_asm
    3309/     F9E : C3 36 10            	jp	insPostStr
    3310/     FA1 :                     
    3311/     FA1 :                     ;------------------------------------------------
    3312/     FA1 :                     ; insert "(nnnnH), " to buffer dasm_OprStr
    3313/     FA1 :                     ;input de: value
    3314/     FA1 :                     ;
    3315/     FA1 :                     ; make "(nnnnH), " to dasm_OprStr buffer
    3316/     FA1 :                     ; output hl: end point of string buffer
    3317/     FA1 :                     ;------------------------------------------------
    3318/     FA1 :                     ins_kn4kcs:
    3319/     FA1 : 21 9F EF            	ld	hl, dasm_OprStr	;operand str buffer
    3320/     FA4 : CD 6D 10            	call	ins_kakkoL	; "("
    3321/     FA7 : CD C7 0F            	call	hex4str_asm
    3322/     FAA : CD 71 10            	call	ins_kakkoR	; ")"
    3323/     FAD : C3 82 10            	jp	ins_kmR		; ", "
    3324/     FB0 :                     
    3325/     FB0 :                     ;------------------------------------------------
    3326/     FB0 :                     ; insert "(nnnnH)" to buffer
    3327/     FB0 :                     ;input de: value
    3328/     FB0 :                     ;      hl: string buffer
    3329/     FB0 :                     ;------------------------------------------------
    3330/     FB0 :                     mk_kn4k:
    3331/     FB0 : CD 6D 10            	call	ins_kakkoL	; "("
    3332/     FB3 : CD C7 0F            	call	hex4str_asm
    3333/     FB6 : C3 71 10            	jp	ins_kakkoR	; ")"
    3334/     FB9 :                     
    3335/     FB9 :                     ;------------------------------------------------
    3336/     FB9 :                     ; Make address string from branch relative value
    3337/     FB9 :                     ; input hl: string buffer pointer
    3338/     FB9 :                     ; output *hl= "nnnnH",cr,lf,0
    3339/     FB9 :                     ;------------------------------------------------
    3340/     FB9 :                     mkRel_str:
    3341/     FB9 : E5                  	push	hl
    3342/     FBA : 2A 7D EF            	ld	hl, (dasm_adr)
    3343/     FBD : CD 1A 05            	call	Rel_adr_c	; return hl : target addr
    3344/     FC0 : EB                  	ex	de, hl		; hl: buffer, de: addr value
    3345/     FC1 : E1                  	pop	hl
    3346/     FC2 : CD C7 0F            	call	hex4str_asm
    3347/     FC5 : 18 6F               	jr	insPostStr
    3348/     FC7 :                     	
    3349/     FC7 :                     ;------------------------------------------------
    3350/     FC7 :                     ;input de: value, hl: save baffer.
    3351/     FC7 :                     ;output 4hex chars(asm format)
    3352/     FC7 :                     ;	(ex). "0FFFFH"
    3353/     FC7 :                     ;             "1234H"
    3354/     FC7 :                     ;       hl : hl = hl + 5(or 6); *hl=0
    3355/     FC7 :                     ;------------------------------------------------
    3356/     FC7 :                     hex4str_asm:
    3357/     FC7 : 7A                  	ld	a, d
    3358/     FC8 : FE A0               	cp	0a0h
    3359/     FCA : 38 04               	jr	c, h4sa_1
    3360/     FCC : 3E 30               	ld	a, '0'
    3361/     FCE : 77                  	ld	(hl), a
    3362/     FCF : 23                  	inc	hl
    3363/     FD0 :                     
    3364/     FD0 :                     h4sa_1:
    3365/     FD0 : CD E6 0F            	call	hex4str
    3366/     FD3 :                     h4sa_2:
    3367/     FD3 : 3E 48               	ld	a, 'H'
    3368/     FD5 : C3 73 10            	jp	ikk_1
    3369/     FD8 :                     
    3370/     FD8 :                     ;------------------------------------------------
    3371/     FD8 :                     ;input e: value, hl: save baffer.
    3372/     FD8 :                     ;output: 2 hex chars(asm format)
    3373/     FD8 :                     ;	(ex). "0FFH"
    3374/     FD8 :                     ;             "12H"
    3375/     FD8 :                     ;       hl : hl = hl + 3(or 4); *hl=0
    3376/     FD8 :                     ;------------------------------------------------
    3377/     FD8 :                     hex2str_asm:
    3378/     FD8 : 7B                  	ld	a, e
    3379/     FD9 : FE A0               	cp	0a0h
    3380/     FDB : 38 04               	jr	c, h2sa_1
    3381/     FDD : 3E 30               	ld	a, '0'
    3382/     FDF : 77                  	ld	(hl), a
    3383/     FE0 : 23                  	inc	hl
    3384/     FE1 :                     
    3385/     FE1 :                     h2sa_1:
    3386/     FE1 : CD EE 0F            	call	hex2str
    3387/     FE4 : 18 ED               	jr	h4sa_2
    3388/     FE6 :                     
    3389/     FE6 :                     ;------------------------------------------------
    3390/     FE6 :                     ;input de: value, hl: save baffer.
    3391/     FE6 :                     ;output: 4 hex chras in save buffer
    3392/     FE6 :                     ;	 hl = hl + 4
    3393/     FE6 :                     ;------------------------------------------------
    3394/     FE6 :                     hex4str:
    3395/     FE6 : 7A                  	ld	a, d
    3396/     FE7 : CD F7 0F            	call	h2s_n1
    3397/     FEA : 7A                  	ld	a, d
    3398/     FEB : CD FB 0F            	call	h2s_n2
    3399/     FEE :                     
    3400/     FEE :                     ;------------------------------------------------
    3401/     FEE :                     ;input e: value, hl: save baffer.
    3402/     FEE :                     ;output: 2 hex chras in save buffer
    3403/     FEE :                     ;	 hl = hl + 2
    3404/     FEE :                     ;------------------------------------------------
    3405/     FEE :                     hex2str:
    3406/     FEE : 7B                  	ld	a, e
    3407/     FEF : CD F7 0F            	call	h2s_n1
    3408/     FF2 : 7B                  	ld	a, e
    3409/     FF3 : CD FB 0F            	call	h2s_n2
    3410/     FF6 : C9                  	ret
    3411/     FF7 :                     
    3412/     FF7 :                     h2s_n1:
    3413/     FF7 : 0F                  	rrca
    3414/     FF8 : 0F                  	rrca
    3415/     FF9 : 0F                  	rrca
    3416/     FFA : 0F                  	rrca
    3417/     FFB :                     h2s_n2:
    3418/     FFB : E6 0F               	and	0fh
    3419/     FFD : F6 30               	or	30h
    3420/     FFF : FE 3A               	cp	3aH
    3421/    1001 : 38 70               	jr	c, ikk_1	; '0' to '9'
    3422/    1003 : C6 07               	add	a, 07h		; 'A' to 'F'
    3423/    1005 : 18 6C               	jr	ikk_1
    3424/    1007 :                     
    3425/    1007 :                     add_opstr:
    3426/    1007 : 11 4D 11            	ld	de, ADDstr
    3427/    100A :                     ;-----------------------------------
    3428/    100A :                     ; make opecode strings
    3429/    100A :                     ; input de : opecode strings
    3430/    100A :                     ;-----------------------------------
    3431/    100A :                     mkopcstr:
    3432/    100A : F5                  	push	af
    3433/    100B : C5                  	push	bc
    3434/    100C : 06 08               	ld	b, 8	;tab size
    3435/    100E : 21 97 EF            	ld	hl, dasm_OpcStr
    3436/    1011 :                     dmkstr0:
    3437/    1011 : 1A                  	ld	a, (de)
    3438/    1012 : B7                  	or	a
    3439/    1013 : 28 06               	jr	z, dmkst1
    3440/    1015 : 77                  	ld	(hl), a
    3441/    1016 : 23                  	inc	hl
    3442/    1017 : 13                  	inc	de
    3443/    1018 : 05                  	dec	b
    3444/    1019 : 18 F6               	jr	dmkstr0
    3445/    101B :                     dmkst1:
    3446/    101B : 3E 20               	ld	a, ' '
    3447/    101D :                     dmkst2:
    3448/    101D : 77                  	ld	(hl), a
    3449/    101E : 23                  	inc	hl
    3450/    101F : 05                  	dec	b
    3451/    1020 : 20 FB               	jr	nz, dmkst2
    3452/    1022 : C1                  	pop	bc
    3453/    1023 : F1                  	pop	af
    3454/    1024 : C9                  	ret
    3455/    1025 :                     
    3456/    1025 :                     ;
    3457/    1025 :                     ; "REG",CR,LF
    3458/    1025 :                     ;
    3459/    1025 :                     a_crlf:
    3460/    1025 : 11 55 1F            	ld	de, RNA
    3461/    1028 : 18 09               	jr	cpstr_crlf	; "A",CR,LF
    3462/    102A :                     ;bc_crlf:
    3463/    102A :                     ;	ld	de, RNBC
    3464/    102A :                     ;	jr	cpstr_crlf
    3465/    102A :                     ;de_crlf:
    3466/    102A :                     ;	ld	de, RNDE
    3467/    102A :                     ;	jr	cpstr_crlf
    3468/    102A :                     ix_crlf:
    3469/    102A : ED 5B 7F EF         	ld	de, (reg_xy)
    3470/    102E : 18 03               	jr	cpstr_crlf
    3471/    1030 :                     ;sp_crlf:
    3472/    1030 :                     ;	ld	de, RNSP
    3473/    1030 :                     ;	jr	cpstr_crlf
    3474/    1030 :                     hl_crlf:
    3475/    1030 : 11 65 1F            	ld	de, RNHL
    3476/    1033 :                     cpstr_crlf:
    3477/    1033 : CD 65 10            	call	st_copy		; "REG"
    3478/    1036 :                     	
    3479/    1036 :                     ;-----------------------------------
    3480/    1036 :                     ; insert CR, LF, 00H(end delimiter)
    3481/    1036 :                     ; input hl : insert buffer
    3482/    1036 :                     ;-----------------------------------
    3483/    1036 :                     insPostStr:
    3484/    1036 : 3E 0D               	ld	a, CR
    3485/    1038 : 77                  	ld	(hl), a		; CR code
    3486/    1039 : 23                  	inc	hl
    3487/    103A : 3E 0A               	ld	a, LF
    3488/    103C : 77                  	ld	(hl), a		; LF code
    3489/    103D : 23                  	inc	hl
    3490/    103E : AF                  	xor	a
    3491/    103F : 77                  	ld	(hl), a		; end delimiter
    3492/    1040 : C9                  	ret
    3493/    1041 :                     
    3494/    1041 :                     mk_krk_1:
    3495/    1041 : 21 9F EF            	ld	hl, dasm_OprStr
    3496/    1044 :                     ;----------------------------
    3497/    1044 :                     ; insert "(Reg)" to buffer
    3498/    1044 :                     ;
    3499/    1044 :                     ; input de: register string
    3500/    1044 :                     ;	hl: save buffer
    3501/    1044 :                     ;----------------------------
    3502/    1044 :                     mk_krk:
    3503/    1044 : CD 6D 10            	call	ins_kakkoL	; "("
    3504/    1047 : CD 65 10            	call	st_copy		; "REG"
    3505/    104A : 18 25               	jr	ins_kakkoR	; ")"
    3506/    104C :                     
    3507/    104C :                     ;----------------------------
    3508/    104C :                     ; insert "(Reg), " to dasm_OprStr
    3509/    104C :                     ;
    3510/    104C :                     ; input de: register string
    3511/    104C :                     ;----------------------------
    3512/    104C :                     mk_krkcs:
    3513/    104C : 21 9F EF            	ld	hl, dasm_OprStr
    3514/    104F : CD 6D 10            	call	ins_kakkoL	; "("
    3515/    1052 : CD 65 10            	call	st_copy		; "REG"
    3516/    1055 : CD 71 10            	call	ins_kakkoR	; ")"
    3517/    1058 : 18 28               	jr	ins_kmR		; ", "
    3518/    105A :                     
    3519/    105A :                     ;----------------------------
    3520/    105A :                     ; insert "A, " to dasm_OprStr
    3521/    105A :                     ;----------------------------
    3522/    105A :                     a_colon_sp:
    3523/    105A : 11 55 1F            	ld	de, RNA
    3524/    105D :                     ;----------------------------
    3525/    105D :                     ; insert "Reg, " to dasm_OprStr
    3526/    105D :                     ;
    3527/    105D :                     ; input de: register string
    3528/    105D :                     ;----------------------------
    3529/    105D :                     mk_rcs:
    3530/    105D : 21 9F EF            	ld	hl, dasm_OprStr
    3531/    1060 : CD 65 10            	call	st_copy		; "REG"
    3532/    1063 : 18 1D               	jr	ins_kmR		; ", "
    3533/    1065 :                     
    3534/    1065 :                     ;-------------------------------------------------
    3535/    1065 :                     ; copy string to output buffer
    3536/    1065 :                     ; input:
    3537/    1065 :                     ;	de : string point
    3538/    1065 :                     ;	hl : output buffer
    3539/    1065 :                     ;-------------------------------------------------
    3540/    1065 :                     st_copy:
    3541/    1065 : 1A                  	ld	a, (de)
    3542/    1066 : 77                  	ld	(hl), a
    3543/    1067 : B7                  	or	a
    3544/    1068 : C8                  	ret	z	; return after coping delimiter
    3545/    1069 :                     			; hl : delimiter position
    3546/    1069 : 23                  	inc	hl
    3547/    106A : 13                  	inc	de
    3548/    106B : 18 F8               	jr	st_copy
    3549/    106D :                     
    3550/    106D :                     ;--------------
    3551/    106D :                     ; insert "("
    3552/    106D :                     ;--------------
    3553/    106D :                     ins_kakkoL:
    3554/    106D : 3E 28               	ld	a, '('
    3555/    106F : 18 02               	jr	ikk_1
    3556/    1071 :                     	
    3557/    1071 :                     ;--------------
    3558/    1071 :                     ; insert ")"
    3559/    1071 :                     ;--------------
    3560/    1071 :                     ins_kakkoR:
    3561/    1071 : 3E 29               	ld	a, ')'
    3562/    1073 :                     ikk_1:
    3563/    1073 : 77                  	ld	(hl), a
    3564/    1074 : 23                  	inc	hl
    3565/    1075 : C9                  	ret
    3566/    1076 :                     
    3567/    1076 :                     ;--------------
    3568/    1076 :                     ; insert " "
    3569/    1076 :                     ;--------------
    3570/    1076 :                     ins_spcR:
    3571/    1076 : 3E 20               	ld	a, ' '
    3572/    1078 : 18 F9               	jr	ikk_1
    3573/    107A :                     
    3574/    107A :                     ;--------------
    3575/    107A :                     ; insert "+"
    3576/    107A :                     ;--------------
    3577/    107A :                     ins_plsR:
    3578/    107A : 3E 2B               	ld	a, '+'
    3579/    107C : 18 F5               	jr	ikk_1
    3580/    107E :                     
    3581/    107E :                     ;--------------
    3582/    107E :                     ; insert "-"
    3583/    107E :                     ;--------------
    3584/    107E :                     ins_misR:
    3585/    107E : 3E 2D               	ld	a, '-'
    3586/    1080 : 18 F1               	jr	ikk_1
    3587/    1082 :                     
    3588/    1082 :                     ;--------------
    3589/    1082 :                     ; insert ", "
    3590/    1082 :                     ;--------------
    3591/    1082 :                     ins_kmR:
    3592/    1082 : 3E 2C               	ld	a, ','
    3593/    1084 : CD 73 10            	call	ikk_1
    3594/    1087 : 18 ED               	jr	ins_spcR
    3595/    1089 :                     
    3596/    1089 :                     ;------------------------------------------
    3597/    1089 :                     ; Dis assemble tables
    3598/    1089 :                     ;------------------------------------------
    3599/    1089 :                     oth_1op_s:
    3600/    1089 : 00                  	DB	00H	; NOP
    3601/    108A : 07                  	DB	07H	; RLCA
    3602/    108B : 0F                  	DB	0FH	; RRCA
    3603/    108C : 17                  	DB	17H	; RLA
    3604/    108D : 1F                  	DB	1FH	; RRA
    3605/    108E : 27                  	DB	27H	; DAA
    3606/    108F : 2F                  	DB	2FH	; CPL
    3607/    1090 : 37                  	DB	37H	; SCF
    3608/    1091 : 3F                  	DB	3FH	; CCF
    3609/    1092 : C9                  	DB	0C9H	; RET
    3610/    1093 : D9                  	DB	0D9H	; EXX
    3611/    1094 : F3                  	DB	0F3H	; DI
    3612/    1095 : FB                  	DB	0FBH	; EI
    3613/    1096 :                     oth_1op_e:
    3614/    1096 :                     
    3615/    1096 :                     INC_OPCDTBLS:
    3616/    1096 : 04                  	DB	04H	; INC	B
    3617/    1097 : 0C                  	DB	0CH	; INC	C
    3618/    1098 : 14                  	DB	14H	; INC	D
    3619/    1099 : 1C                  	DB	1CH	; INC	E
    3620/    109A : 24                  	DB	24H	; INC	H
    3621/    109B : 2C                  	DB	2CH	; INC	L
    3622/    109C : 34                  	DB	34H	; INC	(HL)
    3623/    109D : 3C                  	DB	3CH	; INC	A
    3624/    109E :                     INC_OPCDTBLE:
    3625/    109E :                     
    3626/    109E :                     DEC_OPCDTBLS:
    3627/    109E : 05                  	DB	05H	; DEC	B
    3628/    109F : 0D                  	DB	0DH	; DEC	C
    3629/    10A0 : 15                  	DB	15H	; DEC	D
    3630/    10A1 : 1D                  	DB	1DH	; DEC	E
    3631/    10A2 : 25                  	DB	25H	; DEC	H
    3632/    10A3 : 2D                  	DB	2DH	; DEC	L
    3633/    10A4 : 35                  	DB	35H	; DEC	(HL)
    3634/    10A5 : 3D                  	DB	3DH	; DEC	A
    3635/    10A6 :                     DEC_OPCDTBLE:
    3636/    10A6 :                     
    3637/    10A6 :                     inc_rp_s:
    3638/    10A6 : 03                  	DB	03H	; INC	BC
    3639/    10A7 : 13                  	DB	13H	; INC	DE
    3640/    10A8 : 23                  	DB	23H	; INC	HL
    3641/    10A9 : 33                  	DB	33H	; INC	SP
    3642/    10AA :                     inc_rp_e:
    3643/    10AA :                     
    3644/    10AA :                     dec_rp_s:
    3645/    10AA : 0B                  	DB	0BH	; DEC	BC
    3646/    10AB : 1B                  	DB	1BH	; DEC	DE
    3647/    10AC : 2B                  	DB	2BH	; DEC	HL
    3648/    10AD : 3B                  	DB	3BH	; DEC	SP
    3649/    10AE :                     dec_rp_e:
    3650/    10AE :                     
    3651/    10AE :                     add_rp_s:
    3652/    10AE : 09                  	DB	09H	; ADD	HL,BC
    3653/    10AF : 19                  	DB	19H	; ADD	HL,DE
    3654/    10B0 : 29                  	DB	29H	; ADD	HL,HL
    3655/    10B1 : 39                  	DB	39H	; ADD	HL,SP
    3656/    10B2 :                     add_rp_e:
    3657/    10B2 :                     
    3658/    10B2 :                     pop_rp_s:
    3659/    10B2 : C1                  	DB	0C1H	; POP	BC
    3660/    10B3 : D1                  	DB	0D1H	; POP	DE
    3661/    10B4 : E1                  	DB	0E1H	; POP	HL
    3662/    10B5 : F1                  	DB	0F1H	; POP	AF
    3663/    10B6 :                     pop_rp_e:
    3664/    10B6 :                     
    3665/    10B6 :                     push_rp_s:
    3666/    10B6 : C5                  	DB	0C5H	; PUSH	BC
    3667/    10B7 : D5                  	DB	0D5H	; PUSH	DE
    3668/    10B8 : E5                  	DB	0E5H	; PUSH	HL
    3669/    10B9 : F5                  	DB	0F5H	; PUSH	AF
    3670/    10BA :                     push_rp_e:
    3671/    10BA :                     
    3672/    10BA :                     dd_ld_tbl:
    3673/    10BA : 46                  	DB	46h	; nn: LD B,(IX+nn)
    3674/    10BB : 4E                  	DB	4Eh	; nn: LD C,(IX+nn)
    3675/    10BC : 56                  	DB	56h	; nn: LD D,(IX+nn)
    3676/    10BD : 5E                  	DB	5Eh	; nn: LD E,(IX+nn)
    3677/    10BE : 66                  	DB	66h	; nn: LD H,(IX+nn)
    3678/    10BF : 6E                  	DB	6Eh	; nn: LD L,(IX+nn)
    3679/    10C0 : 7E                  	DB	7Eh	; nn: LD A,(IX+nn)
    3680/    10C1 :                     
    3681/    10C1 : 70                  	DB	70h	; nn: LD (IX+nn),B
    3682/    10C2 : 71                  	DB	71h	; nn: LD (IX+nn),C
    3683/    10C3 : 72                  	DB	72h	; nn: LD (IX+nn),D
    3684/    10C4 : 73                  	DB	73h	; nn: LD (IX+nn),E
    3685/    10C5 : 74                  	DB	74h	; nn: LD (IX+nn),H
    3686/    10C6 : 75                  	DB	75h	; nn: LD (IX+nn),L
    3687/    10C7 : 77                  	DB	77h	; nn: LD (IX+nn),A
    3688/    10C8 :                     dd_ld_tble:
    3689/    10C8 :                     
    3690/    10C8 :                     dd_log_tbl:
    3691/    10C8 : 96                  	DB	96h	; nn: SUB (IX+nn)
    3692/    10C9 : A6                  	DB	0A6h	; nn: AND (IX+nn)
    3693/    10CA : AE                  	DB	0AEh	; nn: XOR (IX+nn)
    3694/    10CB : B6                  	DB	0B6h	; nn: OR  (IX+nn)
    3695/    10CC : BE                  	DB	0BEh	; nn: CP  (IX+nn)
    3696/    10CD : 34                  	DB	34h	; nn: INC (IX+nn)
    3697/    10CE : 35                  	DB	35h	; nn: DEC (IX+nn)
    3698/    10CF :                     dd_log_tble:
    3699/    10CF :                     
    3700/    10CF :                     dd_rt_tbles:
    3701/    10CF : 06                  	DB	06h	; RLC (IX+nn)
    3702/    10D0 : 0E                  	DB	0Eh	; RRC (IX+nn)
    3703/    10D1 : 16                  	DB	16h	; RL  (IX+nn)
    3704/    10D2 : 1E                  	DB	1Eh	; RR  (IX+nn)
    3705/    10D3 : 26                  	DB	26h	; SLA (IX+nn)
    3706/    10D4 : 2E                  	DB	2Eh	; SRA (IX+nn)
    3707/    10D5 : 3E                  	DB	3Eh	; SRL (IX+nn)
    3708/    10D6 :                     dd_rt_tble:
    3709/    10D6 :                     
    3710/    10D6 :                     ; use checking undefine MC ( DD CB nn XX )
    3711/    10D6 :                     dd_bit_opTbl:
    3712/    10D6 : 46                  	DB	46h	; BIT 0,(IX+12H)
    3713/    10D7 : 4E                  	DB	4Eh	; BIT 1,(IX+12H)
    3714/    10D8 : 56                  	DB	56h	; BIT 2,(IX+12H)
    3715/    10D9 : 5E                  	DB	5Eh	; BIT 3,(IX+12H)
    3716/    10DA : 66                  	DB	66h	; BIT 4,(IX+12H)
    3717/    10DB : 6E                  	DB	6Eh	; BIT 5,(IX+12H)
    3718/    10DC : 76                  	DB	76h	; BIT 6,(IX+12H)
    3719/    10DD : 7E                  	DB	7Eh	; BIT 7,(IX+12H)
    3720/    10DE : 86                  	DB	86h	; RES 0,(IX+12H)
    3721/    10DF : 8E                  	DB	8Eh	; RES 1,(IX+12H)
    3722/    10E0 : 96                  	DB	96h	; RES 2,(IX+12H)
    3723/    10E1 : 9E                  	DB	9Eh	; RES 3,(IX+12H)
    3724/    10E2 : A6                  	DB	0A6h	; RES 4,(IX+12H)
    3725/    10E3 : AE                  	DB	0AEh	; RES 5,(IX+12H)
    3726/    10E4 : B6                  	DB	0B6h	; RES 6,(IX+12H)
    3727/    10E5 : BE                  	DB	0BEh	; RES 7,(IX+12H)
    3728/    10E6 : C6                  	DB	0C6h	; SET 0,(IX+12H)
    3729/    10E7 : CE                  	DB	0CEh	; SET 1,(IX+12H)
    3730/    10E8 : D6                  	DB	0D6h	; SET 2,(IX+12H)
    3731/    10E9 : DE                  	DB	0DEh	; SET 3,(IX+12H)
    3732/    10EA : E6                  	DB	0E6h	; SET 4,(IX+12H)
    3733/    10EB : EE                  	DB	0EEh	; SET 5,(IX+12H)
    3734/    10EC : F6                  	DB	0F6h	; SET 6,(IX+12H)
    3735/    10ED : FE                  	DB	0FEh	; SET 7,(IX+12H)
    3736/    10EE :                     dd_bit_opTble:
    3737/    10EE :                     
    3738/    10EE :                     ; use checking undefine MC ( ED XX ....)
    3739/    10EE :                     ed_op_tbl:
    3740/    10EE : 40                  	DB	40h	; 55:IN  B,(C)
    3741/    10EF : 48                   	DB	48h	; 54:IN  C,(C)
    3742/    10F0 : 50                  	DB	50h	; 53:IN  D,(C)
    3743/    10F1 : 58                  	DB	58h	; 52:IN  E,(C)
    3744/    10F2 : 60                  	DB	60h	; 51:IN  H,(C)
    3745/    10F3 : 68                  	DB	68h	; 50:IN  L,(C)
    3746/    10F4 : 78                  	DB	78h	; 49:IN  A,(C)
    3747/    10F5 :                     
    3748/    10F5 : 41                  	DB	41h	; 48:OUT (C),B
    3749/    10F6 : 49                  	DB	49h	; 47:OUT (C),C
    3750/    10F7 : 51                  	DB	51h	; 46:OUT (C),D
    3751/    10F8 : 59                  	DB	59h	; 45:OUT (C),E
    3752/    10F9 : 61                  	DB	61h	; 44:OUT (C),H
    3753/    10FA : 69                  	DB	69h	; 43:OUT (C),L
    3754/    10FB : 79                  	DB	79h	; 42:OUT (C),A
    3755/    10FC :                     
    3756/    10FC : 42                  	DB	42h	; 41:SBC HL,BC
    3757/    10FD : 52                  	DB	52h	; 40:SBC HL,DE
    3758/    10FE : 62                  	DB	62h	; 39:SBC HL,HL
    3759/    10FF : 72                  	DB	72h	; 38:SBC HL,SP
    3760/    1100 :                     
    3761/    1100 : 4A                  	DB	4Ah	; 37:ADC HL,BC
    3762/    1101 : 5A                  	DB	5Ah	; 36:ADC HL,DE
    3763/    1102 : 6A                  	DB	6Ah	; 35:ADC HL,HL
    3764/    1103 : 7A                  	DB	7Ah	; 34:ADC HL,SP
    3765/    1104 :                     
    3766/    1104 : 47                  	DB	47h	; 33:LD I,A
    3767/    1105 : 4F                  	DB	4Fh	; 32:LD R,A
    3768/    1106 : 57                  	DB	57h	; 31:LD A,I
    3769/    1107 : 5F                  	DB	5Fh	; 30:LD A,R
    3770/    1108 :                     
    3771/    1108 : 46                  	DB	46h	; 29:IM  0
    3772/    1109 : 56                  	DB	56h	; 28:IM  1
    3773/    110A : 5E                  	DB	5Eh	; 27:IM  2
    3774/    110B :                     
    3775/    110B : 44                  	DB	44h	; 26:NEG
    3776/    110C : 45                  	DB	45h	; 25:RETN
    3777/    110D : 4D                  	DB	4Dh	; 24:RETI
    3778/    110E : 67                  	DB	67h	; 23:RRD
    3779/    110F : 6F                  	DB	6Fh	; 22:RLD
    3780/    1110 : A0                  	DB	0A0h	; 21:LDI
    3781/    1111 : A1                  	DB	0A1h	; 20:CPI
    3782/    1112 : A2                  	DB	0A2h	; 19:INI
    3783/    1113 : A3                  	DB	0A3h	; 18:OUTI
    3784/    1114 : A8                  	DB	0A8h	; 17:LDD
    3785/    1115 : A9                  	DB	0A9h	; 16:CPD
    3786/    1116 : AA                  	DB	0AAh	; 15:IND
    3787/    1117 : AB                  	DB	0ABh	; 14:OUTD
    3788/    1118 : B0                  	DB	0B0h	; 13:LDIR
    3789/    1119 : B1                  	DB	0B1h	; 12:CPIR
    3790/    111A : B2                  	DB	0B2h	; 11:INIR
    3791/    111B : B3                  	DB	0B3h	; 10:OTIR
    3792/    111C : B8                  	DB	0B8h	; 09:LDDR
    3793/    111D : B9                  	DB	0B9h	; 08:CPDR
    3794/    111E : BA                  	DB	0BAh	; 07:INDR
    3795/    111F : BB                  	DB	0BBh	; 06:OTDR
    3796/    1120 :                     
    3797/    1120 : 43                  	DB	43h	; 05:LD (nnnn),BC
    3798/    1121 : 53                  	DB	53h	; 04:LD (nnnn),DE
    3799/    1122 : 73                  	DB	73h	; 03:LD (nnnn),SP
    3800/    1123 :                     
    3801/    1123 : 4B                  	DB	4Bh	; 02:LD BC,(nnnn)
    3802/    1124 : 5B                  	DB	5Bh	; 01:LD DE,(nnnn)
    3803/    1125 : 7B                  	DB	7Bh	; 00:LD SP,(nnnn)
    3804/    1126 :                     ed_op_tble:
    3805/    1126 :                     
    3806/    1126 : 41 46 00            RNAF:		DB	"AF",00H
    3807/    1129 : 41 46 27 00         RNAFX:		DB	"AF'",00H
    3808/    112D :                     
    3809/    112D : 52 45 54 00         RETstr:		db	"RET", 00h
    3810/    1131 : 4A 50 00            JPstr:		db	"JP", 00h
    3811/    1134 : 4A 52 00            JRstr:		db	"JR", 00h
    3812/    1137 : 44 4A 4E 5A 00      DJNZstr:	db	"DJNZ", 00h
    3813/    113C : 43 41 4C 4C 00      CALLstr:	db	"CALL", 00h
    3814/    1141 : 52 53 54 00         RSTstr:		db	"RST", 00h
    3815/    1145 : 4C 44 00            LDstr:		db	"LD", 00h
    3816/    1148 : 48 41 4C 54 00      HLTstr:		db	"HALT", 00h
    3817/    114D : 41 44 44 00         ADDstr:		db	"ADD", 00h
    3818/    1151 : 41 44 43 00         ADCstr:		db	"ADC", 00h
    3819/    1155 : 53 55 42 00         SUBstr:		db	"SUB", 00h
    3820/    1159 : 53 42 43 00         SBCstr:		db	"SBC", 00h
    3821/    115D : 41 4E 44 00         ANDstr:		db	"AND", 00h
    3822/    1161 : 58 4F 52 00         XORstr:		db	"XOR", 00h
    3823/    1165 : 4F 52 00            ORstr:		db	"OR", 00h
    3824/    1168 : 43 50 00            CPstr:		db	"CP", 00h
    3825/    116B : 49 4E 43 00         INCstr:		db	"INC", 00h
    3826/    116F : 44 45 43 00         DECstr:		db	"DEC", 00h
    3827/    1173 : 50 4F 50 00         POPstr:		db	"POP", 00h
    3828/    1177 : 50 55 53 48 00      PUSHstr:	db	"PUSH",00h
    3829/    117C : 45 58 00            EXstr:		db	"EX", 00h
    3830/    117F :                     
    3831/    117F : 45 58 58 00         EXXstr:		db	"EXX", 00h
    3832/    1183 : 4E 4F 50 00         NOPstr:		db	"NOP", 00h
    3833/    1187 : 52 4C 43 41 00      RLCAstr:	db	"RLCA", 00h
    3834/    118C : 52 52 43 41 00      RRCAstr:	db	"RRCA", 00h
    3835/    1191 : 52 4C 41 00         RLAstr:		db	"RLA", 00h
    3836/    1195 : 52 52 41 00         RRAstr:		db	"RRA", 00h
    3837/    1199 : 44 41 41 00         DAAstr:		db	"DAA", 00h
    3838/    119D : 43 50 4C 00         CPLstr:		db	"CPL", 00h
    3839/    11A1 : 53 43 46 00         SCFstr:		db	"SCF", 00h
    3840/    11A5 : 43 43 46 00         CCFstr:		db	"CCF", 00h
    3841/    11A9 : 44 49 00            DIstr:		db	"DI", 00h
    3842/    11AC : 45 49 00            EIstr:		db	"EI", 00h
    3843/    11AF :                     
    3844/    11AF : 4F 55 54 00         OUTstr:		db	"OUT", 00h
    3845/    11B3 : 49 4E 00            INstr:		db	"IN", 00h
    3846/    11B6 :                     
    3847/    11B6 : 52 4C 43 00         RLCstr		db	"RLC", 00h
    3848/    11BA : 52 52 43 00         RRCstr		db	"RRC", 00h
    3849/    11BE : 52 4C 00            RLstr		db	"RL", 00h
    3850/    11C1 : 52 52 00            RRstr		db	"RR", 00h
    3851/    11C4 : 53 4C 41 00         SLAstr		db	"SLA", 00h
    3852/    11C8 : 53 52 41 00         SRAstr		db	"SRA", 00h
    3853/    11CC : 53 52 4C 00         SRLstr		db	"SRL", 00h
    3854/    11D0 : 42 49 54 00         BITstr		db	"BIT", 00h
    3855/    11D4 : 52 45 53 00         RESstr		db	"RES", 00h
    3856/    11D8 : 4E 45 47 00         NEGstr		db	"NEG", 00h
    3857/    11DC : 49 4D 00            IMstr		db	"IM", 00h
    3858/    11DF : 52 52 44 00         RRDstr		db	"RRD", 00h
    3859/    11E3 : 52 4C 44 00         RLDstr		db	"RLD", 00h
    3860/    11E7 : 4C 44 49 00         LDIstr		db	"LDI", 00h
    3861/    11EB : 43 50 49 00         CPIstr		db	"CPI", 00h
    3862/    11EF : 49 4E 49 00         INIstr		db	"INI", 00h
    3863/    11F3 : 4F 55 54 49 00      OUTIstr		db	"OUTI", 00h
    3864/    11F8 : 4C 44 44 00         LDDstr		db	"LDD", 00h
    3865/    11FC : 43 50 44 00         CPDstr		db	"CPD", 00h
    3866/    1200 : 49 4E 44 00         INDstr		db	"IND", 00h
    3867/    1204 : 4F 55 54 44 00      OUTDstr		db	"OUTD", 00h
    3868/    1209 : 4C 44 49 52 00      LDIRstr		db	"LDIR", 00h
    3869/    120E : 43 50 49 52 00      CPIRstr		db	"CPIR", 00h
    3870/    1213 : 49 4E 49 52 00      INIRstr		db	"INIR", 00h
    3871/    1218 : 4F 54 49 52 00      OTIRstr		db	"OTIR", 00h
    3872/    121D : 4C 44 44 52 00      LDDRstr		db	"LDDR", 00h
    3873/    1222 : 43 50 44 52 00      CPDRstr		db	"CPDR", 00h
    3874/    1227 : 49 4E 44 52 00      INDRstr		db	"INDR", 00h
    3875/    122C : 4F 54 44 52 00      OTDRstr		db	"OTDR", 00h
    3876/    1231 : 52 45 54 49 00      RETIstr		db	"RETI", 00h
    3877/    1236 : 52 45 54 4E 00      RETNstr		db	"RETN", 00h
    3878/    123B :                     ;BITstr		db	"BIT", 00h
    3879/    123B :                     ;RESstr		db	"RES", 00h
    3880/    123B : 53 45 54 00         SETstr		db	"SET", 00h
    3881/    123F : 3F 3F 3F 00         ER_OPMSG:	db	"???", 00h
    3882/    1243 : 28 43 29 00         KCKstr		db	"(C)", 00h
    3883/    1247 :                     
    3884/    1247 : 28 48 4C 29 00      kRNHL:	db	"(HL)", 00h
    3885/    124C : 4E 5A 00            cc0:	db	"NZ", 00h
    3886/    124F : 5A 00               cc1:	db	"Z", 00h
    3887/    1251 : 4E 43 00            cc2:	db	"NC", 00h
    3888/    1254 : 43 00               cc3:	db	"C", 00h
    3889/    1256 : 50 4F 00            cc4:	db	"PO", 00h
    3890/    1259 : 50 45 00            cc5:	db	"PE", 00h
    3891/    125C : 50 00               cc6:	db	"P", 00h
    3892/    125E : 4D 00               cc7:	db	"M", 00h
    3893/    1260 :                     
    3894/    1260 : 5A 1F 5C 1F 61 1F   disRegTbl:	dw	RNB, RNC, RND, RNE, RNH, RNL, kRNHL, RNA
             1266 : 63 1F 68 1F 6A 1F 
             126C : 47 12 55 1F       
    3895/    1270 : 5E 12 5C 12 59 12   CC_opr:		dw	cc7, cc6, cc5, cc4, cc3, cc2, cc1, cc0
             1276 : 56 12 54 12 51 12 
             127C : 4F 12 4C 12       
    3896/    1280 : 54 12 51 12 4F 12   JRCC_opr1:	dw	cc3, cc2, cc1, cc0
             1286 : 4C 12             
    3897/    1288 : 98 1F 65 1F 5E 1F   INC_DEC_ADDrp:	dw	RNSP, RNHL, RNDE, RNBC
             128E : 57 1F             
    3898/    1290 : 26 11 65 1F 5E 1F   POP_PUSHrp:	dw	RNAF, RNHL, RNDE, RNBC
             1296 : 57 1F             
    3899/    1298 :                     
    3900/    1298 : AC 11 A9 11 7F 11   oth_1op_tbl:	dw	EIstr, DIstr, EXXstr, RETstr, CCFstr
             129E : 2D 11 A5 11       
    3901/    12A2 : A1 11 9D 11 99 11   		dw	SCFstr, CPLstr, DAAstr, RRAstr
             12A8 : 95 11             
    3902/    12AA : 91 11 8C 11 87 11   		dw	RLAstr, RRCAstr, RLCAstr, NOPstr
             12B0 : 83 11             
    3903/    12B2 :                     
    3904/    12B2 : AF 11 B3 11 68 11   logop2str:	dw	OUTstr, INstr, CPstr, ORstr, XORstr
             12B8 : 65 11 61 11       
    3905/    12BC : 5D 11 55 11 59 11   		dw	ANDstr, SUBstr, SBCstr, ADCstr, ADDstr
             12C2 : 51 11 4D 11       
    3906/    12C6 :                     
    3907/    12C6 : 98 1F 65 1F 5E 1F   logop3str	dw	RNSP, RNHL, RNDE, RNBC
             12CC : 57 1F             
    3908/    12CE : 98 1F 5E 1F 57 1F   ed_rp_str	dw	RNSP, RNDE, RNBC, RNSP, RNDE, RNBC
             12D4 : 98 1F 5E 1F 57 1F 
    3909/    12DA :                     
    3910/    12DA : 73 11 77 11 6F 11   dd_2opt:	dw	POPstr, PUSHstr, DECstr, INCstr
             12E0 : 6B 11             
    3911/    12E2 : 98 1F 92 1F 5E 1F   addixrp_tbl:	dw	RNSP, RNIX, RNDE, RNBC
             12E8 : 57 1F             
    3912/    12EA : 98 1F 95 1F 5E 1F   addiyrp_tbl:	dw	RNSP, RNIY, RNDE, RNBC
             12F0 : 57 1F             
    3913/    12F2 :                     
    3914/    12F2 : 6F 11 6B 11 68 11   ddlogtbl:	dw	DECstr, INCstr, CPstr, ORstr, XORstr, ANDstr, SUBstr
             12F8 : 65 11 61 11 5D 11 
             12FE : 55 11             
    3915/    1300 : 55 1F 6A 1F 68 1F   dd_ldtbl:	dw	RNA, RNL, RNH, RNE, RND, RNC, RNB
             1306 : 63 1F 61 1F 5C 1F 
             130C : 5A 1F             
    3916/    130E :                     
    3917/    130E : 2C 12 27 12 22 12   ed_noopr:	dw	OTDRstr, INDRstr, CPDRstr, LDDRstr
             1314 : 1D 12             
    3918/    1316 : 18 12 13 12 0E 12   		dw	OTIRstr, INIRstr, CPIRstr, LDIRstr
             131C : 09 12             
    3919/    131E : 04 12 00 12 FC 11   		dw	OUTDstr, INDstr, CPDstr, LDDstr
             1324 : F8 11             
    3920/    1326 : F3 11 EF 11 EB 11   		dw	OUTIstr, INIstr, CPIstr, LDIstr
             132C : E7 11             
    3921/    132E : E3 11 DF 11 31 12   		dw	RLDstr, RRDstr, RETIstr, RETNstr
             1334 : 36 12             
    3922/    1336 : D8 11               		dw	NEGstr
    3923/    1338 :                     
    3924/    1338 : CC 11 C8 11 C4 11   dd_rt_str:	dw	SRLstr, SRAstr, SLAstr, RRstr
             133E : C1 11             
    3925/    1340 : BE 11 BA 11 B6 11   		dw	RLstr, RRCstr, RLCstr
    3926/    1346 :                     	
    3927/    1346 :                     ;;;
    3928/    1346 :                     ;;; GO address
    3929/    1346 :                     ;;; 
    3930/    1346 :                     
    3931/    1346 :                     GO:
    3932/    1346 : ED 5B 42 EF         	ld	de, (REGPC)
    3933/    134A : ED 53 54 EF         	ld	(goTmp), de	; save go tmp go address
    3934/    134E : 23                  	INC	HL
    3935/    134F : CD 01 18            	CALL	SKIPSP
    3936/    1352 : CD 11 18            	CALL	RDHEX
    3937/    1355 : 30 03               	jr	nc, gostmp
    3938/    1357 : B7                  	OR	A
    3939/    1358 : 28 0A               	JR	Z, g_stpadr
    3940/    135A :                     gostmp:
    3941/    135A : 7A                  	ld	a, d
    3942/    135B : FE F0               	cp	IO_B >> 8	; a - 0F0H
    3943/    135D : D2 FE 00            	jp	nc, ERR		; detect I/O area
    3944/    1360 : ED 53 54 EF         	LD	(goTmp),DE	; save going address
    3945/    1364 :                     g_stpadr:
    3946/    1364 : CD 01 18            	CALL	SKIPSP
    3947/    1367 : 7E                  	LD	A,(HL)
    3948/    1368 : B7                  	or	a
    3949/    1369 : 28 18               	jr	z, GO1
    3950/    136B : FE 2C               	cp	','
    3951/    136D : C2 FE 00            	jp	nz, ERR
    3952/    1370 :                     
    3953/    1370 :                     ; set break point with go command
    3954/    1370 :                     
    3955/    1370 : 23                  	INC	HL
    3956/    1371 : CD 01 18            	CALL	SKIPSP
    3957/    1374 : CD 11 18            	CALL	RDHEX		; 1st arg.
    3958/    1377 : DA FE 00            	jp	c, ERR
    3959/    137A :                     
    3960/    137A : 21 6D EF            	ld	hl, tmpb_f	; hl: temp break point buffer
    3961/    137D : CD 60 02            	call	setbpadr
    3962/    1380 : DA FE 00            	jp	c, ERR		; address is incorrect
    3963/    1383 :                     
    3964/    1383 :                     GO1:
    3965/    1383 : 2A 54 EF            	LD	hl, (goTmp)
    3966/    1386 : 22 42 EF            	ld	(REGPC), hl	; set go address
    3967/    1389 :                     
    3968/    1389 :                     G0:
    3969/    1389 :                     ; check Trace mode
    3970/    1389 :                     
    3971/    1389 : 3A 5D EF            	ld	a, (tpt1_f)
    3972/    138C : B7                  	or	a
    3973/    138D : 28 1A               	jr	z, donot_trace
    3974/    138F :                     	
    3975/    138F : 2A 5A EF            	ld	hl,(tmpT)
    3976/    1392 : 22 42 EF            	ld	(REGPC), hl	; set trace address
    3977/    1395 :                     
    3978/    1395 : 21 5D EF            	ld	hl, tpt1_f
    3979/    1398 : 11 5F EF            	ld	de, tpt1_adr
    3980/    139B : CD 01 14            	call	set_bp
    3981/    139E : 21 61 EF            	ld	hl, tpt2_f
    3982/    13A1 : 11 63 EF            	ld	de, tpt2_adr
    3983/    13A4 : CD 01 14            	call	set_bp
    3984/    13A7 : 18 1B               	jr	skp_tbp		; skip set tmp bp and bp, if tracing
    3985/    13A9 :                     
    3986/    13A9 :                     ; set break point
    3987/    13A9 :                     donot_trace:
    3988/    13A9 : 21 65 EF            	ld	hl, bpt1_f
    3989/    13AC : 11 67 EF            	ld	de, bpt1_adr
    3990/    13AF : CD 01 14            	call	set_bp
    3991/    13B2 : 21 69 EF            	ld	hl, bpt2_f
    3992/    13B5 : 11 6B EF            	ld	de, bpt2_adr
    3993/    13B8 : CD 01 14            	call	set_bp
    3994/    13BB :                     
    3995/    13BB :                     
    3996/    13BB :                     ; check go, break pointer
    3997/    13BB :                     
    3998/    13BB : 21 6D EF            	ld	hl, tmpb_f
    3999/    13BE : 11 6F EF            	ld	de, tmpb_adr
    4000/    13C1 : CD 01 14            	call	set_bp
    4001/    13C4 :                     
    4002/    13C4 :                     	;; R register adjustment
    4003/    13C4 :                     
    4004/    13C4 :                     skp_tbp:
    4005/    13C4 : 2A 40 EF            	LD	HL,(REGSP)
    4006/    13C7 : F9                  	LD	SP,HL
    4007/    13C8 : 2A 42 EF            	LD	HL,(REGPC)
    4008/    13CB : E5                  	PUSH	HL
    4009/    13CC : DD 2A 3C EF         	LD	IX,(REGIX)
    4010/    13D0 : FD 2A 3E EF         	LD	IY,(REGIY)
    4011/    13D4 : 2A 34 EF            	LD	HL,(REGAFX)
    4012/    13D7 : E5                  	PUSH	HL
    4013/    13D8 : ED 4B 36 EF         	LD	BC,(REGBCX)
    4014/    13DC : ED 5B 38 EF         	LD	DE,(REGDEX)
    4015/    13E0 : 2A 3A EF            	LD	HL,(REGHLX)
    4016/    13E3 : D9                  	EXX
    4017/    13E4 : F1                  	POP	AF
    4018/    13E5 : 08                  	EX	AF,AF'
    4019/    13E6 : 2A 2C EF            	LD	HL,(REGAF)
    4020/    13E9 : E5                  	PUSH	HL
    4021/    13EA : ED 4B 2E EF         	LD	BC,(REGBC)
    4022/    13EE : ED 5B 30 EF         	LD	DE,(REGDE)
    4023/    13F2 : 2A 32 EF            	LD	HL,(REGHL)
    4024/    13F5 : 3A 44 EF            	LD	A,(REGI)
    4025/    13F8 : ED 47               	LD	I,A
    4026/    13FA : 3A 45 EF            	LD	A,(REGR)
    4027/    13FD : ED 4F               	LD	R,A
    4028/    13FF : F1                  	POP	AF
    4029/    1400 : C9                  	RET			; POP PC
    4030/    1401 :                     
    4031/    1401 :                     set_bp:
    4032/    1401 : 7E                  	ld	a, (hl)
    4033/    1402 : B7                  	or	a
    4034/    1403 : C8                  	ret	z
    4035/    1404 :                     
    4036/    1404 : 1A                  	ld	a, (de)
    4037/    1405 : 4F                  	ld	c, a
    4038/    1406 : 13                  	inc	de
    4039/    1407 : 1A                  	ld	a, (de)
    4040/    1408 : 47                  	ld	b, a	; bc = break point address
    4041/    1409 :                     
    4042/    1409 : 3E FF               	ld	a, 0FFH
    4043/    140B : 02                  	ld	(bc), a	; insert RST 38H code
    4044/    140C : C9                  	ret
    4045/    140D :                     	
    4046/    140D :                     ;;;
    4047/    140D :                     ;;; SET memory
    4048/    140D :                     ;;; 
    4049/    140D :                     
    4050/    140D :                     SETM:
    4051/    140D : 23                  	INC	HL
    4052/    140E : CD 01 18            	CALL	SKIPSP
    4053/    1411 : CD 11 18            	CALL	RDHEX
    4054/    1414 :                     
    4055/    1414 : DA FE 00            	jp	c, ERR
    4056/    1417 :                     
    4057/    1417 : CD 01 18            	CALL	SKIPSP
    4058/    141A : 7E                  	LD	A,(HL)
    4059/    141B : B7                  	OR	A
    4060/    141C : C2 FE 00            	JP	NZ,ERR
    4061/    141F : 79                  	LD	A,C
    4062/    1420 : B7                  	OR	A
    4063/    1421 : 20 04               	JR	NZ,SM0
    4064/    1423 : ED 5B 27 EF         	LD	DE,(SADDR)
    4065/    1427 :                     
    4066/    1427 :                     
    4067/    1427 :                     SM0:
    4068/    1427 : EB                  	EX	DE,HL
    4069/    1428 :                     SM1:
    4070/    1428 : CD 50 17            	CALL	HEXOUT4
    4071/    142B : E5                  	PUSH	HL
    4072/    142C : 21 73 1D            	LD	HL,DSEP1
    4073/    142F : CD 47 17            	CALL	STROUT
    4074/    1432 : E1                  	POP	HL
    4075/    1433 : 7E                  	LD	A,(HL)
    4076/    1434 : E5                  	PUSH	HL
    4077/    1435 : CD 55 17            	CALL	HEXOUT2
    4078/    1438 : 3E 20               	LD	A,' '
    4079/    143A : CD B4 1F            	CALL	CONOUT
    4080/    143D : CD A7 17            	CALL	GETLIN
    4081/    1440 : CD 01 18            	CALL	SKIPSP
    4082/    1443 : 7E                  	LD	A,(HL)
    4083/    1444 : B7                  	OR	A
    4084/    1445 : 20 07               	JR	NZ,SM2
    4085/    1447 :                     	;; Empty  (Increment address)
    4086/    1447 : E1                  	POP	HL
    4087/    1448 : 23                  	INC	HL
    4088/    1449 : 22 27 EF            	LD	(SADDR),HL
    4089/    144C : 18 DA               	JR	SM1
    4090/    144E :                     SM2:
    4091/    144E : FE 2D               	CP	'-'
    4092/    1450 : 20 07               	JR	NZ,SM3
    4093/    1452 :                     	;; '-'  (Decrement address)
    4094/    1452 : E1                  	POP	HL
    4095/    1453 : 2B                  	DEC	HL
    4096/    1454 : 22 27 EF            	LD	(SADDR),HL
    4097/    1457 : 18 CF               	JR	SM1
    4098/    1459 :                     SM3:
    4099/    1459 : FE 2E               	CP	'.'
    4100/    145B : 20 07               	JR	NZ,SM4
    4101/    145D : E1                  	POP	HL
    4102/    145E : 22 27 EF            	LD	(SADDR),HL
    4103/    1461 : C3 BE 00            	JP	WSTART
    4104/    1464 :                     SM4:
    4105/    1464 : CD 11 18            	CALL	RDHEX
    4106/    1467 : B7                  	OR	A
    4107/    1468 : E1                  	POP	HL
    4108/    1469 : CA FE 00            	JP	Z,ERR
    4109/    146C : 73                  	LD	(HL),E
    4110/    146D : 23                  	INC	HL
    4111/    146E : 22 27 EF            	LD	(SADDR),HL	; set value
    4112/    1471 :                     
    4113/    1471 :                     	; resave opcode for BP command
    4114/    1471 : ED 5B 67 EF         	ld	de, (bpt1_adr)
    4115/    1475 : 1A                  	ld	a, (de)
    4116/    1476 : 32 66 EF            	ld	(bpt1_op), a
    4117/    1479 : ED 5B 6B EF         	ld	de, (bpt2_adr)
    4118/    147D : 1A                  	ld	a, (de)
    4119/    147E : 32 6A EF            	ld	(bpt2_op), a
    4120/    1481 :                     
    4121/    1481 : 18 A5               	JR	SM1
    4122/    1483 :                     
    4123/    1483 :                     ;;;
    4124/    1483 :                     ;;; LOAD HEX file
    4125/    1483 :                     ;;;
    4126/    1483 :                     
    4127/    1483 :                     LOADH:
    4128/    1483 :                     	; clear brk point
    4129/    1483 : AF                  	xor	a
    4130/    1484 : 32 65 EF            	ld	(bpt1_f), a
    4131/    1487 : 32 69 EF            	ld	(bpt2_f), a
    4132/    148A :                     	
    4133/    148A : 23                  	INC	HL
    4134/    148B : CD 01 18            	CALL	SKIPSP
    4135/    148E : CD 11 18            	CALL	RDHEX
    4136/    1491 : CD 01 18            	CALL	SKIPSP
    4137/    1494 : 7E                  	LD	A,(HL)
    4138/    1495 : B7                  	OR	A
    4139/    1496 : C2 FE 00            	JP	NZ,ERR
    4140/    1499 :                     
    4141/    1499 : 79                  	LD	A,C
    4142/    149A : B7                  	OR	A
    4143/    149B : 20 03               	JR	NZ,LH0
    4144/    149D :                     
    4145/    149D : 11 00 00            	LD	DE,0		;Offset
    4146/    14A0 :                     LH0:
    4147/    14A0 : CD A3 1F            	CALL	CONIN
    4148/    14A3 :                     ;	CALL	UPPER
    4149/    14A3 : FE 53               	CP	'S'
    4150/    14A5 : 28 61               	JR	Z,LHS0
    4151/    14A7 :                     LH1:
    4152/    14A7 : FE 3A               	CP	':'
    4153/    14A9 : 28 0D               	JR	Z,LHI0
    4154/    14AB :                     LH2:
    4155/    14AB :                     	;; Skip to EOL
    4156/    14AB : FE 0D               	CP	CR
    4157/    14AD : 28 F1               	JR	Z,LH0
    4158/    14AF : FE 0A               	CP	LF
    4159/    14B1 : 28 ED               	JR	Z,LH0
    4160/    14B3 :                     LH3:
    4161/    14B3 : CD A3 1F            	CALL	CONIN
    4162/    14B6 : 18 F3               	JR	LH2
    4163/    14B8 :                     
    4164/    14B8 :                     LHI0:
    4165/    14B8 : 3E 2E               	ld	a, '.'
    4166/    14BA : CD B4 1F            	call	CONOUT
    4167/    14BD :                     
    4168/    14BD : CD 6C 17            	CALL	HEXIN
    4169/    14C0 : 4F                  	LD	C,A		; Checksum
    4170/    14C1 : 47                  	LD	B,A		; Length
    4171/    14C2 :                     
    4172/    14C2 : CD 6C 17            	CALL	HEXIN
    4173/    14C5 : 67                  	LD	H,A		; Address H
    4174/    14C6 : 81                  	ADD	A,C
    4175/    14C7 : 4F                  	LD	C,A
    4176/    14C8 :                     
    4177/    14C8 : CD 6C 17            	CALL	HEXIN
    4178/    14CB : 6F                  	LD	L,A		; Address L
    4179/    14CC : 81                  	ADD	A,C
    4180/    14CD : 4F                  	LD	C,A
    4181/    14CE :                     
    4182/    14CE :                     	;; Add offset
    4183/    14CE : 19                  	ADD	HL,DE
    4184/    14CF :                     
    4185/    14CF : CD 6C 17            	CALL	HEXIN
    4186/    14D2 : 32 2A EF            	LD	(RECTYP),A
    4187/    14D5 : 81                  	ADD	A,C
    4188/    14D6 : 4F                  	LD	C,A		; Checksum
    4189/    14D7 :                     
    4190/    14D7 : 78                  	LD	A,B
    4191/    14D8 : B7                  	OR	A
    4192/    14D9 : 28 14               	JR	Z,LHI3
    4193/    14DB :                     LHI1:
    4194/    14DB : CD 6C 17            	CALL	HEXIN
    4195/    14DE : F5                  	PUSH	AF
    4196/    14DF : 81                  	ADD	A,C
    4197/    14E0 : 4F                  	LD	C,A		; Checksum
    4198/    14E1 :                     
    4199/    14E1 : 3A 2A EF            	LD	A,(RECTYP)
    4200/    14E4 : B7                  	OR	A
    4201/    14E5 : 20 05               	JR	NZ,LHI20
    4202/    14E7 :                     
    4203/    14E7 : F1                  	POP	AF
    4204/    14E8 : 77                  	LD	(HL),A
    4205/    14E9 : 23                  	INC	HL
    4206/    14EA : 18 01               	JR	LHI2
    4207/    14EC :                     LHI20:
    4208/    14EC : F1                  	POP	AF
    4209/    14ED :                     LHI2:
    4210/    14ED : 10 EC               	DJNZ	LHI1
    4211/    14EF :                     LHI3:
    4212/    14EF : CD 6C 17            	CALL	HEXIN
    4213/    14F2 : 81                  	ADD	A,C
    4214/    14F3 : 20 0A               	JR	NZ,LHIE		; Checksum error
    4215/    14F5 : 3A 2A EF            	LD	A,(RECTYP)
    4216/    14F8 : B7                  	OR	A
    4217/    14F9 : CA B3 14            	JP	Z,LH3
    4218/    14FC : C3 BE 00            	JP	WSTART
    4219/    14FF :                     LHIE:
    4220/    14FF : 21 4E 1D            	LD	HL,IHEMSG
    4221/    1502 : CD 47 17            	CALL	STROUT
    4222/    1505 : C3 BE 00            	JP	WSTART
    4223/    1508 :                     	
    4224/    1508 :                     LHS0:
    4225/    1508 : CD A3 1F            	CALL	CONIN
    4226/    150B : 32 2A EF            	LD	(RECTYP),A
    4227/    150E :                     
    4228/    150E : CD 6C 17            	CALL	HEXIN
    4229/    1511 : 47                  	LD	B,A		; Length+3
    4230/    1512 : 4F                  	LD	C,A		; Checksum
    4231/    1513 :                     
    4232/    1513 : CD 6C 17            	CALL	HEXIN
    4233/    1516 : 67                  	LD	H,A
    4234/    1517 : 81                  	ADD	A,C
    4235/    1518 : 4F                  	LD	C,A
    4236/    1519 :                     	
    4237/    1519 : CD 6C 17            	CALL	HEXIN
    4238/    151C : 6F                  	LD	L,A
    4239/    151D : 81                  	ADD	A,C
    4240/    151E : 4F                  	LD	C,A
    4241/    151F :                     
    4242/    151F : 19                  	ADD	HL,DE
    4243/    1520 :                     
    4244/    1520 : 05                  	DEC	B
    4245/    1521 : 05                  	DEC	B
    4246/    1522 : 05                  	DEC	B
    4247/    1523 : 28 15               	JR	Z,LHS3
    4248/    1525 :                     LHS1:
    4249/    1525 : CD 6C 17            	CALL	HEXIN
    4250/    1528 : F5                  	PUSH	AF
    4251/    1529 : 81                  	ADD	A,C
    4252/    152A : 4F                  	LD	C,A		; Checksum
    4253/    152B :                     
    4254/    152B : 3A 2A EF            	LD	A,(RECTYP)
    4255/    152E : FE 31               	CP	'1'
    4256/    1530 : 20 05               	JR	NZ,LHS2
    4257/    1532 :                     
    4258/    1532 : F1                  	POP	AF
    4259/    1533 : 77                  	LD	(HL),A
    4260/    1534 : 23                  	INC	HL
    4261/    1535 : 18 01               	JR	LHS20
    4262/    1537 :                     LHS2:
    4263/    1537 : F1                  	POP	AF
    4264/    1538 :                     LHS20:
    4265/    1538 : 10 EB               	DJNZ	LHS1
    4266/    153A :                     LHS3:
    4267/    153A : CD 6C 17            	CALL	HEXIN
    4268/    153D : 81                  	ADD	A,C
    4269/    153E : FE FF               	CP	0FFH
    4270/    1540 : 20 12               	JR	NZ,LHSE
    4271/    1542 :                     
    4272/    1542 : 3A 2A EF            	LD	A,(RECTYP)
    4273/    1545 : FE 37               	CP	'7'
    4274/    1547 : 28 11               	JR	Z,LHSR
    4275/    1549 : FE 38               	CP	'8'
    4276/    154B : 28 0D               	JR	Z,LHSR
    4277/    154D : FE 39               	CP	'9'
    4278/    154F : 28 09               	JR	Z,LHSR
    4279/    1551 : C3 B3 14            	JP	LH3
    4280/    1554 :                     LHSE:
    4281/    1554 : 21 5B 1D            	LD	HL,SHEMSG
    4282/    1557 : CD 47 17            	CALL	STROUT
    4283/    155A :                     LHSR:
    4284/    155A : C3 BE 00            	JP	WSTART
    4285/    155D :                     	
    4286/    155D :                     ;;;
    4287/    155D :                     ;;; SAVE HEX file
    4288/    155D :                     ;;;
    4289/    155D :                     
    4290/    155D :                     SAVEH:
    4291/    155D : 23                  	INC	HL
    4292/    155E : 7E                  	LD	A,(HL)
    4293/    155F :                     ;	CALL	UPPER
    4294/    155F : FE 49               	CP	'I'
    4295/    1561 : 28 04               	JR	Z,SH0
    4296/    1563 : FE 53               	CP	'S'
    4297/    1565 : 20 04               	JR	NZ,SH1
    4298/    1567 :                     SH0:
    4299/    1567 : 23                  	INC	HL
    4300/    1568 : 32 29 EF            	LD	(HEXMOD),A
    4301/    156B :                     SH1:
    4302/    156B : CD 01 18            	CALL	SKIPSP
    4303/    156E : CD 11 18            	CALL	RDHEX
    4304/    1571 : B7                  	OR	A
    4305/    1572 : 28 1C               	JR	Z,SHE
    4306/    1574 : D5                  	PUSH	DE
    4307/    1575 : DD E1               	POP	IX		; IX = Start address
    4308/    1577 : CD 01 18            	CALL	SKIPSP
    4309/    157A : 7E                  	LD	A,(HL)
    4310/    157B : FE 2C               	CP	','
    4311/    157D : 20 11               	JR	NZ,SHE
    4312/    157F : 23                  	INC	HL
    4313/    1580 : CD 01 18            	CALL	SKIPSP
    4314/    1583 : CD 11 18            	CALL	RDHEX		; DE = End address
    4315/    1586 : B7                  	OR	A
    4316/    1587 : 28 07               	JR	Z,SHE
    4317/    1589 : CD 01 18            	CALL	SKIPSP
    4318/    158C : 7E                  	LD	A,(HL)
    4319/    158D : B7                  	OR	A
    4320/    158E : 28 03               	JR	Z,SH2
    4321/    1590 :                     SHE:
    4322/    1590 : C3 FE 00            	JP	ERR
    4323/    1593 :                     
    4324/    1593 :                     SH2:
    4325/    1593 : DD E5               	PUSH	IX
    4326/    1595 : E1                  	POP	HL
    4327/    1596 : EB                  	EX	DE,HL
    4328/    1597 : 23                  	INC	HL
    4329/    1598 : B7                  	OR	A
    4330/    1599 : ED 52               	SBC	HL,DE		; HL = Length
    4331/    159B :                     SH3:
    4332/    159B : CD BB 15            	CALL	SHL00
    4333/    159E : 7C                  	LD	A,H
    4334/    159F : B5                  	OR	L
    4335/    15A0 : 20 F9               	JR	NZ,SH3
    4336/    15A2 :                     
    4337/    15A2 : 3A 29 EF            	LD	A,(HEXMOD)
    4338/    15A5 : FE 49               	CP	'I'
    4339/    15A7 : 20 09               	JR	NZ,SH4
    4340/    15A9 :                     	;; End record for Intel HEX
    4341/    15A9 : 21 77 1D            	LD	HL,IHEXER
    4342/    15AC : CD 47 17            	CALL	STROUT
    4343/    15AF : C3 BE 00            	JP	WSTART
    4344/    15B2 :                     SH4:
    4345/    15B2 :                     	;; End record for Motorola S record
    4346/    15B2 : 21 85 1D            	LD	HL,SRECER
    4347/    15B5 : CD 47 17            	CALL	STROUT
    4348/    15B8 : C3 BE 00            	JP	WSTART
    4349/    15BB :                     
    4350/    15BB :                     SHL00:
    4351/    15BB : 0E 10               	LD	C,16
    4352/    15BD : 7C                  	LD	A,H
    4353/    15BE : B7                  	OR	A
    4354/    15BF : 20 05               	JR	NZ,SHL0
    4355/    15C1 : 7D                  	LD	A,L
    4356/    15C2 : B9                  	CP	C
    4357/    15C3 : 30 01               	JR	NC,SHL0
    4358/    15C5 : 4F                  	LD	C,A
    4359/    15C6 :                     SHL0:
    4360/    15C6 : 06 00               	LD	B,0
    4361/    15C8 : B7                  	OR	A
    4362/    15C9 : ED 42               	SBC	HL,BC
    4363/    15CB : 41                  	LD	B,C
    4364/    15CC :                     
    4365/    15CC : 3A 29 EF            	LD	A,(HEXMOD)
    4366/    15CF : FE 49               	CP	'I'
    4367/    15D1 : 20 30               	JR	NZ,SHLS
    4368/    15D3 :                     
    4369/    15D3 :                     	;; Intel HEX
    4370/    15D3 : 3E 3A               	LD	A,':'
    4371/    15D5 : CD B4 1F            	CALL	CONOUT
    4372/    15D8 :                     
    4373/    15D8 : 78                  	LD	A,B
    4374/    15D9 : CD 55 17            	CALL	HEXOUT2		; Length
    4375/    15DC : 48                  	LD	C,B		; Checksum
    4376/    15DD :                     
    4377/    15DD : 7A                  	LD	A,D
    4378/    15DE : CD 55 17            	CALL	HEXOUT2
    4379/    15E1 : 7A                  	LD	A,D
    4380/    15E2 : 81                  	ADD	A,C
    4381/    15E3 : 4F                  	LD	C,A
    4382/    15E4 :                     	
    4383/    15E4 : 7B                  	LD	A,E
    4384/    15E5 : CD 55 17            	CALL	HEXOUT2
    4385/    15E8 : 7B                  	LD	A,E
    4386/    15E9 : 81                  	ADD	A,C
    4387/    15EA : 4F                  	LD	C,A
    4388/    15EB :                     	
    4389/    15EB : AF                  	XOR	A
    4390/    15EC : CD 55 17            	CALL	HEXOUT2
    4391/    15EF :                     SHLI0:
    4392/    15EF : 1A                  	LD	A,(DE)
    4393/    15F0 : F5                  	PUSH	AF
    4394/    15F1 : CD 55 17            	CALL	HEXOUT2
    4395/    15F4 : F1                  	POP	AF
    4396/    15F5 : 81                  	ADD	A,C
    4397/    15F6 : 4F                  	LD	C,A
    4398/    15F7 :                     
    4399/    15F7 : 13                  	INC	DE
    4400/    15F8 : 10 F5               	DJNZ	SHLI0
    4401/    15FA :                     
    4402/    15FA : 79                  	LD	A,C
    4403/    15FB : ED 44               	NEG
    4404/    15FD : CD 55 17            	CALL	HEXOUT2
    4405/    1600 : C3 90 17            	JP	CRLF
    4406/    1603 :                     
    4407/    1603 :                     SHLS:
    4408/    1603 :                     	;; Motorola S record
    4409/    1603 : 3E 53               	LD	A,'S'
    4410/    1605 : CD B4 1F            	CALL	CONOUT
    4411/    1608 : 3E 31               	LD	A,'1'
    4412/    160A : CD B4 1F            	CALL	CONOUT
    4413/    160D :                     
    4414/    160D : 78                  	LD	A,B
    4415/    160E : C6 03               	ADD	A,2+1		; DataLength + 2(Addr) + 1(Sum)
    4416/    1610 : 4F                  	LD	C,A
    4417/    1611 : CD 55 17            	CALL	HEXOUT2
    4418/    1614 :                     
    4419/    1614 : 7A                  	LD	A,D
    4420/    1615 : CD 55 17            	CALL	HEXOUT2
    4421/    1618 : 7A                  	LD	A,D
    4422/    1619 : 81                  	ADD	A,C
    4423/    161A : 4F                  	LD	C,A
    4424/    161B :                     	
    4425/    161B : 7B                  	LD	A,E
    4426/    161C : CD 55 17            	CALL	HEXOUT2
    4427/    161F : 7B                  	LD	A,E
    4428/    1620 : 81                  	ADD	A,C
    4429/    1621 : 4F                  	LD	C,A
    4430/    1622 :                     SHLS0:
    4431/    1622 : 1A                  	LD	A,(DE)
    4432/    1623 : F5                  	PUSH	AF
    4433/    1624 : CD 55 17            	CALL	HEXOUT2		; Data
    4434/    1627 : F1                  	POP	AF
    4435/    1628 : 81                  	ADD	A,C
    4436/    1629 : 4F                  	LD	C,A
    4437/    162A :                     
    4438/    162A : 13                  	INC	DE
    4439/    162B : 10 F5               	DJNZ	SHLS0
    4440/    162D :                     
    4441/    162D : 79                  	LD	A,C
    4442/    162E : 2F                  	CPL
    4443/    162F : CD 55 17            	CALL	HEXOUT2
    4444/    1632 : C3 90 17            	JP	CRLF
    4445/    1635 :                     
    4446/    1635 :                     ;;;
    4447/    1635 :                     ;;; Register
    4448/    1635 :                     ;;;
    4449/    1635 :                     
    4450/    1635 :                     REG:
    4451/    1635 : 23                  	INC	HL
    4452/    1636 : CD 01 18            	CALL	SKIPSP
    4453/    1639 :                     ;	CALL	UPPER
    4454/    1639 : B7                  	OR	A
    4455/    163A : 20 06               	JR	NZ,RG0
    4456/    163C : CD BB 16            	CALL	RDUMP
    4457/    163F : C3 BE 00            	JP	WSTART
    4458/    1642 :                     RG0:
    4459/    1642 : EB                  	EX	DE,HL
    4460/    1643 : 21 3B 1E            	LD	HL,RNTAB
    4461/    1646 :                     RG1:
    4462/    1646 : BE                  	CP	(HL)
    4463/    1647 : 28 0D               	JR	Z,RG2		; Character match
    4464/    1649 : 4F                  	LD	C,A
    4465/    164A : 23                  	INC	HL
    4466/    164B : 7E                  	LD	A,(HL)
    4467/    164C : B7                  	OR	A
    4468/    164D : 28 69               	JR	Z,RGE		; Found end mark
    4469/    164F : 79                  	LD	A,C
    4470/    1650 : 01 05 00            	LD	BC,5
    4471/    1653 : 09                  	ADD	HL,BC		; Next entry
    4472/    1654 : 18 F0               	JR	RG1
    4473/    1656 :                     RG2:
    4474/    1656 : 23                  	INC	HL
    4475/    1657 : 7E                  	LD	A,(HL)
    4476/    1658 : FE 0F               	CP	0FH		; Link code
    4477/    165A : 20 09               	JR	NZ,RG3
    4478/    165C :                     	;; Next table
    4479/    165C : 23                  	INC	HL
    4480/    165D : 4E                  	LD	C,(HL)
    4481/    165E : 23                  	INC	HL
    4482/    165F : 66                  	LD	H,(HL)
    4483/    1660 : 69                  	LD	L,C
    4484/    1661 : 13                  	INC	DE
    4485/    1662 : 1A                  	LD	A,(DE)
    4486/    1663 :                     ;	CALL	UPPER
    4487/    1663 : 18 E1               	JR	RG1
    4488/    1665 :                     RG3:
    4489/    1665 : B7                  	OR	A
    4490/    1666 : 28 50               	JR	Z,RGE		; Found end mark
    4491/    1668 :                     
    4492/    1668 : 4E                  	LD	C,(HL)		; LD C,A???
    4493/    1669 : 23                  	INC	HL
    4494/    166A : 5E                  	LD	E,(HL)
    4495/    166B : 23                  	INC	HL
    4496/    166C : 56                  	LD	D,(HL)
    4497/    166D : D5                  	PUSH	DE		; Reg storage address
    4498/    166E : 23                  	INC	HL
    4499/    166F : 7E                  	LD	A,(HL)
    4500/    1670 : 23                  	INC	HL
    4501/    1671 : 66                  	LD	H,(HL)
    4502/    1672 : 6F                  	LD	L,A		; HL: Reg name
    4503/    1673 : CD 47 17            	CALL	STROUT
    4504/    1676 : 3E 3D               	LD	A,'='
    4505/    1678 : CD B4 1F            	CALL	CONOUT
    4506/    167B :                     
    4507/    167B : 79                  	LD	A,C
    4508/    167C : E6 07               	AND	07H
    4509/    167E : FE 01               	CP	1
    4510/    1680 : 20 08               	JR	NZ,RG4
    4511/    1682 :                     	;; 8 bit register
    4512/    1682 : E1                  	POP	HL
    4513/    1683 : 7E                  	LD	A,(HL)
    4514/    1684 : E5                  	PUSH	HL
    4515/    1685 : CD 55 17            	CALL	HEXOUT2
    4516/    1688 : 18 0C               	JR	RG5
    4517/    168A :                     RG4:
    4518/    168A :                     	;; 16 bit register
    4519/    168A : E1                  	POP	HL
    4520/    168B : E5                  	PUSH	HL
    4521/    168C : 23                  	INC	HL
    4522/    168D : 7E                  	LD	A,(HL)
    4523/    168E : CD 55 17            	CALL	HEXOUT2
    4524/    1691 : 2B                  	DEC	HL
    4525/    1692 : 7E                  	LD	A,(HL)
    4526/    1693 : CD 55 17            	CALL	HEXOUT2
    4527/    1696 :                     RG5:
    4528/    1696 : 3E 20               	LD	A,' '
    4529/    1698 : CD B4 1F            	CALL	CONOUT
    4530/    169B : C5                  	PUSH	BC		; C: reg size
    4531/    169C : CD A7 17            	CALL	GETLIN
    4532/    169F : CD 01 18            	CALL	SKIPSP
    4533/    16A2 : CD 11 18            	CALL	RDHEX
    4534/    16A5 : B7                  	OR	A
    4535/    16A6 : 28 0D               	JR	Z,RGR
    4536/    16A8 : C1                  	POP	BC
    4537/    16A9 : E1                  	POP	HL
    4538/    16AA : 79                  	LD	A,C
    4539/    16AB : FE 01               	CP	1
    4540/    16AD : 20 03               	JR	NZ,RG6
    4541/    16AF :                     	;; 8 bit register
    4542/    16AF : 73                  	LD	(HL),E
    4543/    16B0 : 18 03               	JR	RG7
    4544/    16B2 :                     RG6:
    4545/    16B2 :                     	;; 16 bit register
    4546/    16B2 : 73                  	LD	(HL),E
    4547/    16B3 : 23                  	INC	HL
    4548/    16B4 : 72                  	LD	(HL),D
    4549/    16B5 :                     RG7:
    4550/    16B5 :                     RGR:
    4551/    16B5 : C3 BE 00            	JP	WSTART
    4552/    16B8 :                     RGE:
    4553/    16B8 : C3 FE 00            	JP	ERR
    4554/    16BB :                     
    4555/    16BB :                     RDUMP:
    4556/    16BB : 21 92 1D            	LD	HL,RDTAB
    4557/    16BE :                     RD0:
    4558/    16BE : 5E                  	LD	E,(HL)
    4559/    16BF : 23                  	INC	HL
    4560/    16C0 : 56                  	LD	D,(HL)
    4561/    16C1 : 23                  	INC	HL
    4562/    16C2 : 7A                  	LD	A,D
    4563/    16C3 : B3                  	OR	E
    4564/    16C4 : CA 90 17            	JP	Z,CRLF		; End
    4565/    16C7 : D5                  	push	de
    4566/    16C8 : EB                  	EX	DE,HL
    4567/    16C9 : CD 47 17            	CALL	STROUT	; print name of register
    4568/    16CC : EB                  	EX	DE,HL
    4569/    16CD : D1                  	pop	de
    4570/    16CE :                     
    4571/    16CE :                     ; flag check
    4572/    16CE : 3E 1D               	ld	a, RDSF_H
    4573/    16D0 : BA                  	cp	d
    4574/    16D1 : 20 07               	jr	nz, rd101
    4575/    16D3 : 3E FD               	ld	a, RDSF_L
    4576/    16D5 : BB                  	cp	e
    4577/    16D6 : 20 02               	jr	nz, rd101
    4578/    16D8 : 18 29               	jr	rd20
    4579/    16DA :                     
    4580/    16DA :                     rd101:
    4581/    16DA : 3E 1E               	ld	a, RDSFX_H
    4582/    16DC : BA                  	cp	d
    4583/    16DD : 20 05               	jr	nz, rd10
    4584/    16DF : 3E 24               	ld	a, RDSFX_L
    4585/    16E1 : BB                  	cp	e
    4586/    16E2 : 28 1F               	jr	z, rd20
    4587/    16E4 :                     
    4588/    16E4 :                     rd10:
    4589/    16E4 : 5E                  	LD	E,(HL)
    4590/    16E5 : 23                  	INC	HL
    4591/    16E6 : 56                  	LD	D,(HL)
    4592/    16E7 : 23                  	INC	HL
    4593/    16E8 : 7E                  	LD	A,(HL)
    4594/    16E9 : 23                  	INC	HL
    4595/    16EA : EB                  	EX	DE,HL
    4596/    16EB : FE 01               	CP	1
    4597/    16ED : 20 07               	JR	NZ,RD1
    4598/    16EF :                     	;; 1 byte
    4599/    16EF : 7E                  	LD	A,(HL)
    4600/    16F0 : CD 55 17            	CALL	HEXOUT2
    4601/    16F3 : EB                  	EX	DE,HL
    4602/    16F4 : 18 C8               	JR	RD0
    4603/    16F6 :                     RD1:
    4604/    16F6 :                     	;; 2 byte
    4605/    16F6 : 23                  	INC	HL
    4606/    16F7 : 7E                  	LD	A,(HL)
    4607/    16F8 : CD 55 17            	CALL	HEXOUT2		; High byte
    4608/    16FB : 2B                  	DEC	HL
    4609/    16FC : 7E                  	LD	A,(HL)
    4610/    16FD : CD 55 17            	CALL	HEXOUT2		; Low byte
    4611/    1700 : EB                  	EX	DE,HL
    4612/    1701 : 18 BB               	JR	RD0
    4613/    1703 :                     
    4614/    1703 :                     ; make flag image string
    4615/    1703 :                     rd20:
    4616/    1703 : 5E                  	LD	E,(HL)
    4617/    1704 : 23                  	INC	HL
    4618/    1705 : 56                  	LD	D,(HL)
    4619/    1706 : 23                  	INC	HL
    4620/    1707 : 1A                  	ld	a, (de)		; get flag values
    4621/    1708 :                     
    4622/    1708 : D5                  	push	de
    4623/    1709 : E5                  	push	hl
    4624/    170A :                     
    4625/    170A :                     ; make flag image
    4626/    170A :                     
    4627/    170A : 21 71 EF            	ld	hl, F_bit
    4628/    170D : 01 37 17            	ld	bc, F_bit_on
    4629/    1710 : 11 3F 17            	ld	de, F_bit_off
    4630/    1713 : F5                  	push	af		; adjustment SP. DO NOT DELETE THIS LINE!
    4631/    1714 :                     
    4632/    1714 :                     flg_loop:
    4633/    1714 : F1                  	pop	af		; "push af" before loop back
    4634/    1715 : CB 27               	sla	a
    4635/    1717 : 30 06               	jr	nc, flg_off
    4636/    1719 : F5                  	push	af
    4637/    171A : 0A                  	ld	a, (bc)
    4638/    171B : 77                  	ld	(hl), a
    4639/    171C : F1                  	pop	af
    4640/    171D : 18 04               	jr	flg_nxt
    4641/    171F :                     flg_off:
    4642/    171F : F5                  	push	af
    4643/    1720 : 1A                  	ld	a, (de)
    4644/    1721 : 77                  	ld	(hl), a
    4645/    1722 : F1                  	pop	af
    4646/    1723 :                     
    4647/    1723 :                     flg_nxt:
    4648/    1723 : 03                  	inc	bc
    4649/    1724 : 13                  	inc	de
    4650/    1725 : 23                  	inc	hl
    4651/    1726 :                     
    4652/    1726 : F5                  	push	af
    4653/    1727 : 7E                  	ld	a, (hl)
    4654/    1728 : B7                  	or	a		;check delimiter
    4655/    1729 : 20 E9               	jr	nz, flg_loop
    4656/    172B :                     
    4657/    172B : F1                  	pop	af		; restore stack position
    4658/    172C : 21 71 EF            	ld	hl, F_bit
    4659/    172F : CD 47 17            	call	STROUT		; print flag register for bit imaze
    4660/    1732 :                     
    4661/    1732 : E1                  	pop	hl
    4662/    1733 : D1                  	pop	de
    4663/    1734 :                     
    4664/    1734 : 23                  	inc	hl
    4665/    1735 : 18 87               	JR	RD0
    4666/    1737 :                     
    4667/    1737 : 53 5A 2E 48 2E 50   F_bit_on:	db	"SZ.H.PNC"
             173D : 4E 43             
    4668/    173F : 2E 2E 2E 2E 2E 2E   F_bit_off:	db	"........"
             1745 : 2E 2E             
    4669/    1747 :                     
    4670/    1747 :                     
    4671/    1747 :                     ;;;
    4672/    1747 :                     ;;; Other support routines
    4673/    1747 :                     ;;;
    4674/    1747 :                     
    4675/    1747 :                     STROUT:
    4676/    1747 : 7E                  	LD	A,(HL)
    4677/    1748 : A7                  	AND	A
    4678/    1749 : C8                  	RET	Z
    4679/    174A : CD B4 1F            	CALL	CONOUT
    4680/    174D : 23                  	INC	HL
    4681/    174E : 18 F7               	JR	STROUT
    4682/    1750 :                     
    4683/    1750 :                     ; input:  HL
    4684/    1750 :                     ; output: 4 hex_char output console
    4685/    1750 :                     
    4686/    1750 :                     HEXOUT4:
    4687/    1750 : 7C                  	LD	A,H
    4688/    1751 : CD 55 17            	CALL	HEXOUT2
    4689/    1754 : 7D                  	LD	A,L
    4690/    1755 :                     
    4691/    1755 :                     ; input:  A
    4692/    1755 :                     ; output: 2 hex_char output console
    4693/    1755 :                     HEXOUT2:
    4694/    1755 : F5                  	PUSH	AF
    4695/    1756 : 1F                  	RRA
    4696/    1757 : 1F                  	RRA
    4697/    1758 : 1F                  	RRA
    4698/    1759 : 1F                  	RRA
    4699/    175A : CD 5E 17            	CALL	HEXOUT1
    4700/    175D : F1                  	POP	AF
    4701/    175E :                     
    4702/    175E :                     ; input:  A
    4703/    175E :                     ; output: 1 hex_char output console
    4704/    175E :                     HEXOUT1:
    4705/    175E : E6 0F               	AND	0FH
    4706/    1760 : C6 30               	ADD	A,'0'
    4707/    1762 : FE 3A               	CP	'9'+1
    4708/    1764 : DA B4 1F            	JP	C,CONOUT
    4709/    1767 : C6 07               	ADD	A,'A'-'9'-1
    4710/    1769 : C3 B4 1F            	JP	CONOUT
    4711/    176C :                     
    4712/    176C :                     HEXIN:
    4713/    176C : AF                  	XOR	A
    4714/    176D : CD 74 17            	CALL	HI0
    4715/    1770 : 07                  	RLCA
    4716/    1771 : 07                  	RLCA
    4717/    1772 : 07                  	RLCA
    4718/    1773 : 07                  	RLCA
    4719/    1774 :                     HI0:
    4720/    1774 : C5                  	PUSH	BC
    4721/    1775 : 4F                  	LD	C,A
    4722/    1776 : CD A3 1F            	CALL	CONIN
    4723/    1779 :                     ;	CALL	UPPER
    4724/    1779 : FE 30               	CP	'0'
    4725/    177B : 38 11               	JR	C,HIR
    4726/    177D : FE 3A               	CP	'9'+1
    4727/    177F : 38 0A               	JR	C,HI1
    4728/    1781 : FE 41               	CP	'A'
    4729/    1783 : 38 09               	JR	C,HIR
    4730/    1785 : FE 47               	CP	'F'+1
    4731/    1787 : 30 05               	JR	NC,HIR
    4732/    1789 : D6 07               	SUB	'A'-'9'-1
    4733/    178B :                     HI1:
    4734/    178B : D6 30               	SUB	'0'
    4735/    178D : B1                  	OR	C
    4736/    178E :                     HIR:
    4737/    178E : C1                  	POP	BC
    4738/    178F : C9                  	RET
    4739/    1790 :                     	
    4740/    1790 :                     CRLF:
    4741/    1790 : 3E 0D               	LD	A,CR
    4742/    1792 : CD B4 1F            	CALL	CONOUT
    4743/    1795 : 3E 0A               	LD	A,LF
    4744/    1797 : C3 B4 1F            	JP	CONOUT
    4745/    179A :                     
    4746/    179A :                     CLR_CRT:
    4747/    179A : E5                  	PUSH	HL
    4748/    179B : 21 A3 17            	LD	HL, ESC_CRT_CLR
    4749/    179E : CD 47 17            	CALL	STROUT
    4750/    17A1 : E1                  	POP	HL
    4751/    17A2 : C9                  	RET
    4752/    17A3 :                     	
    4753/    17A3 :                     ESC_CRT_CLR:
    4754/    17A3 : 1B                  	db	01BH
    4755/    17A4 : 5B 32               	db	"[2"
    4756/    17A6 : 00                  	db	0
    4757/    17A7 :                     
    4758/    17A7 :                     GETLIN:
    4759/    17A7 : 21 00 EF            	LD	HL,INBUF
    4760/    17AA :                     
    4761/    17AA :                     GL0:	; input hl
    4762/    17AA :                     
    4763/    17AA : C5                  	PUSH	BC
    4764/    17AB : E5                  	push	hl
    4765/    17AC : 06 00               	LD	B,0
    4766/    17AE : CD A3 1F            	CALL	CONIN
    4767/    17B1 : FE 0D               	CP	CR
    4768/    17B3 : 28 44               	JR	Z,GLE
    4769/    17B5 : FE 0A               	CP	LF
    4770/    17B7 : 28 40               	JR	Z,GLE
    4771/    17B9 : FE 08               	CP	BS
    4772/    17BB : 28 25               	JR	Z,GLB
    4773/    17BD : FE 7F               	CP	DEL
    4774/    17BF : 28 21               	JR	Z,GLB
    4775/    17C1 : FE 20               	CP	' '
    4776/    17C3 : 38 E5               	JR	C,GL0
    4777/    17C5 : FE 80               	CP	80H
    4778/    17C7 : 30 E1               	JR	NC,GL0
    4779/    17C9 : 4F                  	LD	C,A
    4780/    17CA : 78                  	LD	A,B
    4781/    17CB : FE 1F               	CP	BUFLEN-1
    4782/    17CD : 30 DB               	JR	NC,GL0	; Too long
    4783/    17CF : 04                  	INC	B
    4784/    17D0 : 79                  	LD	A,C
    4785/    17D1 : CD B4 1F            	CALL	CONOUT
    4786/    17D4 : FE 61               	cp	"a"
    4787/    17D6 : 38 06               	jr	c, GL1
    4788/    17D8 : FE 7B               	cp	"z"+1
    4789/    17DA : 30 02               	jr	nc, GL1
    4790/    17DC : E6 DF               	and	0DFH	; make upper code
    4791/    17DE :                     GL1:
    4792/    17DE : 77                  	LD	(HL),A
    4793/    17DF : 23                  	INC	HL
    4794/    17E0 : 18 C8               	JR	GL0
    4795/    17E2 :                     GLB:
    4796/    17E2 : 78                  	LD	A,B
    4797/    17E3 : A7                  	AND	A
    4798/    17E4 : 28 C4               	JR	Z,GL0
    4799/    17E6 : 05                  	DEC	B
    4800/    17E7 : 2B                  	DEC	HL
    4801/    17E8 : 3E 08               	LD	A,08H
    4802/    17EA : CD B4 1F            	CALL	CONOUT
    4803/    17ED : 3E 20               	LD	A,' '
    4804/    17EF : CD B4 1F            	CALL	CONOUT
    4805/    17F2 : 3E 08               	LD	A,08H
    4806/    17F4 : CD B4 1F            	CALL	CONOUT
    4807/    17F7 : 18 B1               	JR	GL0
    4808/    17F9 :                     GLE:
    4809/    17F9 : CD 90 17            	CALL	CRLF
    4810/    17FC : 36 00               	LD	(HL),00H
    4811/    17FE : E1                  	pop	hl
    4812/    17FF : C1                  	POP	BC
    4813/    1800 : C9                  	RET
    4814/    1801 :                     
    4815/    1801 :                     SKIPSP:
    4816/    1801 : 7E                  	LD	A,(HL)
    4817/    1802 : FE 20               	CP	' '
    4818/    1804 : C0                  	RET	NZ
    4819/    1805 : 23                  	INC	HL
    4820/    1806 : 18 F9               	JR	SKIPSP
    4821/    1808 :                     
    4822/    1808 :                     UPPER:
    4823/    1808 : FE 61               	CP	'a'
    4824/    180A : D8                  	RET	C
    4825/    180B : FE 7B               	CP	'z'+1
    4826/    180D : D0                  	RET	NC
    4827/    180E : C6 E0               	ADD	A,'A'-'a'
    4828/    1810 : C9                  	RET
    4829/    1811 :                     
    4830/    1811 :                     RDHEX:
    4831/    1811 : 0E 00               	LD	C,0
    4832/    1813 : 11 00 00            	LD	DE,0
    4833/    1816 :                     RH0:
    4834/    1816 : 7E                  	LD	A,(HL)
    4835/    1817 :                     ;	CALL	UPPER
    4836/    1817 : FE 30               	CP	'0'
    4837/    1819 : 38 2C               	JR	C,RHE
    4838/    181B : FE 3A               	CP	'9'+1
    4839/    181D : 38 0A               	JR	C,RH1
    4840/    181F : FE 41               	CP	'A'
    4841/    1821 : 38 24               	JR	C,RHE
    4842/    1823 : FE 47               	CP	'F'+1
    4843/    1825 : 30 20               	JR	NC,RHE
    4844/    1827 : D6 07               	SUB	'A'-'9'-1
    4845/    1829 :                     RH1:
    4846/    1829 : D6 30               	SUB	'0'
    4847/    182B : 17                  	RLA
    4848/    182C : 17                  	RLA
    4849/    182D : 17                  	RLA
    4850/    182E : 17                  	RLA
    4851/    182F : 17                  	RLA
    4852/    1830 : CB 13               	RL	E
    4853/    1832 : CB 12               	RL	D
    4854/    1834 : 17                  	RLA
    4855/    1835 : CB 13               	RL	E
    4856/    1837 : CB 12               	RL	D
    4857/    1839 : 17                  	RLA
    4858/    183A : CB 13               	RL	E
    4859/    183C : CB 12               	RL	D
    4860/    183E : 17                  	RLA
    4861/    183F : CB 13               	RL	E
    4862/    1841 : CB 12               	RL	D
    4863/    1843 : 23                  	INC	HL
    4864/    1844 : 0C                  	INC	C
    4865/    1845 : 18 CF               	JR	RH0
    4866/    1847 :                     RHE:
    4867/    1847 : 79                  	ld	a, c
    4868/    1848 : B7                  	or	a
    4869/    1849 : 28 06               	jr	z, rhe1
    4870/    184B : FE 05               	cp	5
    4871/    184D : 30 02               	jr	nc, rhe1
    4872/    184F : B7                  	or	a	; clear carry
    4873/    1850 : C9                  	ret
    4874/    1851 :                     	
    4875/    1851 :                     rhe1:
    4876/    1851 : 37                  	scf	; set carry
    4877/    1852 : C9                  	RET
    4878/    1853 :                     
    4879/    1853 :                     ;;;
    4880/    1853 :                     ;;; API Handler
    4881/    1853 :                     ;;:   C : API entory NO.
    4882/    1853 :                     ;;;
    4883/    1853 :                     
    4884/    1853 :                     RST30H_IN:
    4885/    1853 :                     
    4886/    1853 : E5                  	PUSH	HL
    4887/    1854 : C5                  	PUSH	BC
    4888/    1855 : 21 63 18            	LD	HL,APITBL
    4889/    1858 : 06 00               	LD	B,0
    4890/    185A : 09                  	ADD	HL,BC
    4891/    185B : 09                  	ADD	HL,BC
    4892/    185C : 46                  	LD	B,(HL)
    4893/    185D : 23                  	INC	HL
    4894/    185E : 66                  	LD	H,(HL)
    4895/    185F : 68                  	LD	L,B
    4896/    1860 : C1                  	POP	BC
    4897/    1861 : E3                  	EX	(SP),HL		; Restore HL, jump address on stack top
    4898/    1862 :                     no_operate:
    4899/    1862 : C9                  	RET
    4900/    1863 :                     
    4901/    1863 :                     APITBL:
    4902/    1863 : 8D 18               	DW	API00		; 00: CSTART
    4903/    1865 : 90 18               	DW	API01		; 01: WSTART
    4904/    1867 : B4 1F               	DW	CONOUT		; 02: CONOUT
    4905/    1869 : 47 17               	DW	STROUT		; 03: STROUT
    4906/    186B : A3 1F               	DW	CONIN		; 04: CONIN
    4907/    186D : AE 1F               	DW	CONST		; 05: CONST
    4908/    186F : D2 18               	DW	API06		; 06: PSPEC
    4909/    1871 : 50 17               	DW	HEXOUT4		; 07: CONOUT HEX4bytes: input HL
    4910/    1873 : 55 17               	DW	HEXOUT2		; 08: CONOUT HEX2bytes: input A
    4911/    1875 : 5E 17               	DW	HEXOUT1		; 09: CONOUT HEX1byte : input A
    4912/    1877 : 9A 17               	DW	CLR_CRT		; 10: Clear screen (ESC+[2)
    4913/    1879 : AA 17               	DW	GL0		; 11: GET a line (input HL : input buffer address)
    4914/    187B : 01 18               	DW	SKIPSP		; 12: SKIP Spase
    4915/    187D : 90 17               	DW	CRLF		; 13: CONOUT CRLF
    4916/    187F : 08 18               	DW	UPPER		; 14: Lower to UPPER
    4917/    1881 : 11 18               	DW	RDHEX		; 15: get hex number from chr buffer
    4918/    1883 :                     				;     input  HL : hex string buffer
    4919/    1883 :                     				;     output DE : hex number
    4920/    1883 :                     				;            CF=1 : error, C, A = hex counts(1-4)
    4921/    1883 : A6 1A               	DW	DEC_STR		; 16: get decimal srtings
    4922/    1885 :                     				; input hl : return storings buffer addr.
    4923/    1885 :                     				;       de : 16bit binary
    4924/    1885 : DC 1A               	DW	DIV16_8		; 17; division 16bit / 8bit
    4925/    1887 : 52 1B               	DW	MUL_8		; 18: multiply 8bit * 8bit
    4926/    1889 : =>TRUE               	IF RAM12K
    4927/    1889 : 09 1A               	DW	STOPW		; 19: stopwatch
    4928/    188B : =>FALSE              	ELSE
    4929/    188B :                     	DW	no_operate	; 19: no operation : if RAM12K=0
    4930/    188B : [4926]               	ENDIF
    4931/    188B : F0 07               	dw	get_disasm_st	; 20: dis assemble string
    4932/    188D :                     				;     input: HL buffer. need 42bytes
    4933/    188D :                     				;     output : DE : next MC address
    4934/    188D :                     				;              A  : disassembled MC size
    4935/    188D :                     
    4936/    188D :                     	;; CSTART
    4937/    188D :                     API00:
    4938/    188D : C3 40 00            	JP	CSTART
    4939/    1890 :                     
    4940/    1890 :                     	;; WSTART from API
    4941/    1890 :                     API01:
    4942/    1890 : 31 00 EF            	LD	SP,STACKM	; reset SP for monitor
    4943/    1893 :                     
    4944/    1893 :                     ; check stop by bp and trace operation
    4945/    1893 :                     
    4946/    1893 : 3A 6D EF            	ld	a, (tmpb_f)
    4947/    1896 : B7                  	or	a
    4948/    1897 : 28 06               	jr	z, ws_chk1
    4949/    1899 : 21 6E EF            	ld	hl, tmpb_op
    4950/    189C : CD C1 19            	call	rstr_tpt
    4951/    189F :                     ws_chk1:
    4952/    189F : 3A 5D EF            	ld	a, (tpt1_f)
    4953/    18A2 : B7                  	or	a
    4954/    18A3 : 28 06               	jr	z, ws_chk2
    4955/    18A5 : 21 5E EF            	ld	hl, tpt1_op
    4956/    18A8 : CD C1 19            	call	rstr_tpt
    4957/    18AB :                     
    4958/    18AB :                     ws_chk2:
    4959/    18AB : 3A 61 EF            	ld	a, (tpt2_f)
    4960/    18AE : B7                  	or	a
    4961/    18AF : 28 06               	jr	z, ws_chk3
    4962/    18B1 : 21 62 EF            	ld	hl, tpt2_op
    4963/    18B4 : CD C1 19            	call	rstr_tpt
    4964/    18B7 :                     ws_chk3:
    4965/    18B7 : 3A 69 EF            	ld	a, (bpt2_f)
    4966/    18BA : B7                  	or	a
    4967/    18BB : 28 06               	jr	z, ws_chk4
    4968/    18BD : 21 6A EF            	ld	hl, bpt2_op
    4969/    18C0 : CD CD 19            	call	rstr_bpt
    4970/    18C3 :                     ws_chk4:
    4971/    18C3 : 3A 65 EF            	ld	a, (bpt1_f)
    4972/    18C6 : B7                  	or	a
    4973/    18C7 : 28 06               	jr	z, ws_chk5
    4974/    18C9 : 21 66 EF            	ld	hl, bpt1_op
    4975/    18CC : CD CD 19            	call	rstr_bpt
    4976/    18CF :                     ws_chk5:
    4977/    18CF : C3 97 19            	JP	backTomon
    4978/    18D2 :                     
    4979/    18D2 :                     	;; PSPEC
    4980/    18D2 :                     API06:
    4981/    18D2 : AF                  	XOR	A
    4982/    18D3 : C9                  	RET
    4983/    18D4 :                     
    4984/    18D4 :                     ;;;
    4985/    18D4 :                     ;;; Break Point
    4986/    18D4 :                     ;;; trace Point
    4987/    18D4 :                     ;;; go, stop point
    4988/    18D4 :                     ;;; operation handler
    4989/    18D4 :                     ;;
    4990/    18D4 :                     RST38H_IN:
    4991/    18D4 : F5                  	PUSH	AF
    4992/    18D5 : ED 5F               	LD	A,R
    4993/    18D7 : 32 45 EF            	LD	(REGR),A
    4994/    18DA : ED 57               	LD	A,I
    4995/    18DC : 32 44 EF            	LD	(REGI),A
    4996/    18DF : 22 32 EF            	LD	(REGHL),HL
    4997/    18E2 : ED 53 30 EF         	LD	(REGDE),DE
    4998/    18E6 : ED 43 2E EF         	LD	(REGBC),BC
    4999/    18EA : E1                  	POP	HL
    5000/    18EB : 22 2C EF            	LD	(REGAF),HL
    5001/    18EE : 08                  	EX	AF,AF'
    5002/    18EF : F5                  	PUSH	AF
    5003/    18F0 : D9                  	EXX
    5004/    18F1 : 22 3A EF            	LD	(REGHLX),HL
    5005/    18F4 : ED 53 38 EF         	LD	(REGDEX),DE
    5006/    18F8 : ED 43 36 EF         	LD	(REGBCX),BC
    5007/    18FC : E1                  	POP	HL
    5008/    18FD : 22 34 EF            	LD	(REGAFX),HL
    5009/    1900 : DD 22 3C EF         	LD	(REGIX),IX
    5010/    1904 : FD 22 3E EF         	LD	(REGIY),IY
    5011/    1908 : E1                  	POP	HL
    5012/    1909 : 2B                  	DEC	HL
    5013/    190A : 22 42 EF            	LD	(REGPC),HL
    5014/    190D : ED 73 40 EF         	LD	(REGSP),SP
    5015/    1911 :                     
    5016/    1911 :                     ; check bp and trace operation
    5017/    1911 :                     
    5018/    1911 : 31 00 EF            	LD	SP,STACKM	; reset SP for monitor
    5019/    1914 : AF                  	xor	a
    5020/    1915 : 57                  	ld	d, a
    5021/    1916 : 5F                  	ld	e, a		;clear msg pointer
    5022/    1917 :                     
    5023/    1917 :                     
    5024/    1917 :                     ; check go, end operation
    5025/    1917 : 3A 6D EF            	ld	a, (tmpb_f)
    5026/    191A : B7                  	or	a
    5027/    191B : 28 09               	jr	z, chk_bp
    5028/    191D : 11 F7 19            	ld	de, stpBrk_msg
    5029/    1920 : 21 6E EF            	ld	hl, tmpb_op
    5030/    1923 : CD C1 19            	call	rstr_tpt
    5031/    1926 :                     
    5032/    1926 :                     ; check set break point
    5033/    1926 :                     
    5034/    1926 :                     chk_bp:
    5035/    1926 : 3A 69 EF            	ld	a, (bpt2_f)
    5036/    1929 : B7                  	or	a
    5037/    192A : 28 09               	jr	z, bp_chk1
    5038/    192C : 11 F7 19            	ld	de, stpBrk_msg
    5039/    192F : 21 6A EF            	ld	hl, bpt2_op
    5040/    1932 : CD CD 19            	call	rstr_bpt
    5041/    1935 :                     
    5042/    1935 :                     bp_chk1:
    5043/    1935 : 3A 65 EF            	ld	a, (bpt1_f)
    5044/    1938 : B7                  	or	a
    5045/    1939 : 28 09               	jr	z, tp_chk1
    5046/    193B : 11 F7 19            	ld	de, stpBrk_msg
    5047/    193E : 21 66 EF            	ld	hl, bpt1_op
    5048/    1941 : CD CD 19            	call	rstr_bpt
    5049/    1944 :                     
    5050/    1944 :                     ; check trace operation
    5051/    1944 :                     tp_chk1:
    5052/    1944 : 3A 5D EF            	ld	a, (tpt1_f)
    5053/    1947 : B7                  	or	a
    5054/    1948 : 28 09               	jr	z, tp_chk2
    5055/    194A : 11 00 1A            	ld	de, trace_msg
    5056/    194D : 21 5E EF            	ld	hl, tpt1_op
    5057/    1950 : CD C1 19            	call	rstr_tpt
    5058/    1953 :                     
    5059/    1953 :                     tp_chk2:
    5060/    1953 : 3A 61 EF            	ld	a, (tpt2_f)
    5061/    1956 : B7                  	or	a
    5062/    1957 : 28 09               	jr	z, bp_chk_end
    5063/    1959 :                     
    5064/    1959 : 11 00 1A            	ld	de, trace_msg
    5065/    195C : 21 62 EF            	ld	hl, tpt2_op
    5066/    195F : CD C1 19            	call	rstr_tpt
    5067/    1962 :                     
    5068/    1962 :                     bp_chk_end:
    5069/    1962 : 7A                  	ld	a, d
    5070/    1963 : B3                  	or	e
    5071/    1964 : 20 03               	jr	nz, no_rst38_msg
    5072/    1966 :                     
    5073/    1966 :                     	; set RST 38H message
    5074/    1966 : 11 ED 19            	LD	de,RST38MSG
    5075/    1969 :                     
    5076/    1969 :                     no_rst38_msg:
    5077/    1969 : 1A                  	ld	a, (de)		; get first char of message
    5078/    196A : FE 54               	cp	'T'		; trace ?
    5079/    196C : 28 0C               	jr	z, chk_ntrace
    5080/    196E :                     	
    5081/    196E : EB                  	ex	de, hl
    5082/    196F : CD 47 17            	CALL	STROUT
    5083/    1972 :                     
    5084/    1972 :                     	;; R register adjustment
    5085/    1972 :                     
    5086/    1972 : CD BB 16            	CALL	RDUMP
    5087/    1975 : CD D4 19            	call	dis_call	; list disassemble
    5088/    1978 : 18 1D               	jr	backTomon	; goto WBOOT
    5089/    197A :                     
    5090/    197A :                     ;
    5091/    197A :                     ; check continue trace operation
    5092/    197A :                     ;
    5093/    197A :                     chk_ntrace:
    5094/    197A : 3A 56 EF            	ld	a, (TP_mode)
    5095/    197D : FE 46               	cp	'F'		; chk
    5096/    197F : 28 0A               	jr	z, skp_rmsg
    5097/    1981 :                     
    5098/    1981 :                     ;no_trace:
    5099/    1981 : EB                  	ex	de, hl
    5100/    1982 : CD 47 17            	CALL	STROUT
    5101/    1985 :                     
    5102/    1985 :                     	;; R register adjustment
    5103/    1985 :                     
    5104/    1985 : CD BB 16            	CALL	RDUMP
    5105/    1988 : CD D4 19            	call	dis_call	; list disassemble
    5106/    198B :                     
    5107/    198B :                     skp_rmsg:
    5108/    198B : CD AE 1F            	call	CONST
    5109/    198E : 28 13               	jr	z, t_no_ky		; no key in
    5110/    1990 : CD A3 1F            	call	CONIN
    5111/    1993 : FE 03               	cp	03h	; chk CTL+C
    5112/    1995 : 20 0C               	jr	nz, t_no_ky
    5113/    1997 :                     
    5114/    1997 :                     	; stop_trace
    5115/    1997 :                     backTomon:
    5116/    1997 : AF                  	xor	a
    5117/    1998 : 32 5C EF            	ld	(fever_t), a	; clear forever flag
    5118/    199B : 67                  	ld	h, a
    5119/    199C : 6F                  	ld	l, a
    5120/    199D : 22 58 EF            	ld	(TC_cnt), hl
    5121/    19A0 : C3 BE 00            	JP	WSTART
    5122/    19A3 :                     	
    5123/    19A3 :                     	; check trace forever
    5124/    19A3 :                     t_no_ky:
    5125/    19A3 : 3A 5C EF            	ld	a, (fever_t)
    5126/    19A6 : B7                  	or	a
    5127/    19A7 : C2 B8 19            	jp	nz, repeat_trace
    5128/    19AA :                     
    5129/    19AA : 2A 58 EF            	ld	hl, (TC_cnt)
    5130/    19AD : 2B                  	dec	hl
    5131/    19AE : 22 58 EF            	ld	(TC_cnt), hl
    5132/    19B1 : 7D                  	ld	a, l
    5133/    19B2 : B4                  	or	h
    5134/    19B3 : 20 03               	jr	nz, repeat_trace
    5135/    19B5 : C3 BE 00            	JP	WSTART
    5136/    19B8 :                     
    5137/    19B8 :                     repeat_trace:
    5138/    19B8 : 2A 42 EF            	ld	hl, (REGPC)
    5139/    19BB : 22 5A EF            	ld	(tmpT), hl
    5140/    19BE : C3 E1 03            	jp	t_op_chk
    5141/    19C1 :                     
    5142/    19C1 :                     rstr_tpt:	; HL=buffer point
    5143/    19C1 : E5                  	push	hl
    5144/    19C2 : 7E                  	ld	a, (hl)
    5145/    19C3 : 23                  	inc	hl
    5146/    19C4 : 4E                  	ld	c, (hl)
    5147/    19C5 : 23                  	inc	hl
    5148/    19C6 : 46                  	ld	b, (hl)
    5149/    19C7 :                     
    5150/    19C7 : 02                  	ld	(bc), a		; restor OP CODE
    5151/    19C8 : E1                  	pop	hl
    5152/    19C9 : AF                  	xor	a
    5153/    19CA : 2B                  	dec	hl
    5154/    19CB : 77                  	ld	(hl), a		; clear trace flag
    5155/    19CC : C9                  	ret
    5156/    19CD :                     
    5157/    19CD :                     rstr_bpt:	; HL=buffer point
    5158/    19CD : 7E                  	ld	a, (hl)
    5159/    19CE : 23                  	inc	hl
    5160/    19CF : 4E                  	ld	c, (hl)
    5161/    19D0 : 23                  	inc	hl
    5162/    19D1 : 46                  	ld	b, (hl)
    5163/    19D2 :                     
    5164/    19D2 : 02                  	ld	(bc), a		; restor OP CODE
    5165/    19D3 : C9                  	ret
    5166/    19D4 :                     
    5167/    19D4 :                     dis_call:
    5168/    19D4 : 2A 42 EF            	ld	hl, (REGPC)
    5169/    19D7 : 22 7D EF            	ld	(dasm_adr), hl	; set disasm address
    5170/    19DA : CD 46 08            	call	dis_analysis
    5171/    19DD : CD 0B 08            	call	mk_adr_str	; conout address and machine code
    5172/    19E0 : 21 84 EF            	ld	hl, adr_mc_buf
    5173/    19E3 : CD 47 17            	call	STROUT		; conout disassemble strings
    5174/    19E6 : 2A 42 EF            	ld	hl, (REGPC)
    5175/    19E9 : 22 7D EF            	ld	(dasm_adr), hl	; restrore disasm address
    5176/    19EC : C9                  	ret
    5177/    19ED :                     
    5178/    19ED :                     RST38MSG:
    5179/    19ED : 52 53 54 20 33 38   	DB	"RST 38H",CR,LF,00H
             19F3 : 48 0D 0A 00       
    5180/    19F7 :                     stpBrk_msg:	
    5181/    19F7 : 42 72 65 61 6B 21   	db	"Break!",CR,LF,00H
             19FD : 0D 0A 00          
    5182/    1A00 :                     trace_msg:	
    5183/    1A00 : 54 72 61 63 65 21   	db	"Trace!",CR,LF,00H
             1A06 : 0D 0A 00          
    5184/    1A09 :                     
    5185/    1A09 : =>TRUE               	IF RAM12K
    5186/    1A09 :                     STOPW:
    5187/    1A09 :                     	; (input) A = 0 : start timer, (output) none
    5188/    1A09 :                     	; (input) A = 1 : stop timer,  (output) BC : msec time, DE : Sec time
    5189/    1A09 :                     	; (input) A = 2 : lap timer,   (output) BC : msec time, DE : Sec time
    5190/    1A09 :                     	; (input) A = 3 : clear timer counter,  (output) none
    5191/    1A09 :                     
    5192/    1A09 : F5                  	push	af
    5193/    1A0A : E5                  	push	hl
    5194/    1A0B : FE 00               	cp	0
    5195/    1A0D : 28 0F               	jr	z, start_tim
    5196/    1A0F : FE 01               	cp	1
    5197/    1A11 : 28 14               	jr	z, stop_tim
    5198/    1A13 : FE 02               	cp	2
    5199/    1A15 : 28 16               	jr	z, lap_tim
    5200/    1A17 : FE 03               	cp	3
    5201/    1A19 : 28 50               	jr	z, clr_tim
    5202/    1A1B : E1                  	pop	hl
    5203/    1A1C : F1                  	pop	af
    5204/    1A1D : C9                  	ret
    5205/    1A1E :                     
    5206/    1A1E :                     start_tim:
    5207/    1A1E : 21 00 F8            	ld	hl, TIM0_CTL0
    5208/    1A21 : 3E 90               	ld	a, 90h
    5209/    1A23 : 77                  	ld	(hl),a		; enable timer 0
    5210/    1A24 : E1                  	pop	hl
    5211/    1A25 : F1                  	pop	af
    5212/    1A26 : C9                  	ret
    5213/    1A27 :                     	
    5214/    1A27 :                     stop_tim:
    5215/    1A27 : 21 00 F8            	ld	hl, TIM0_CTL0
    5216/    1A2A : 3E 10               	ld	a, 10h
    5217/    1A2C : 77                  	ld	(hl), a		; disable timer 0
    5218/    1A2D :                     
    5219/    1A2D :                     	; save timer counter
    5220/    1A2D :                     
    5221/    1A2D :                     lap_tim:
    5222/    1A2D : 3A 10 F8            	ld	a, (TIMER0_CNTL)
    5223/    1A30 : 32 46 EF            	ld	(c16b), a
    5224/    1A33 : 3A 11 F8            	ld	a, (TIMER0_CNTH)
    5225/    1A36 : 32 47 EF            	ld	(c16b+1), a
    5226/    1A39 :                     
    5227/    1A39 :                     ; adjust 16bit counter
    5228/    1A39 :                     
    5229/    1A39 : 01 E1 87            	ld	bc, TIMER0_INITC
    5230/    1A3C : 2A 46 EF            	ld	hl, (c16b)
    5231/    1A3F : 7C                  	ld	a, h
    5232/    1A40 : B5                  	or	l	; HL = 0?
    5233/    1A41 : 20 06               	jr	nz, adj_tim1
    5234/    1A43 : ED 43 46 EF         	ld	(c16b), bc
    5235/    1A47 : 18 05               	jr	rd_sec
    5236/    1A49 :                     
    5237/    1A49 :                     adj_tim1:
    5238/    1A49 : ED 42               	sbc	hl, bc
    5239/    1A4B : 22 46 EF            	ld	(c16b), hl
    5240/    1A4E :                     
    5241/    1A4E :                     ; read seconds counter
    5242/    1A4E :                     
    5243/    1A4E :                     rd_sec:
    5244/    1A4E : 3A 20 F8            	ld	a, (TIMER0_SCTL)
    5245/    1A51 : 32 48 EF            	ld	(secb), a
    5246/    1A54 : 3A 21 F8            	ld	a, (TIMER0_SCTH)
    5247/    1A57 : 32 49 EF            	ld	(secb+1), a
    5248/    1A5A :                     
    5249/    1A5A :                     	; convert msec from 16bit counter
    5250/    1A5A :                     
    5251/    1A5A : 2A 46 EF            	ld	hl,(c16b)
    5252/    1A5D : CD 8A 1A            	call	chg_msec	; result BC
    5253/    1A60 : ED 43 4A EF         	ld	(msecb),bc	; save result
    5254/    1A64 : ED 5B 48 EF         	ld	de,(secb)	; get sec counter
    5255/    1A68 : E1                  	pop	hl
    5256/    1A69 : F1                  	pop	af
    5257/    1A6A : C9                  	ret
    5258/    1A6B :                     
    5259/    1A6B :                     clr_tim:
    5260/    1A6B : AF                  	xor	a
    5261/    1A6C : 67                  	ld	h, a
    5262/    1A6D : 6F                  	ld	l, a
    5263/    1A6E : 22 4A EF            	ld	(msecb), hl
    5264/    1A71 : 22 48 EF            	ld	(secb), hl
    5265/    1A74 : 22 46 EF            	ld	(c16b), hl
    5266/    1A77 :                     	
    5267/    1A77 : 32 20 F8            	ld	(TIMER0_SCTL), a
    5268/    1A7A : 32 21 F8            	ld	(TIMER0_SCTH), a
    5269/    1A7D : 3E E8               	ld	a, 0e8h
    5270/    1A7F : 32 10 F8            	ld	(TIMER0_CNTL), a
    5271/    1A82 : 3E 86               	ld	a, 86H
    5272/    1A84 : 32 11 F8            	ld	(TIMER0_CNTH), a
    5273/    1A87 : E1                  	pop	hl
    5274/    1A88 : F1                  	pop	af
    5275/    1A89 : C9                  	ret
    5276/    1A8A :                     
    5277/    1A8A :                     chg_msec:
    5278/    1A8A : AF                  	xor	a
    5279/    1A8B : 47                  	ld	b, a
    5280/    1A8C : 4F                  	ld	c ,a		;cear BC
    5281/    1A8D : 2A 46 EF            	ld	hl, (c16b)	; get 16bit counter
    5282/    1A90 : 7D                  	ld	a, l
    5283/    1A91 :                     u_00:
    5284/    1A91 : FE 1F               	cp	31
    5285/    1A93 : 38 06               	jr	c, u_1
    5286/    1A95 : D6 1F               	sub	31
    5287/    1A97 :                     u_0:
    5288/    1A97 : 6F                  	ld	l, a
    5289/    1A98 : 03                  	inc	bc
    5290/    1A99 : 18 F6               	jr	u_00
    5291/    1A9B :                     
    5292/    1A9B :                     u_1:
    5293/    1A9B : 7C                  	ld	a, h
    5294/    1A9C : B7                  	or	a
    5295/    1A9D : C8                  	ret	z	; can't sub
    5296/    1A9E :                     
    5297/    1A9E : 7D                  	ld	a, l
    5298/    1A9F : D6 1F               	sub	31
    5299/    1AA1 : ED 44               	neg
    5300/    1AA3 : 25                  	dec	h
    5301/    1AA4 : 18 F1               	jr	u_0
    5302/    1AA6 :                     
    5303/    1AA6 : [5185]               	ENDIF
    5304/    1AA6 :                     
    5305/    1AA6 :                     ;
    5306/    1AA6 :                     ; make decimal string
    5307/    1AA6 :                     ;
    5308/    1AA6 :                     ; input HL : output string buffer
    5309/    1AA6 :                     ;       DE : 16bit binary
    5310/    1AA6 :                     ;
    5311/    1AA6 :                     ; output (HL) : decimal strings
    5312/    1AA6 :                     
    5313/    1AA6 :                     DEC_STR:
    5314/    1AA6 : F5                  	PUSH	AF
    5315/    1AA7 : C5                  	PUSH	BC
    5316/    1AA8 : D5                  	PUSH	DE
    5317/    1AA9 : E5                  	push	hl
    5318/    1AAA : DD E5               	push	ix
    5319/    1AAC :                     
    5320/    1AAC : E5                  	push	hl
    5321/    1AAD : DD E1               	pop	ix		; ix: save buffer top address
    5322/    1AAF :                     
    5323/    1AAF : EB                  	ex	de, hl		; hl: 16bit binary, de: buffer
    5324/    1AB0 : E5                  	push	hl		; save 16bit binary
    5325/    1AB1 : 21 05 00            	ld	hl, 5
    5326/    1AB4 : 19                  	add	hl, de		; hl = buffer + 5
    5327/    1AB5 : AF                  	xor	a
    5328/    1AB6 : 77                  	ld	(hl), A
    5329/    1AB7 : EB                  	ex	de, hl		; de: buffer + 5, hl : buffer
    5330/    1AB8 : E1                  	pop	hl		; hl : 16bit binary
    5331/    1AB9 : 01 01 00            	LD	BC, 1
    5332/    1ABC :                     
    5333/    1ABC :                     LOOP_DEC:
    5334/    1ABC : 3E 0A               	LD	A, 10
    5335/    1ABE : CD DC 1A            	CALL	DIV16_8
    5336/    1AC1 : F6 30               	OR	30H
    5337/    1AC3 : 1B                  	DEC	DE
    5338/    1AC4 : 12                  	LD	(DE), A
    5339/    1AC5 : 0C                  	INC	C
    5340/    1AC6 : 7C                  	LD	A, H
    5341/    1AC7 : B5                  	OR	L
    5342/    1AC8 : 20 F2               	JR	NZ, LOOP_DEC
    5343/    1ACA :                     
    5344/    1ACA : 79                  	LD	A, C
    5345/    1ACB : FE 06               	CP	6
    5346/    1ACD : 28 06               	JR	Z, END_DEC
    5347/    1ACF :                     
    5348/    1ACF : DD E5               	push	ix
    5349/    1AD1 : E1                  	pop	hl		; hl : buffer top address
    5350/    1AD2 : EB                  	EX	DE, HL
    5351/    1AD3 : ED B0               	LDIR
    5352/    1AD5 :                     
    5353/    1AD5 :                     END_DEC:
    5354/    1AD5 : DD E1               	pop	ix
    5355/    1AD7 : E1                  	pop	hl
    5356/    1AD8 : D1                  	POP	DE
    5357/    1AD9 : C1                  	POP	BC
    5358/    1ADA : F1                  	POP	AF
    5359/    1ADB : C9                  	RET
    5360/    1ADC :                     
    5361/    1ADC :                     
    5362/    1ADC :                     ; DIV 16bit / 8 bit
    5363/    1ADC :                     ; input
    5364/    1ADC :                     ;	HL, A
    5365/    1ADC :                     ; output
    5366/    1ADC :                     ;	result = HL, mod = A
    5367/    1ADC :                     
    5368/    1ADC :                     DIV16_8:
    5369/    1ADC : C5                  	PUSH	BC
    5370/    1ADD : D5                  	PUSH	DE
    5371/    1ADE :                     
    5372/    1ADE : 4F                  	LD	C, A
    5373/    1ADF : 06 0F               	LD	B, 15
    5374/    1AE1 : AF                  	XOR	A
    5375/    1AE2 : 29                  	ADD	HL, HL
    5376/    1AE3 : 17                  	RLA
    5377/    1AE4 : 91                  	SUB	C
    5378/    1AE5 : 38 0D               	JR	C, D16_MINUS_BEFORE
    5379/    1AE7 : 29                  	ADD	HL, HL
    5380/    1AE8 : 2C                  	INC	L
    5381/    1AE9 :                     
    5382/    1AE9 :                     D16_PLUS:
    5383/    1AE9 : 17                  	RLA
    5384/    1AEA : 91                  	SUB	C
    5385/    1AEB : 38 0C               	JR	C, D16_MINUS_AFTER
    5386/    1AED :                     
    5387/    1AED :                     D16_PLUS_AFTER:
    5388/    1AED : 29                  	ADD	HL, HL
    5389/    1AEE : 2C                  	INC	L
    5390/    1AEF : 10 F8               	DJNZ	D16_PLUS
    5391/    1AF1 : C3 FD 1A            	JP	D16_END
    5392/    1AF4 :                     
    5393/    1AF4 :                     D16_MINUS_BEFORE:
    5394/    1AF4 : 29                  	ADD	HL, HL
    5395/    1AF5 :                     
    5396/    1AF5 :                     D16_MINUS:
    5397/    1AF5 : 17                  	RLA
    5398/    1AF6 : 81                  	ADD	A, C
    5399/    1AF7 : 38 F4               	JR	C, D16_PLUS_AFTER
    5400/    1AF9 :                     
    5401/    1AF9 :                     D16_MINUS_AFTER:
    5402/    1AF9 : 29                  	ADD	HL, HL
    5403/    1AFA : 10 F9               	DJNZ	D16_MINUS
    5404/    1AFC : 81                  	ADD	A,C
    5405/    1AFD :                     D16_END:
    5406/    1AFD : D1                  	POP	DE
    5407/    1AFE : C1                  	POP	BC
    5408/    1AFF : C9                  	RET
    5409/    1B00 :                     
    5410/    1B00 :                     ;
    5411/    1B00 :                     ; input : HL / DE
    5412/    1B00 :                     ; output : quotient HL
    5413/    1B00 :                     ;	   remainder DE
    5414/    1B00 :                     
    5415/    1B00 :                     DIV16:
    5416/    1B00 : 22 4C EF            	LD	(DIV16_NA), HL
    5417/    1B03 : ED 53 4E EF         	LD	(DIV16_NB), DE
    5418/    1B07 :                     
    5419/    1B07 : AF                  	XOR	A
    5420/    1B08 : 32 50 EF            	LD	(DIV16_NC), A
    5421/    1B0B : 32 51 EF            	LD	(DIV16_NC+1), A
    5422/    1B0E : 32 52 EF            	LD	(DIV16_ND), A
    5423/    1B11 : 32 53 EF            	LD	(DIV16_ND+1), A
    5424/    1B14 : 06 10               	LD	B, 16
    5425/    1B16 :                     
    5426/    1B16 :                     DIV16_X2:
    5427/    1B16 : 21 50 EF            	LD	HL, DIV16_NC
    5428/    1B19 : CB 26               	SLA	(HL)
    5429/    1B1B : 23                  	INC	HL
    5430/    1B1C : CB 16               	RL	(HL)
    5431/    1B1E :                     
    5432/    1B1E : 21 4C EF            	LD	HL, DIV16_NA
    5433/    1B21 : CB 26               	SLA	(HL)
    5434/    1B23 : 23                  	INC	HL
    5435/    1B24 : CB 16               	RL	(HL)
    5436/    1B26 : 21 52 EF            	LD	HL, DIV16_ND
    5437/    1B29 : CB 16               	RL	(HL)
    5438/    1B2B : 23                  	INC	HL
    5439/    1B2C : CB 16               	RL	(HL)
    5440/    1B2E :                     
    5441/    1B2E : 2A 4E EF            	LD	HL, (DIV16_NB)
    5442/    1B31 : 5D                  	LD	E, L
    5443/    1B32 : 54                  	LD	D, H
    5444/    1B33 : 2A 52 EF            	LD	HL, (DIV16_ND)
    5445/    1B36 : AF                  	XOR	A
    5446/    1B37 : ED 52               	SBC	HL, DE
    5447/    1B39 : 30 02               	JR	NC, DIV16_X0
    5448/    1B3B : 18 0B               	JR	DIV16_X1
    5449/    1B3D :                     
    5450/    1B3D :                     DIV16_X0:
    5451/    1B3D : 22 52 EF            	LD	(DIV16_ND), HL
    5452/    1B40 :                     
    5453/    1B40 : 3A 50 EF            	LD	A, (DIV16_NC)
    5454/    1B43 : F6 01               	OR	1
    5455/    1B45 : 32 50 EF            	LD	(DIV16_NC), A
    5456/    1B48 :                     
    5457/    1B48 :                     DIV16_X1:
    5458/    1B48 : 10 CC               	DJNZ	DIV16_X2
    5459/    1B4A :                     
    5460/    1B4A : 2A 50 EF            	LD	HL,(DIV16_NC)
    5461/    1B4D : ED 5B 52 EF         	LD	DE,(DIV16_ND)
    5462/    1B51 : C9                  	RET
    5463/    1B52 :                     
    5464/    1B52 :                     ; 8bit * 8bit : ans = 16bit
    5465/    1B52 :                     ; input A , BC
    5466/    1B52 :                     ; output HL
    5467/    1B52 :                     
    5468/    1B52 :                     MUL_8:
    5469/    1B52 : F5                  	PUSH	AF
    5470/    1B53 : C5                  	PUSH	BC
    5471/    1B54 : B7                  	OR	A	; clear carry
    5472/    1B55 : 18 04               	JR	ST_MUL8
    5473/    1B57 :                     
    5474/    1B57 :                     LOOP_M8:
    5475/    1B57 : CB 21               	SLA	C
    5476/    1B59 : CB 10               	RL	B
    5477/    1B5B :                     
    5478/    1B5B :                     ST_MUL8:
    5479/    1B5B : 1F                  	RRA
    5480/    1B5C : 30 F9               	JR	NC, LOOP_M8
    5481/    1B5E : 09                  	ADD	HL, BC
    5482/    1B5F : 20 F6               	JR	NZ, LOOP_M8
    5483/    1B61 : C1                  	POP	BC
    5484/    1B62 : F1                  	POP	AF
    5485/    1B63 : C9                  	RET
    5486/    1B64 :                     ;;;
    5487/    1B64 :                     ;;; Messages
    5488/    1B64 :                     ;;;
    5489/    1B64 :                     
    5490/    1B64 : 3F 20 3A 43 6F 6D   cmd_hlp:	db	"? :Command Help", CR, LF
             1B6A : 6D 61 6E 64 20 48 
             1B70 : 65 6C 70 0D 0A    
    5491/    1B75 : 44 5B 3C 61 64 72   		db	"D[<adr>] :Dump Memory", CR, LF
             1B7B : 3E 5D 20 3A 44 75 
             1B81 : 6D 70 20 4D 65 6D 
             1B87 : 6F 72 79 0D 0A    
    5492/    1B8C : 53 5B 3C 61 64 72   		db	"S[<adr>] :Set Memory", CR, LF
             1B92 : 3E 5D 20 3A 53 65 
             1B98 : 74 20 4D 65 6D 6F 
             1B9E : 72 79 0D 0A       
    5493/    1BA2 : 52 5B 3C 72 65 67   		db	"R[<reg>] :Set or Dump register", CR, LF
             1BA8 : 3E 5D 20 3A 53 65 
             1BAE : 74 20 6F 72 20 44 
             1BB4 : 75 6D 70 20 72 65 
             1BBA : 67 69 73 74 65 72 
             1BC0 : 0D 0A             
    5494/    1BC2 : 47 5B 3C 61 64 72   		db	"G[<adr>][,<stop adr>] :Go and Stop", CR, LF
             1BC8 : 3E 5D 5B 2C 3C 73 
             1BCE : 74 6F 70 20 61 64 
             1BD4 : 72 3E 5D 20 3A 47 
             1BDA : 6F 20 61 6E 64 20 
             1BE0 : 53 74 6F 70 0D 0A 
    5495/    1BE6 : 4C 20 3A 4C 6F 61   		db	"L :Load HexFile", CR, LF
             1BEC : 64 20 48 65 78 46 
             1BF2 : 69 6C 65 0D 0A    
    5496/    1BF7 : 50 5B 49 7C 53 5D   		db	"P[I|S] :Save HexFile(I:Intel,S:Motorola", CR, LF
             1BFD : 20 3A 53 61 76 65 
             1C03 : 20 48 65 78 46 69 
             1C09 : 6C 65 28 49 3A 49 
             1C0F : 6E 74 65 6C 2C 53 
             1C15 : 3A 4D 6F 74 6F 72 
             1C1B : 6F 6C 61 0D 0A    
    5497/    1C20 : 23 4C 7C 3C 6E 75   		db	"#L|<num> :Launch program", CR, LF
             1C26 : 6D 3E 20 3A 4C 61 
             1C2C : 75 6E 63 68 20 70 
             1C32 : 72 6F 67 72 61 6D 
             1C38 : 0D 0A             
    5498/    1C3A : 42 5B 31 7C 32 5B   		db	"B[1|2[,<adr>]] :Set or List Break Point", CR, LF
             1C40 : 2C 3C 61 64 72 3E 
             1C46 : 5D 5D 20 3A 53 65 
             1C4C : 74 20 6F 72 20 4C 
             1C52 : 69 73 74 20 42 72 
             1C58 : 65 61 6B 20 50 6F 
             1C5E : 69 6E 74 0D 0A    
    5499/    1C63 : 42 43 5B 31 7C 32   		db	"BC[1|2] :Clear Break Point", CR, LF
             1C69 : 5D 20 3A 43 6C 65 
             1C6F : 61 72 20 42 72 65 
             1C75 : 61 6B 20 50 6F 69 
             1C7B : 6E 74 0D 0A       
    5500/    1C7F : 54 5B 3C 61 64 72   		db	"T[<adr>][,<steps>|-1] : Trace command", CR, LF
             1C85 : 3E 5D 5B 2C 3C 73 
             1C8B : 74 65 70 73 3E 7C 
             1C91 : 2D 31 5D 20 3A 20 
             1C97 : 54 72 61 63 65 20 
             1C9D : 63 6F 6D 6D 61 6E 
             1CA3 : 64 0D 0A          
    5501/    1CA6 : 54 50 5B 4F 4E 7C   		db	"TP[ON|OFF] :Trace Print Mode", CR, LF
             1CAC : 4F 46 46 5D 20 3A 
             1CB2 : 54 72 61 63 65 20 
             1CB8 : 50 72 69 6E 74 20 
             1CBE : 4D 6F 64 65 0D 0A 
    5502/    1CC4 : 54 4D 5B 49 7C 53   		db	"TM[I|S] :Trace Option for CALL", CR, LF
             1CCA : 5D 20 3A 54 72 61 
             1CD0 : 63 65 20 4F 70 74 
             1CD6 : 69 6F 6E 20 66 6F 
             1CDC : 72 20 43 41 4C 4C 
             1CE2 : 0D 0A             
    5503/    1CE4 : 44 49 5B 3C 61 64   		db	"DI[<adr>][,s<steps>|<adr>] :Disassemble", CR, LF, 00h
             1CEA : 72 3E 5D 5B 2C 73 
             1CF0 : 3C 73 74 65 70 73 
             1CF6 : 3E 7C 3C 61 64 72 
             1CFC : 3E 5D 20 3A 44 69 
             1D02 : 73 61 73 73 65 6D 
             1D08 : 62 6C 65 0D 0A 00 
    5504/    1D0E :                     
    5505/    1D0E :                     OPNMSG:
    5506/    1D0E : 0D 0A               	DB	CR,LF
    5507/    1D10 : 45 4D 55 5A 38 30   	db	"EMUZ80 MONITOR Rev.B02",CR,LF
             1D16 : 20 4D 4F 4E 49 54 
             1D1C : 4F 52 20 52 65 76 
             1D22 : 2E 42 30 32 0D 0A 
    5508/    1D28 : 54 68 69 73 20 6D   	db	"This monitor is based on unimon.",CR,LF,00H
             1D2E : 6F 6E 69 74 6F 72 
             1D34 : 20 69 73 20 62 61 
             1D3A : 73 65 64 20 6F 6E 
             1D40 : 20 75 6E 69 6D 6F 
             1D46 : 6E 2E 0D 0A 00    
    5509/    1D4B :                     
    5510/    1D4B :                     PROMPT:
    5511/    1D4B : 5D 20 00            	DB	"] ",00H
    5512/    1D4E :                     
    5513/    1D4E :                     IHEMSG:
    5514/    1D4E : 45 72 72 6F 72 20   	DB	"Error ihex",CR,LF,00H
             1D54 : 69 68 65 78 0D 0A 
             1D5A : 00                
    5515/    1D5B :                     SHEMSG:
    5516/    1D5B : 45 72 72 6F 72 20   	DB	"Error srec",CR,LF,00H
             1D61 : 73 72 65 63 0D 0A 
             1D67 : 00                
    5517/    1D68 :                     ERRMSG:
    5518/    1D68 : 45 72 72 6F 72 0D   	DB	"Error",CR,LF,00H
             1D6E : 0A 00             
    5519/    1D70 :                     
    5520/    1D70 :                     DSEP0:
    5521/    1D70 : 20 3A 00            	DB	" :",00H
    5522/    1D73 :                     DSEP1:
    5523/    1D73 : 20 3A 20 00         	DB	" : ",00H
    5524/    1D77 :                     IHEXER:
    5525/    1D77 : 3A 30 30 30 30 30           DB	":00000001FF",CR,LF,00H
             1D7D : 30 30 31 46 46 0D 
             1D83 : 0A 00             
    5526/    1D85 :                     SRECER:
    5527/    1D85 : 53 39 30 33 30 30           DB	"S9030000FC",CR,LF,00H
             1D8B : 30 30 46 43 0D 0A 
             1D91 : 00                
    5528/    1D92 :                     
    5529/    1D92 :                     	;; Register dump table
    5530/    1D92 : E7 1D 2D EF         RDTAB:	DW	RDSA,   REGAF+1
    5531/    1D96 : 01                  	DB	1
    5532/    1D97 : EB 1D 2E EF         	DW	RDSBC,  REGBC
    5533/    1D9B : 02                  	DB	2
    5534/    1D9C : F1 1D 30 EF         	DW	RDSDE,  REGDE
    5535/    1DA0 : 02                  	DB	2
    5536/    1DA1 : F7 1D 32 EF         	DW	RDSHL,  REGHL
    5537/    1DA5 : 02                  	DB	2
    5538/    1DA6 : FD 1D 2C EF         	DW	RDSF,   REGAF
    5539/    1DAA : 01                  	DB	1
    5540/    1DAB :                     
    5541/    1DAB : 02 1E 3C EF         	DW	RDSIX,  REGIX
    5542/    1DAF : 02                  	DB	2
    5543/    1DB0 : 07 1E 3E EF         	DW	RDSIY,  REGIY
    5544/    1DB4 : 02                  	DB	2
    5545/    1DB5 :                     
    5546/    1DB5 : 0C 1E 35 EF         	DW	RDSAX,  REGAFX+1
    5547/    1DB9 : 01                  	DB	1
    5548/    1DBA : 12 1E 36 EF         	DW	RDSBCX, REGBCX
    5549/    1DBE : 02                  	DB	2
    5550/    1DBF : 18 1E 38 EF         	DW	RDSDEX, REGDEX
    5551/    1DC3 : 02                  	DB	2
    5552/    1DC4 : 1E 1E 3A EF         	DW	RDSHLX, REGHLX
    5553/    1DC8 : 02                  	DB	2
    5554/    1DC9 : 24 1E 34 EF         	DW	RDSFX,  REGAFX
    5555/    1DCD : 01                  	DB	1
    5556/    1DCE :                     
    5557/    1DCE : 29 1E 40 EF         	DW	RDSSP,  REGSP
    5558/    1DD2 : 02                  	DB	2
    5559/    1DD3 : 2E 1E 42 EF         	DW	RDSPC,  REGPC
    5560/    1DD7 : 02                  	DB	2
    5561/    1DD8 : 33 1E 44 EF         	DW	RDSI,   REGI
    5562/    1DDC : 01                  	DB	1
    5563/    1DDD : 37 1E 45 EF         	DW	RDSR,   REGR
    5564/    1DE1 : 01                  	DB	1
    5565/    1DE2 :                     
    5566/    1DE2 : 00 00 00 00         	DW	0000H,  0000H
    5567/    1DE6 : 00                  	DB	0
    5568/    1DE7 :                     
    5569/    1DE7 : 41 20 3D 00         RDSA:	DB	"A =",00H
    5570/    1DEB : 20 42 43 20 3D 00   RDSBC:	DB	" BC =",00H
    5571/    1DF1 : 20 44 45 20 3D 00   RDSDE:	DB	" DE =",00H
    5572/    1DF7 : 20 48 4C 20 3D 00   RDSHL:	DB	" HL =",00H
    5573/    1DFD :                     
    5574/    1DFD : 20 46 20 3D 00      RDSF:	DB	" F =",00H
    5575/    1E02 :                     
    5576/    1E02 : =1DH                 RDSF_H	equ	RDSF >> 8
    5577/    1E02 : =0FDH                RDSF_L	equ	RDSF & 0FFh
    5578/    1E02 :                     
    5579/    1E02 :                     
    5580/    1E02 : 20 49 58 3D 00      RDSIX:	DB	" IX=",00H
    5581/    1E07 : 20 49 59 3D 00      RDSIY:	DB	" IY=",00H
    5582/    1E0C : 0D 0A 41 27 3D 00   RDSAX:	DB	CR,LF,"A'=",00H
    5583/    1E12 : 20 42 43 27 3D 00   RDSBCX:	DB	" BC'=",00H
    5584/    1E18 : 20 44 45 27 3D 00   RDSDEX:	DB	" DE'=",00H
    5585/    1E1E : 20 48 4C 27 3D 00   RDSHLX:	DB	" HL'=",00H
    5586/    1E24 :                     
    5587/    1E24 : 20 46 27 3D 00      RDSFX:	DB	" F'=",00H
    5588/    1E29 :                     
    5589/    1E29 : =1EH                 RDSFX_H	equ	RDSFX >> 8
    5590/    1E29 : =24H                 RDSFX_L	equ	RDSFX & 0FFh
    5591/    1E29 :                     
    5592/    1E29 : 20 53 50 3D 00      RDSSP:	DB	" SP=",00H
    5593/    1E2E : 20 50 43 3D 00      RDSPC:	DB	" PC=",00H
    5594/    1E33 : 20 49 3D 00         RDSI:	DB	" I=",00H
    5595/    1E37 : 20 52 3D 00         RDSR:	DB	" R=",00H
    5596/    1E3B :                     
    5597/    1E3B :                     RNTAB:
    5598/    1E3B : 41 0F               	DB	'A',0FH		; "A?"
    5599/    1E3D : 85 1E 00 00         	DW	RNTABA,0
    5600/    1E41 : 42 0F               	DB	'B',0FH		; "B?"
    5601/    1E43 : 93 1E 00 00         	DW	RNTABB,0
    5602/    1E47 : 43 0F               	DB	'C',0FH		; "C?"
    5603/    1E49 : B5 1E 00 00         	DW	RNTABC,0
    5604/    1E4D : 44 0F               	DB	'D',0FH		; "D?"
    5605/    1E4F : C3 1E 00 00         	DW	RNTABD,0
    5606/    1E53 : 45 0F               	DB	'E',0FH		; "E?"
    5607/    1E55 : E5 1E 00 00         	DW	RNTABE,0
    5608/    1E59 : 46 0F               	DB	'F',0FH		; "F?"
    5609/    1E5B : F3 1E 00 00         	DW	RNTABF,0
    5610/    1E5F : 48 0F               	DB	'H',0FH		; "H?"
    5611/    1E61 : 01 1F 00 00         	DW	RNTABH,0
    5612/    1E65 : 49 0F               	DB	'I',0FH		; "I?"
    5613/    1E67 : 31 1F 00 00         	DW	RNTABI,0
    5614/    1E6B : 4C 0F               	DB	'L',0FH		; "L?"
    5615/    1E6D : 23 1F 00 00         	DW	RNTABL,0
    5616/    1E71 : 50 0F               	DB	'P',0FH		; "P?"
    5617/    1E73 : 45 1F 00 00         	DW	RNTABP,0
    5618/    1E77 : 52 01               	DB	'R',1		; "R"
    5619/    1E79 : 45 EF A0 1F         	DW	REGR,RNR
    5620/    1E7D : 53 0F               	DB	'S',0FH		; "S?"
    5621/    1E7F : 4D 1F 00 00         	DW	RNTABS,0
    5622/    1E83 :                     
    5623/    1E83 : 00 00               	DB	00H,0		; End mark
    5624/    1E85 :                     
    5625/    1E85 :                     RNTABA:
    5626/    1E85 : 00 01               	DB	00H,1		; "A"
    5627/    1E87 : 2D EF 55 1F         	DW	REGAF+1,RNA
    5628/    1E8B : 27 01               	DB	27H,1		; "A'"
    5629/    1E8D :                     ;;	DB	'\'',1		; "A'"
    5630/    1E8D : 35 EF 6E 1F         	DW	REGAFX+1,RNAX
    5631/    1E91 :                     
    5632/    1E91 : 00 00               	DB	00H,0
    5633/    1E93 :                     	
    5634/    1E93 :                     RNTABB:
    5635/    1E93 : 00 01               	DB	00H,1		; "B"
    5636/    1E95 : 2F EF 5A 1F         	DW	REGBC+1,RNB
    5637/    1E99 : 27 01               	DB	27H,1		; "B'"
    5638/    1E9B :                     ;;	DB	'\'',1		; "B'"
    5639/    1E9B : 37 EF 75 1F         	DW	REGBCX+1,RNBX
    5640/    1E9F : 43 0F               	DB	'C',0FH		; "BC?"
    5641/    1EA1 : A7 1E 00 00         	DW	RNTABBC,0
    5642/    1EA5 :                     
    5643/    1EA5 : 00 00               	DB	00H,0		; End mark
    5644/    1EA7 :                     
    5645/    1EA7 :                     RNTABBC:
    5646/    1EA7 : 00 02               	DB	00H,2		; "BC"
    5647/    1EA9 : 2E EF 57 1F         	DW	REGBC,RNBC
    5648/    1EAD : 27 02               	DB	27H,2		; "BC'"
    5649/    1EAF :                     ;;	DB	'\'',2		; "BC'"
    5650/    1EAF : 36 EF 71 1F         	DW	REGBCX,RNBCX
    5651/    1EB3 :                     
    5652/    1EB3 : 00 00               	DB	00H,0
    5653/    1EB5 :                     	
    5654/    1EB5 :                     RNTABC:
    5655/    1EB5 : 00 01               	DB	00H,1		; "C"
    5656/    1EB7 : 2E EF 5C 1F         	DW	REGBC,RNC
    5657/    1EBB : 27 01               	DB	27H,1		; "C'"
    5658/    1EBD :                     ;;	DB	'\'',1		; "C'"
    5659/    1EBD : 36 EF 78 1F         	DW	REGBCX,RNCX
    5660/    1EC1 :                     
    5661/    1EC1 : 00 00               	DB	00H,0
    5662/    1EC3 :                     	
    5663/    1EC3 :                     RNTABD:
    5664/    1EC3 : 00 01               	DB	00H,1		; "D"
    5665/    1EC5 : 31 EF 61 1F         	DW	REGDE+1,RND
    5666/    1EC9 : 27 01               	DB	27H,1		; "D'"
    5667/    1ECB :                     ;;	DB	'\'',1		; "D'"
    5668/    1ECB : 39 EF 7F 1F         	DW	REGDEX+1,RNDX
    5669/    1ECF : 45 0F               	DB	'E',0FH		; "DE?"
    5670/    1ED1 : D7 1E 00 00         	DW	RNTABDE,0
    5671/    1ED5 :                     
    5672/    1ED5 : 00 00               	DB	00H,0
    5673/    1ED7 :                     
    5674/    1ED7 :                     RNTABDE:
    5675/    1ED7 : 00 02               	DB	00H,2		; "DE"
    5676/    1ED9 : 30 EF 5E 1F         	DW	REGDE,RNDE
    5677/    1EDD : 27 02               	DB	27H,2		; "DE'"
    5678/    1EDF :                     ;;	DB	'\'',2		; "DE'"
    5679/    1EDF : 38 EF 7B 1F         	DW	REGDEX,RNDEX
    5680/    1EE3 :                     
    5681/    1EE3 : 00 00               	DB	00H,0
    5682/    1EE5 :                     	
    5683/    1EE5 :                     RNTABE:
    5684/    1EE5 : 00 01               	DB	00H,1		; "E"
    5685/    1EE7 : 30 EF 63 1F         	DW	REGDE,RNE
    5686/    1EEB : 27 01               	DB	27H,1		; "E'"
    5687/    1EED :                     ;;	DB	'\'',1		; "E'"
    5688/    1EED : 38 EF 82 1F         	DW	REGDEX,RNEX
    5689/    1EF1 :                     
    5690/    1EF1 : 00 00               	DB	00H,0
    5691/    1EF3 :                     	
    5692/    1EF3 :                     RNTABF:
    5693/    1EF3 : 00 01               	DB	00H,1		; "F"
    5694/    1EF5 : 2C EF 6C 1F         	DW	REGAF,RNF
    5695/    1EF9 : 27 01               	DB	27H,1		; "F'"
    5696/    1EFB :                     ;;	DB	'\'',1		; "F'"
    5697/    1EFB : 34 EF 8F 1F         	DW	REGAFX,RNFX
    5698/    1EFF :                     
    5699/    1EFF : 00 00               	DB	00H,0
    5700/    1F01 :                     	
    5701/    1F01 :                     RNTABH:
    5702/    1F01 : 00 01               	DB	00H,1		; "H"
    5703/    1F03 : 33 EF 68 1F         	DW	REGHL+1,RNH
    5704/    1F07 : 27 01               	DB	27H,1		; "H'"
    5705/    1F09 :                     ;;	DB	'\'',1		; "H'"
    5706/    1F09 : 3B EF 89 1F         	DW	REGHLX+1,RNHX
    5707/    1F0D : 4C 0F               	DB	'L',0FH		; "HL?"
    5708/    1F0F : 15 1F 00 00         	DW	RNTABHL,0
    5709/    1F13 :                     
    5710/    1F13 : 00 00               	DB	00H,0
    5711/    1F15 :                     
    5712/    1F15 :                     RNTABHL:
    5713/    1F15 : 00 02               	DB	00H,2		; "HL"
    5714/    1F17 : 32 EF 65 1F         	DW	REGHL,RNHL
    5715/    1F1B : 27 02               	DB	27H,2		; "HL'"
    5716/    1F1D :                     ;;	DB	'\'',2		; "HL'"
    5717/    1F1D : 3A EF 85 1F         	DW	REGHLX,RNHLX
    5718/    1F21 :                     
    5719/    1F21 : 00 00               	DB	00H,0
    5720/    1F23 :                     	
    5721/    1F23 :                     RNTABL:
    5722/    1F23 : 00 01               	DB	00H,1		; "L"
    5723/    1F25 : 32 EF 6A 1F         	DW	REGHL,RNL
    5724/    1F29 : 27 01               	DB	27H,1		; "L'"
    5725/    1F2B :                     ;;	DB	'\'',1		; "L'"
    5726/    1F2B : 3A EF 8C 1F         	DW	REGHLX,RNLX
    5727/    1F2F :                     
    5728/    1F2F : 00 00               	DB	00H,0
    5729/    1F31 :                     	
    5730/    1F31 :                     RNTABI:
    5731/    1F31 : 00 01               	DB	00H,1		; "I"
    5732/    1F33 : 44 EF 9E 1F         	DW	REGI,RNI
    5733/    1F37 : 58 02               	DB	'X',2		; "IX"
    5734/    1F39 : 3C EF 92 1F         	DW	REGIX,RNIX
    5735/    1F3D : 59 02               	DB	'Y',2		; "IY"
    5736/    1F3F : 3E EF 95 1F         	DW	REGIY,RNIY
    5737/    1F43 :                     	
    5738/    1F43 : 00 00               	DB	00H,0
    5739/    1F45 :                     
    5740/    1F45 :                     RNTABP:
    5741/    1F45 : 43 02               	DB	'C',2		; "PC"
    5742/    1F47 : 42 EF 9B 1F         	DW	REGPC,RNPC
    5743/    1F4B :                     
    5744/    1F4B : 00 00               	DB	00H,0
    5745/    1F4D :                     
    5746/    1F4D :                     RNTABS:
    5747/    1F4D : 50 02               	DB	'P',2		; "SP"
    5748/    1F4F : 40 EF 98 1F         	DW	REGSP,RNSP
    5749/    1F53 :                     
    5750/    1F53 : 00 00               	DB	00H,0
    5751/    1F55 :                     
    5752/    1F55 : 41 00               RNA:	DB	"A",00H
    5753/    1F57 : 42 43 00            RNBC:	DB	"BC",00H
    5754/    1F5A : 42 00               RNB:	DB	"B",00H
    5755/    1F5C : 43 00               RNC:	DB	"C",00H
    5756/    1F5E : 44 45 00            RNDE:	DB	"DE",00H
    5757/    1F61 : 44 00               RND:	DB	"D",00H
    5758/    1F63 : 45 00               RNE:	DB	"E",00H
    5759/    1F65 : 48 4C 00            RNHL:	DB	"HL",00H
    5760/    1F68 : 48 00               RNH:	DB	"H",00H
    5761/    1F6A : 4C 00               RNL:	DB	"L",00H
    5762/    1F6C : 46 00               RNF:	DB	"F",00H
    5763/    1F6E : 41 27 00            RNAX:	DB	"A'",00H
    5764/    1F71 : 42 43 27 00         RNBCX:	DB	"BC'",00H
    5765/    1F75 : 42 27 00            RNBX:	DB	"B'",00H
    5766/    1F78 : 43 27 00            RNCX:	DB	"C'",00H
    5767/    1F7B : 44 45 27 00         RNDEX:	DB	"DE'",00H
    5768/    1F7F : 44 27 00            RNDX:	DB	"D'",00H
    5769/    1F82 : 45 27 00            RNEX:	DB	"E'",00H
    5770/    1F85 : 48 4C 27 00         RNHLX:	DB	"HL'",00H
    5771/    1F89 : 48 27 00            RNHX:	DB	"H'",00H
    5772/    1F8C : 4C 27 00            RNLX:	DB	"L'",00H
    5773/    1F8F : 46 27 00            RNFX:	DB	"F'",00H
    5774/    1F92 : 49 58 00            RNIX:	DB	"IX",00H
    5775/    1F95 : 49 59 00            RNIY:	DB	"IY",00H
    5776/    1F98 : 53 50 00            RNSP:	DB	"SP",00H
    5777/    1F9B : 50 43 00            RNPC:	DB	"PC",00H
    5778/    1F9E : 49 00               RNI:	DB	"I",00H
    5779/    1FA0 : 52 00               RNR:	DB	"R",00H
    5780/    1FA2 :                     
    5781/    1FA2 :                     ;;;
    5782/    1FA2 :                     ;;; Cold start for device dependent
    5783/    1FA2 :                     ;;;
    5784/    1FA2 :                     INIT:
    5785/    1FA2 : C9                  	RET
    5786/    1FA3 :                     
    5787/    1FA3 :                     ;;;
    5788/    1FA3 :                     ;;; Console drivers
    5789/    1FA3 :                     ;;;
    5790/    1FA3 :                     
    5791/    1FA3 :                     CONIN:
    5792/    1FA3 : 3A 01 FF            	LD	A,(UARTCR)
    5793/    1FA6 : CB 47               	BIT	0,A
    5794/    1FA8 : 28 F9               	JR	Z,CONIN
    5795/    1FAA : 3A 00 FF            	LD	A,(UARTDR)
    5796/    1FAD : C9                  	RET
    5797/    1FAE :                     
    5798/    1FAE :                     CONST:
    5799/    1FAE : 3A 01 FF            	LD	A,(UARTCR)
    5800/    1FB1 : CB 47               	BIT	0,A
    5801/    1FB3 : C9                  	RET
    5802/    1FB4 :                     
    5803/    1FB4 :                     CONOUT:
    5804/    1FB4 : F5                  	PUSH	AF
    5805/    1FB5 : 3A 01 FF            PCST1:	LD	A,(UARTCR)
    5806/    1FB8 : CB 4F               	BIT	1,A
    5807/    1FBA : 28 F9               	JR	Z,PCST1
    5808/    1FBC : F1                  	POP	AF
    5809/    1FBD : 32 00 FF            	LD	(UARTDR),A
    5810/    1FC0 : C9                  	RET
    5811/    1FC1 :                     
    5812/    1FC1 : FF FF FF FF FF FF   	db	BASIC_TOP - $ dup(0ffH)
             1FC7 : FF FF FF FF FF FF 
             1FCD : FF FF FF FF FF FF 
             1FD3 : FF FF FF FF FF FF 
             1FD9 : FF FF FF FF FF FF 
             1FDF : FF FF FF FF FF FF 
             1FE5 : FF FF FF FF FF FF 
             1FEB : FF FF FF FF FF FF 
             1FF1 : FF FF FF FF FF FF 
             1FF7 : FF FF FF FF FF FF 
             1FFD : FF FF FF          
    5813/    2000 :                     ;	ORG	BASIC_TOP
    5814/    2000 :                     
    5815/    2000 :                     ;;;
    5816/    2000 :                     ;;; RAM area
    5817/    2000 :                     ;;;
    5818/    2000 :                     
    5819/    2000 :                     	;;
    5820/    2000 :                     	;; Work Area
    5821/    2000 :                     	;;
    5822/    2000 :                     	
    5823/    EF00 :                     	ORG	WORK_B
    5824/    EF00 :                     
    5825/    EF00 : =>FALSE              	IF	BACKDOOR
    5826/    EF00 :                     stealRST08:	ds	2	; hacking RST 08H, set jump address
    5827/    EF00 :                     stealRST10:	ds	2	; hacking RST 10H, set jump address
    5828/    EF00 :                     stealRST18:	ds	2	; hacking RST 18H, set jump address
    5829/    EF00 :                     stealRST20:	ds	2	; hacking RST 20H, set jump address
    5830/    EF00 :                     stealRST28:	ds	2	; hacking RST 28H, set jump address
    5831/    EF00 :                     stealRST30:	ds	2	; hacking RST 30H, set jump address
    5832/    EF00 :                     stealRST38:	ds	2	; hacking RST 38H, set jump address
    5833/    EF00 :                     save_hl:	ds	2
    5834/    EF00 : [5825]               	ENDIF
    5835/    EF00 :                     	
    5836/    EF00 :                     INBUF:	DS	BUFLEN	; Line input buffer
    5837/    EF20 :                     DSADDR:	DS	2	; Dump start address
    5838/    EF22 :                     DEADDR:	DS	2	; Dump end address
    5839/    EF24 :                     DSTATE:	DS	1	; Dump state
    5840/    EF25 :                     GADDR:	DS	2	; Go address
    5841/    EF27 :                     SADDR:	DS	2	; Set address
    5842/    EF29 :                     HEXMOD:	DS	1	; HEX file mode
    5843/    EF2A :                     RECTYP:	DS	1	; Record type
    5844/    EF2B :                     SIZE:	DS	1	; I/O Size 00H,'W','S'
    5845/    EF2C :                     
    5846/    EF2C :                     REG_B:	
    5847/    EF2C :                     REGAF:	DS	2
    5848/    EF2E :                     REGBC:	DS	2
    5849/    EF30 :                     REGDE:	DS	2
    5850/    EF32 :                     REGHL:	DS	2
    5851/    EF34 :                     REGAFX:	DS	2		; Register AF'
    5852/    EF36 :                     REGBCX:	DS	2
    5853/    EF38 :                     REGDEX:	DS	2
    5854/    EF3A :                     REGHLX:	DS	2		; Register HL'
    5855/    EF3C :                     REGIX:	DS	2
    5856/    EF3E :                     REGIY:	DS	2
    5857/    EF40 :                     REGSP:	DS	2
    5858/    EF42 :                     REGPC:	DS	2
    5859/    EF44 :                     REGI:	DS	1
    5860/    EF45 :                     REGR:	DS	1
    5861/    EF46 :                     REG_E:
    5862/    EF46 :                     
    5863/    EF46 : =>TRUE               	IF RAM12K
    5864/    EF46 :                     ; stop watch timer
    5865/    EF46 :                     
    5866/    EF46 :                     c16b:	ds	2	; copy of TIMER0_CNT
    5867/    EF48 :                     secb:	ds	2	; copy of TIMER0_SCTT
    5868/    EF4A :                     msecb:	ds	2
    5869/    EF4C : [5863]               	ENDIF
    5870/    EF4C :                     
    5871/    EF4C :                     ; DIV 16 /16 buffer
    5872/    EF4C :                     DIV16_NA:	ds	2
    5873/    EF4E :                     DIV16_NB:	ds	2
    5874/    EF50 :                     DIV16_NC:	DS	2
    5875/    EF52 :                     DIV16_ND:	DS	2
    5876/    EF54 :                     
    5877/    EF54 :                     ; go command temp start address
    5878/    EF54 :                     goTmp:		ds	2
    5879/    EF56 :                     
    5880/    EF56 :                     ; trace mode switch
    5881/    EF56 :                     TP_mode:	ds	1	; N: display on, F: display off
    5882/    EF57 :                     TM_mode:	ds	1	; 'S':skip call, 'I':trace CALL IN
    5883/    EF58 :                     TC_cnt:		ds	2	; numbers of step
    5884/    EF5A :                     tmpT:		ds	2	; save temp buffer
    5885/    EF5C :                     fever_t:	ds	1	; flag trace forever
    5886/    EF5D :                     
    5887/    EF5D :                     ; break, trace point work area
    5888/    EF5D : =0EF5DH              dbg_wtop	equ	$
    5889/    EF5D :                     tpt1_f:		ds	1
    5890/    EF5E :                     tpt1_op:	ds	1	; save trace point1 opcode
    5891/    EF5F :                     tpt1_adr:	ds	2
    5892/    EF61 :                     tpt2_f:		ds	1
    5893/    EF62 :                     tpt2_op:	ds	1	; save trace point2 opcode (for branch)
    5894/    EF63 :                     tpt2_adr:	ds	2
    5895/    EF65 :                     
    5896/    EF65 :                     ; break point work area
    5897/    EF65 :                     bpt1_f:		ds	1
    5898/    EF66 :                     bpt1_op:	ds	1
    5899/    EF67 :                     bpt1_adr:	ds	2
    5900/    EF69 :                     bpt2_f:		ds	1
    5901/    EF6A :                     bpt2_op:	ds	1
    5902/    EF6B :                     bpt2_adr:	ds	2
    5903/    EF6D :                     
    5904/    EF6D :                     tmpb_f:		ds	1
    5905/    EF6E :                     tmpb_op:	ds	1
    5906/    EF6F :                     tmpb_adr:	ds	2
    5907/    EF71 : =0EF71H              dbg_wend	equ	$
    5908/    EF71 :                     
    5909/    EF71 :                     F_bit:		ds	F_bitSize+1
    5910/    EF7A :                     
    5911/    EF7A :                     ;::::::::::::::::::::::::::
    5912/    EF7A :                     ; DISASEM work area
    5913/    EF7A :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;
    5914/    EF7A :                     dasm_ed:	ds	2
    5915/    EF7C :                     dasm_stpf:	ds	1
    5916/    EF7D :                     dasm_adr:	ds	2
    5917/    EF7F :                     reg_xy:		ds	2	; RNIX or RNIY
    5918/    EF81 :                     xy_srtp		ds	2	; strings pointer
    5919/    EF83 :                     
    5920/    EF83 :                     mc_Size:	ds	1
    5921/    EF84 :                     
    5922/    EF84 :                     ;  DidAsm string buffer
    5923/    EF84 :                     ; total 42 bytes
    5924/    EF84 :                     dasm_bs:
    5925/    EF84 :                     adr_mc_buf:	ds	19
    5926/    EF97 :                     dasm_OpcStr:	ds	8
    5927/    EF9F :                     dasm_OprStr:	ds	15
    5928/    EFAE :                     dasm_be:
    5929/    EFAE :                     
    5930/    EFAE :                     	END
 AS V1.42 Beta [Bld 227] - Source File emuz80mon_RevB02.asm - Page 2 - 10/17/2022 9:42:47


  Symbol Table (* = unused):
  --------------------------

 ACS_KN2K :                    0ACF C |  ADCSTR :                      1151 C |
 ADDIXRP_TBL :                 12E2 C |  ADDIYRP_TBL :                 12EA C |
 ADDSTR :                      114D C |  ADD_OPSTR :                   1007 C |
 ADD_RP_E :                    10B2 C |  ADD_RP_S :                    10AE C |
 ADJ_TIM1 :                    1A49 C |  ADR_MC_BUF :                 0EF84 C |
 ANDSTR :                      115D C |  APENDTBL :                     15C C |
 API00 :                       188D C |  API01 :                       1890 C |
 API06 :                       18D2 C |  APITBL :                      1863 C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
 A_COLON_SP :                  105A C |  A_CRLF :                      1025 C |
 BACKDOOR :                       0 - |  BACKTOMON :                   1997 C |
 BASIC_CST :                   2000 - |  BASIC_TOP :                   2000 - |
 BASIC_WST :                   2003 - |  BC_PLUS_DE :                   1FA C |
 BITSTR :                      11D0 C |  BPT1_ADR :                   0EF67 C |
 BPT1_F :                     0EF65 C |  BPT1_OP :                    0EF66 C |
 BPT2_ADR :                   0EF6B C |  BPT2_F :                     0EF69 C |
 BPT2_OP :                    0EF6A C |  BP_CHK1 :                     1935 C |
 BP_CHK_END :                  1962 C |  BP_CLR :                       279 C |
 BP_CLR1 :                      28F C |  BP_LOT :                       2A0 C |
 BP_MSG1 :                      2B6 C |  BP_MSG2 :                      2BA C |
 BRK_CMD :                      222 C |  BS :                             8 - |
 BUFLEN :                        20 - |  B_ACLR :                       294 C |
 B_LIST :                       202 C |  B_LIST1 :                      210 C |
 B_MSG_OUT :                    2BD C |  C16B :                       0EF46 C |
 CALC_DIS_STEP :                7E2 C |  CALLSTR :                     113C C |
*CASESENSITIVE :                  0 - |  CC0 :                         124C C |
 CC1 :                         124F C |  CC2 :                         1251 C |
 CC3 :                         1254 C |  CC4 :                         1256 C |
 CC5 :                         1259 C |  CC6 :                         125C C |
 CC7 :                         125E C |  CCFSTR :                      11A5 C |
 CC_NNNN :                     0BB0 C |  CC_OPR :                      1270 C |
 CHG_MSEC :                    1A8A C |  CHKERR :                       277 C |
 CHK_0CBH :                    0BCD C |  CHK_0DD3OP :                  0D1A C |
 CHK_0DD4OP :                  0D99 C |  CHK_0DDH :                    0C93 C |
 CHK_0DDH_1 :                  0CA6 C |  CHK_0EDH :                    0E39 C |
 CHK_0FDH :                    0F36 C |  CHK_1MC_BNH :                 0A2C C |
 CHK_2MC :                     0A79 C |  CHK_3MC :                     0B29 C |
 CHK_ADC :                      8F2 C |  CHK_ADD :                      8E6 C |
 CHK_ADD_RP :                   9AB C |  CHK_AND :                      91C C |
 CHK_BP :                      1926 C |  CHK_CALCC :                   0BBE C |
 CHK_CALLN4 :                  0B97 C |  CHK_CP :                       940 C |
 CHK_DD_CB :                   0DE5 C |  CHK_DEC :                      965 C |
 CHK_DEC_RP :                   992 C |  CHK_DI1 :                      78A C |
 CHK_DJNZ :                    0AF4 C |  CHK_EX :                       9FB C |
 CHK_FEVRE :                    3CB C |  CHK_INC :                      94D C |
 CHK_INC_RP :                   979 C |  CHK_JPCC :                    0BA3 C |
 CHK_JPN4 :                    0B8B C |  CHK_JRCC :                    0B0D C |
 CHK_JRNN :                    0AFD C |  CHK_LD :                       877 C |
 CHK_LD1 :                      8B5 C |  CHK_LD16 :                    0B4A C |
 CHK_LOGOP2 :                  0AA0 C |  CHK_NTRACE :                  197A C |
 CHK_OR :                       934 C |  CHK_POP_RP :                   9C9 C |
 CHK_PUSH_RP :                  9E2 C |  CHK_RET :                     0A3F C |
 CHK_RST :                     0A58 C |  CHK_SBC :                      90D C |
 CHK_STPDI :                    7A9 C |  CHK_SUB :                      901 C |
 CHK_XOR :                      928 C |  CLCC_TBLE :                    59B C |
 CLCC_TBLS :                    593 C |  CLR_CRT :                     179A C |
 CLR_TIM :                     1A6B C |  CMD_HLP :                     1B64 C |
 COMMAND_HLP :                  106 C | *COMPMODE :                       0 - |
 CONIN :                       1FA3 C |  CONOUT :                      1FB4 C |
 CONST :                       1FAE C | *CONSTPI :        3.141592653589793 - |
 CPDRSTR :                     1222 C |  CPDSTR :                      11FC C |
 CPIRSTR :                     120E C |  CPISTR :                      11EB C |
 CPLSTR :                      119D C |  CPSTR :                       1168 C |
 CPSTR_CRLF :                  1033 C |  CR :                            0D - |
 CRLF :                        1790 C |  CSTART :                        40 C |
 D16_END :                     1AFD C |  D16_MINUS :                   1AF5 C |
 D16_MINUS_AFTER :             1AF9 C |  D16_MINUS_BEFORE :            1AF4 C |
 D16_PLUS :                    1AE9 C |  D16_PLUS_AFTER :              1AED C |
 DAASTR :                      1199 C |  DASM_ADR :                   0EF7D C |
 DASM_BE :                    0EFAE C |  DASM_BS :                    0EF84 C |
 DASM_ED :                    0EF7A C |  DASM_OPCSTR :                0EF97 C |
 DASM_OPRSTR :                0EF9F C |  DASM_STPF :                  0EF7C C |
*DATE :                "10/17/2022" - |  DBG_WEND :                   0EF71 - |
 DBG_WINI :                      7E C |  DBG_WTOP :                   0EF5D - |
 DDLOGTBL :                    12F2 C |  DD_21 :                       0DBF C |
 DD_22 :                       0DCC C |  DD_2A :                       0DD5 C |
 DD_2A1 :                      0DD9 C |  DD_2NDTBL :                    656 C |
 DD_2NDTBL1 :                   65A C |  DD_2NDTBL2 :                   65E C |
 DD_2NDTBL_E :                  660 C |  DD_2OPT :                     12DA C |
 DD_BIT :                      0E29 C |  DD_BIT_OPTBL :                10D6 C |
 DD_BIT_OPTBLE :               10EE C |  DD_BSR :                      0E20 C |
 DD_CB_NN_XX :                 0E05 C |  DD_LD :                       0D59 C |
 DD_LD1 :                      0D71 C |  DD_LDTBL :                    1300 C |
 DD_LD_TBL :                   10BA C |  DD_LD_TBLE :                  10C8 C |
 DD_LOG_TBL :                  10C8 C |  DD_LOG_TBLE :                 10CF C |
 DD_MIX :                      0D84 C |  DD_MIX1 :                     0D8F C |
 DD_MIX2 :                     0D94 C |  DD_MIX3 :                     0D87 C |
 DD_MIX4 :                     0D7D C |  DD_RES :                      0E31 C |
 DD_RT_STR :                   1338 C |  DD_RT_TBLE :                  10D6 C |
 DD_RT_TBLES :                 10CF C |  DEADDR :                     0EF22 C |
 DECSTR :                      116F C |  DEC_OPCDTBLE :                10A6 C |
 DEC_OPCDTBLS :                109E C |  DEC_RP_E :                    10AE C |
 DEC_RP_S :                    10AA C |  DEC_STR :                     1AA6 C |
 DEL :                           7F - |  DIP_TM :                       30E C |
 DISASM_GO :                    7B7 C |  DISASSEMBLE :                  764 C |
 DISREGTBL :                   1260 C |  DISTR :                       11A9 C |
 DIS_ANALYSIS :                 846 C |  DIS_CALL :                    19D4 C |
 DIS_GO1 :                      7C2 C | *DIV16 :                       1B00 C |
 DIV16_8 :                     1ADC C |  DIV16_NA :                   0EF4C C |
 DIV16_NB :                   0EF4E C |  DIV16_NC :                   0EF50 C |
 DIV16_ND :                   0EF52 C |  DIV16_X0 :                    1B3D C |
 DIV16_X1 :                    1B48 C |  DIV16_X2 :                    1B16 C |
 DI_NXT :                       772 C |  DJNZSTR :                     1137 C |
 DMKST1 :                      101B C |  DMKST2 :                      101D C |
 DMKSTR0 :                     1011 C |  DONOT_TRACE :                 13A9 C |
 DP0 :                          67D C |  DP1 :                          696 C |
 DPB :                          718 C |  DPB0 :                         72F C |
 DPB1 :                         73E C |  DPB2 :                         743 C |
 DPL :                          6DE C |  DPL0 :                         6EF C |
 DPL1 :                         6FF C |  DPL2 :                         70E C |
 DPL3 :                         713 C |  DPM :                          6AC C |
 DPM0 :                         6B7 C |  DPM1 :                         6D5 C |
 DSADDR :                     0EF20 C |  DSEP0 :                       1D70 C |
 DSEP1 :                       1D73 C |  DSTATE :                     0EF24 C |
 DUMP :                         660 C |  ED_4MC :                      0F17 C |
 ED_ADC :                      0EC5 C |  ED_IM :                       0EF6 C |
 ED_LD_AI :                    0EDF C |  ED_LD_AR :                    0ED6 C |
 ED_LD_IA :                    0EF1 C |  ED_LD_RA :                    0EE8 C |
 ED_LD_RA1 :                   0EEB C |  ED_NOOPR :                    130E C |
 ED_NO_OPR :                   0F09 C |  ED_OP_TBL :                   10EE C |
 ED_OP_TBLE :                  1126 C |  ED_OUT :                      0E94 C |
 ED_OUT1 :                     0EA8 C |  ED_RP_STR :                   12CE C |
 ED_SBC :                      0EAF C |  ED_SBC1 :                     0EBE C |
 EISTR :                       11AC C |  END_DEC :                     1AD5 C |
 END_INS_TC :                   503 C |  ENTRY :                         40 - |
 ERR :                          0FE C |  ERRMSG :                      1D68 C |
 ERR_TRACE_SEQ :                506 C |  ER_OPMSG :                    123F C |
 ESC_CRT_CLR :                 17A3 C |  EXP_MSB :                      525 C |
 EXSTR :                       117C C |  EXXSTR :                      117F C |
 EX_AF_AF :                    0A16 C |  EX_SP_HL :                    0A24 C |
*E_CSTART :                       0 C | *E_WSTART :                       3 C |
*FALSE :                          0 - |  FEVER_T :                    0EF5C C |
 FLG_LOOP :                    1714 C |  FLG_NXT :                     1723 C |
 FLG_OFF :                     171F C | *FULLPMMU :                       1 - |
 F_BIT :                      0EF71 C |  F_BITSIZE :                      8 - |
 F_BIT_OFF :                   173F C |  F_BIT_ON :                    1737 C |
 G0 :                          1389 C |  GADDR :                      0EF25 C |
 GETLIN :                      17A7 C |  GET_BI :                       1D4 C |
 GET_DI1 :                      783 C |  GET_DISASM_ST :                7F0 C |
 GET_N4 :                      0B72 C |  GET_N4CRLF :                  0B44 C |
 GET_NNNN :                    0F75 C |  GET_NUM :                      1B6 C |
 GET_NUM0 :                     1B9 C |  GET_RSTG_OFF :                0F89 C |
 GET_R_NUM :                    86E C |  GET_STRBUFPOINT :             0F8C C |
 GL0 :                         17AA C |  GL1 :                         17DE C |
 GLB :                         17E2 C |  GLE :                         17F9 C |
 GO :                          1346 C |  GO1 :                         1383 C |
 GOSTMP :                      135A C |  GOTMP :                      0EF54 C |
 G_STPADR :                    1364 C |  H2SA_1 :                      0FE1 C |
 H2S_N1 :                      0FF7 C |  H2S_N2 :                      0FFB C |
 H4SA_1 :                      0FD0 C |  H4SA_2 :                      0FD3 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HEX2STR :                     0FEE C |
 HEX2STR_ASM :                 0FD8 C |  HEX4STR :                     0FE6 C |
 HEX4STR_ASM :                 0FC7 C |  HEXIN :                       176C C |
 HEXMOD :                     0EF29 C |  HEXOUT1 :                     175E C |
 HEXOUT2 :                     1755 C |  HEXOUT4 :                     1750 C |
 HI0 :                         1774 C |  HI1 :                         178B C |
 HIR :                         178E C |  HLTSTR :                      1148 C |
 HL_CRLF :                     1030 C |  IB1 :                          536 C |
 IB2 :                          535 C |  IB3 :                          534 C |
 ICKA1 :                        56F C |  ICKA_END :                     57A C |
 IHEMSG :                      1D4E C |  IHEXER :                      1D77 C |
 IKK_1 :                       1073 C |  IMSTR :                       11DC C |
 INADR_CHK_AND_WRT :            554 C |  INBUF :                      0EF00 C |
 INCSTR :                      116B C |  INC_DEC :                      95F C |
 INC_DEC_ADDRP :               1288 C |  INC_OPCDTBLE :                109E C |
 INC_OPCDTBLS :                1096 C |  INC_RP_E :                    10AA C |
 INC_RP_S :                    10A6 C |  INDRSTR :                     1227 C |
 INDSTR :                      1200 C |  INIRSTR :                     1213 C |
 INISTR :                      11EF C | *INIT :                        1FA2 C |
 INS2 :                         5A3 C |  INSBRK_1OP :                   527 C |
 INSBRK_2OP :                   52C C |  INSBRK_3OP :                   531 C |
 INSBRK_BRP :                   53B C |  INSBRK_SP :                    547 C |
 INSPOSTSTR :                  1036 C |  INSTC1 :                       457 C |
*INSTC2 :                       3E5 C |  INSTR :                       11B3 C |
*INSUPMODE :                      0 - |  INS_EX_OPC :                  0A10 C |
 INS_HLKK :                    0B7C C |  INS_HL_OPR :                  0A0D C |
 INS_IXRP :                    0D05 C |  INS_JPIX :                    0CDB C |
*INS_JPIX1 :                   0CDF C |  INS_KAKKOL :                  106D C |
 INS_KAKKOR :                  1071 C |  INS_KKA :                     0B66 C |
 INS_KKHL :                    0B60 C |  INS_KMR :                     1082 C |
 INS_KN2K :                    0AD8 C |  INS_KN4KCS :                  0FA1 C |
 INS_KSPKIX :                  0CED C |  INS_MISR :                    107E C |
 INS_N2CRLF :                  0AC5 C |  INS_PLSR :                    107A C |
 INS_RSTG :                    0C78 C |  INS_SPCR :                    1076 C |
 INS_SPIX :                    0CFC C |  IO_B :                       0F000 - |
 IR0 :                           5B C |  IR00 :                          72 C |
 IX_CRLF :                     102A C |  JPCC_TBLE :                    593 C |
 JPCC_TBLS :                    58B C |  JPHL :                         49D C |
 JPSTR :                       1131 C |  JRCC_OPR1 :                   1280 C |
 JRCC_TBLE :                    58B C |  JRCC_TBLS :                    586 C |
 JRCC_TBLS1 :                   587 C |  JRSTR :                       1134 C |
 JR_N4CRLF :                   0B04 C |  KCKSTR :                      1243 C |
 KIXYPNK_CRLF :                0F50 C |  KIXYPNK_CS :                  0F47 C |
 KN2K :                        0AE4 C |  KN4HK :                       0B6C C |
 KN4KCRLF :                    0B82 C |  KRNHL :                       1247 C |
 LANCH1 :                       17C C |  LANCH10 :                      1B4 C |
 LANCH11 :                      1B4 C |  LANCH12 :                      1B4 C |
 LANCH13 :                      1B4 C |  LANCH14 :                      1B4 C |
 LANCH15 :                      1B4 C |  LANCH16 :                      1B4 C |
 LANCH2 :                       198 C |  LANCH3 :                       1B4 C |
 LANCH4 :                       1B4 C |  LANCH5 :                       1B4 C |
 LANCH6 :                       1B4 C |  LANCH7 :                       1B4 C |
 LANCH8 :                       1B4 C |  LANCH9 :                       1B4 C |
 LAP_TIM :                     1A2D C |  LAUNCHER :                     10E C |
 LD1OP :                        8C8 C |  LDDRSTR :                     121D C |
 LDDSTR :                      11F8 C |  LDIRSTR :                     1209 C |
 LDISTR :                      11E7 C |  LDSTR :                       1145 C |
 LD_A_KBCK :                    894 C |  LD_A_KDEK :                    8A2 C |
 LD_A_KXXK :                    897 C |  LD_KBCK_A :                    8A7 C |
 LD_KDEK_A :                    8B0 C |  LD_KXXK_A :                    8AA C |
 LD_R_NN_E :                    644 C |  LD_R_NN_S :                    63C C |
 LF :                            0A - |  LH0 :                         14A0 C |
*LH1 :                         14A7 C |  LH2 :                         14AB C |
 LH3 :                         14B3 C |  LHI0 :                        14B8 C |
 LHI1 :                        14DB C |  LHI2 :                        14ED C |
 LHI20 :                       14EC C |  LHI3 :                        14EF C |
 LHIE :                        14FF C |  LHS0 :                        1508 C |
 LHS1 :                        1525 C |  LHS2 :                        1537 C |
 LHS20 :                       1538 C |  LHS3 :                        153A C |
 LHSE :                        1554 C |  LHSR :                        155A C |
*LISTON :                         1 - |  LOADH :                       1483 C |
 LOGOP2STR :                   12B2 C |  LOGOP3STR :                   12C6 C |
 LOG_OP_E :                     64E C |  LOG_OP_S :                     644 C |
 LOOP_DEC :                    1ABC C |  LOOP_M8 :                     1B57 C |
 LST_END :                      159 C |  LST_PRG :                      13E C |
 LST_PRG1 :                     141 C |  L_B2 :                         2B0 C |
*MACEXP :                         7 - |  MAS_1 :                        821 C |
 MAS_2 :                        832 C |  MAS_3 :                        83E C |
 MC_SIZE :                    0EF83 C |  MEET_DD :                      5CE C |
 MEET_ED :                      5F0 C |  MEET_OP1 :                     60C C |
 MEET_OP2 :                     617 C |  MEET_OP3 :                     622 C |
 MEET_OP4 :                     62D C |  MKOPCSTR :                    100A C |
 MKREL_STR :                   0FB9 C |  MK_2NDOPR :                    8D4 C |
 MK_2NDOPR1 :                   8DE C |  MK_ADR_STR :                   80B C |
 MK_BITR :                     0C5B C |  MK_BITR_STR :                 0C73 C |
 MK_KIXPNK :                   0D4F C |  MK_KIXYPNK :                  0F56 C |
*MK_KIYPNK :                   0D53 C |  MK_KN4K :                     0FB0 C |
 MK_KRK :                      1044 C |  MK_KRKCS :                    104C C |
 MK_KRK_1 :                    1041 C |  MK_N2CRLF :                   0F95 C |
 MK_N4CRLF :                   0F9B C |  MK_RCS :                      105D C |
 MK_RESR :                     0C64 C |  MK_RLCR :                     0C1C C |
 MK_RLR :                      0C2E C |  MK_RRCR :                     0C25 C |
 MK_RRR :                      0C37 C |  MK_SLAR :                     0C40 C |
 MK_SRAR :                     0C49 C |  MK_SRLR :                     0C52 C |
 MK_STR :                      0F80 C | *MOMCPU :                        80 - |
*MOMCPUNAME :                 "Z80" - |  MSECB :                      0EF4A C |
 MUL_10 :                       1E3 C |  MUL_8 :                       1B52 C |
 NEGSTR :                      11D8 C | *NESTMAX :                      100 - |
 NEXT_BC1 :                     402 C |  NEXT_BC10 :                    4DC C |
 NEXT_BC11 :                    4E9 C |  NEXT_BC111 :                   4FE C |
 NEXT_BC2 :                     425 C |  NEXT_BC21 :                    433 C |
 NEXT_BC22 :                    44E C | *NEXT_BC221 :                   44C C |
 NEXT_BC222 :                   446 C |  NEXT_BC3 :                     466 C |
 NEXT_BC4 :                     47B C |  NEXT_BC5 :                     492 C |
 NEXT_BC6 :                     489 C |  NEXT_BC7 :                     4A6 C |
 NEXT_BC8 :                     4B5 C |  NEXT_BC9 :                     4C8 C |
 NOPSTR :                      1183 C | *NO_OPERATE :                  1862 C |
 NO_RAM_AREA :                  57C C |  NO_RST38_MSG :                1969 C |
 NUMPLUS :                     0F70 C |  OPNMSG :                      1D0E C |
 OP_ERR :                      0C6D C |  ORSTR :                       1165 C |
 OTDRSTR :                     122C C |  OTH_1OP_E :                   1096 C |
 OTH_1OP_S :                   1089 C |  OTH_1OP_TBL :                 1298 C |
 OTIRSTR :                     1218 C |  OUTDSTR :                     1204 C |
 OUTISTR :                     11F3 C |  OUTSTR :                      11AF C |
*PADDING :                        1 - |  PCST1 :                       1FB5 C |
 POPSTR :                      1173 C |  POP_PUSHRP :                  1290 C |
 POP_RP_E :                    10B6 C |  POP_RP_S :                    10B2 C |
 PROMPT :                      1D4B C |  PUSHSTR :                     1177 C |
 PUSH_RP_E :                   10BA C |  PUSH_RP_S :                   10B6 C |
 RAM12K :                         1 - |  RAM4K :                          0 - |
 RAM8K :                          0 - |  RAM_B :                      0C000 - |
*RAM_E :                      0EFFF - |  RD0 :                         16BE C |
 RD1 :                         16F6 C |  RD10 :                        16E4 C |
 RD101 :                       16DA C |  RD20 :                        1703 C |
 RDHEX :                       1811 C |  RDSA :                        1DE7 C |
 RDSAX :                       1E0C C |  RDSBC :                       1DEB C |
 RDSBCX :                      1E12 C |  RDSDE :                       1DF1 C |
 RDSDEX :                      1E18 C |  RDSF :                        1DFD C |
 RDSFX :                       1E24 C |  RDSFX_H :                       1E - |
 RDSFX_L :                       24 - |  RDSF_H :                        1D - |
 RDSF_L :                       0FD - |  RDSHL :                       1DF7 C |
 RDSHLX :                      1E1E C |  RDSI :                        1E33 C |
 RDSIX :                       1E02 C |  RDSIY :                       1E07 C |
 RDSPC :                       1E2E C |  RDSR :                        1E37 C |
 RDSSP :                       1E29 C |  RDTAB :                       1D92 C |
 RDUMP :                       16BB C |  RD_SEC :                      1A4E C |
 RECTYP :                     0EF2A C |  REG :                         1635 C |
 REGAF :                      0EF2C C |  REGAFX :                     0EF34 C |
 REGBC :                      0EF2E C |  REGBCX :                     0EF36 C |
 REGDE :                      0EF30 C |  REGDEX :                     0EF38 C |
 REGHL :                      0EF32 C |  REGHLX :                     0EF3A C |
 REGI :                       0EF44 C |  REGIX :                      0EF3C C |
 REGIY :                      0EF3E C |  REGPC :                      0EF42 C |
 REGR :                       0EF45 C |  REGSP :                      0EF40 C |
 REG_B :                      0EF2C C |  REG_E :                      0EF46 C |
 REG_XY :                     0EF7F C | *RELAXED :                        0 - |
 REL_ADR_C :                    51A C |  REPEAT_TRACE :                19B8 C |
 RESSTR :                      11D4 C |  RETCC_TBLE :                   586 C |
 RETCC_TBLS :                   57E C |  RETISTR :                     1231 C |
 RETNSTR :                     1236 C |  RETSTR :                      112D C |
 RG0 :                         1642 C |  RG1 :                         1646 C |
 RG2 :                         1656 C |  RG3 :                         1665 C |
 RG4 :                         168A C |  RG5 :                         1696 C |
 RG6 :                         16B2 C |  RG7 :                         16B5 C |
 RGE :                         16B8 C |  RGR :                         16B5 C |
 RH0 :                         1816 C |  RH1 :                         1829 C |
 RHE :                         1847 C |  RHE1 :                        1851 C |
 RLASTR :                      1191 C |  RLCASTR :                     1187 C |
 RLCSTR :                      11B6 C |  RLDSTR :                      11E3 C |
 RLSTR :                       11BE C |  RNA :                         1F55 C |
 RNAF :                        1126 C |  RNAFX :                       1129 C |
 RNAX :                        1F6E C |  RNB :                         1F5A C |
 RNBC :                        1F57 C |  RNBCX :                       1F71 C |
 RNBX :                        1F75 C |  RNC :                         1F5C C |
 RNCX :                        1F78 C |  RND :                         1F61 C |
 RNDE :                        1F5E C |  RNDEX :                       1F7B C |
 RNDX :                        1F7F C |  RNE :                         1F63 C |
 RNEX :                        1F82 C |  RNF :                         1F6C C |
 RNFX :                        1F8F C |  RNH :                         1F68 C |
 RNHL :                        1F65 C |  RNHLX :                       1F85 C |
 RNHX :                        1F89 C |  RNI :                         1F9E C |
 RNIX :                        1F92 C |  RNIY :                        1F95 C |
 RNL :                         1F6A C |  RNLX :                        1F8C C |
 RNPC :                        1F9B C |  RNR :                         1FA0 C |
 RNSP :                        1F98 C |  RNTAB :                       1E3B C |
 RNTABA :                      1E85 C |  RNTABB :                      1E93 C |
 RNTABBC :                     1EA7 C |  RNTABC :                      1EB5 C |
 RNTABD :                      1EC3 C |  RNTABDE :                     1ED7 C |
 RNTABE :                      1EE5 C |  RNTABF :                      1EF3 C |
 RNTABH :                      1F01 C |  RNTABHL :                     1F15 C |
 RNTABI :                      1F31 C |  RNTABL :                      1F23 C |
 RNTABP :                      1F45 C |  RNTABS :                      1F4D C |
 ROM_B :                          0 - |  RRASTR :                      1195 C |
 RRCASTR :                     118C C |  RRCSTR :                      11BA C |
 RRDSTR :                      11DF C |  RRSTR :                       11C1 C |
 RST30H_IN :                   1853 C |  RST38H_IN :                   18D4 C |
 RST38MSG :                    19ED C |  RSTR_BPT :                    19CD C |
 RSTR_TPT :                    19C1 C |  RSTSTR :                      1141 C |
 RST_TBLE :                     5A3 C |  RST_TBLS :                     59B C |
 SADDR :                      0EF27 C |  SAVEH :                       155D C |
 SBCSTR :                      1159 C |  SCFSTR :                      11A1 C |
 SECB :                       0EF48 C |  SETBPADR :                     260 C |
 SETM :                        140D C |  SETSTR :                      123B C |
 SET_BITNO :                   0C85 C |  SET_BP :                      1401 C |
 SET_BP1 :                      23E C |  SET_TM :                       325 C |
 SH0 :                         1567 C |  SH1 :                         156B C |
 SH2 :                         1593 C |  SH3 :                         159B C |
 SH4 :                         15B2 C |  SHE :                         1590 C |
 SHEMSG :                      1D5B C |  SHL0 :                        15C6 C |
 SHL00 :                       15BB C |  SHLI0 :                       15EF C |
 SHLS :                        1603 C |  SHLS0 :                       1622 C |
*SIZE :                       0EF2B C |  SKIPSP :                      1801 C |
 SKP_RMSG :                    198B C |  SKP_TBP :                     13C4 C |
 SLASTR :                      11C4 C |  SM0 :                         1427 C |
 SM1 :                         1428 C |  SM2 :                         144E C |
 SM3 :                         1459 C |  SM4 :                         1464 C |
 SRASTR :                      11C8 C |  SRECER :                      1D85 C |
 SRLSTR :                      11CC C |  STACK :                      0EEC0 - |
 STACKM :                     0EF00 - | *START :                          0 C |
 START_TIM :                   1A1E C |  STOPW :                       1A09 C |
 STOP_TIM :                    1A27 C |  STPBRK_MSG :                  19F7 C |
 STP_CHK :                      3AE C |  STROUT :                      1747 C |
 ST_COPY :                     1065 C |  ST_MUL8 :                     1B5B C |
 SUBSTR :                      1155 C |  SV_NNKR :                     0F6A C |
 TADR_CHK :                     39D C |  TC_CNT :                     0EF58 C |
 TERR_MSG :                     510 C |  THREE_OPTBL :                  64E C |
 THREE_OPTBLE :                 652 C |  THREE_OPTBL_E :                656 C |
 TIM0_CTL0 :                  0F800 - | *TIM0_CTL1 :                  0F801 - |
*TIME :                   "9:42:47" - |  TIMER0_CNTH :                0F811 - |
 TIMER0_CNTL :                0F810 - |  TIMER0_INITC :                87E1 - |
 TIMER0_SCTH :                0F821 - |  TIMER0_SCTL :                0F820 - |
 TMPB_ADR :                   0EF6F C |  TMPB_F :                     0EF6D C |
 TMPB_OP :                    0EF6E C |  TMPT :                       0EF5A C |
 TM_MODE :                    0EF57 C |  TM_MSG_0 :                     336 C |
 TM_MSG_I :                     345 C |  TM_MSG_S :                     34B C |
 TPT1_ADR :                   0EF5F C |  TPT1_F :                     0EF5D C |
 TPT1_OP :                    0EF5E C |  TPT2_ADR :                   0EF63 C |
 TPT2_F :                     0EF61 C |  TPT2_OP :                    0EF62 C |
 TP_CHK1 :                     1944 C |  TP_CHK2 :                     1953 C |
 TP_CMD :                       353 C |  TP_MD_ON :                     377 C |
 TP_MODE :                    0EF56 C |  TP_MSG_0 :                     388 C |
 TP_MSG_OFF :                   397 C |  TP_MSG_ON :                    392 C |
 TP_N1 :                        35F C |  TP_N2 :                        368 C |
 TRACE_CMD :                    2D7 C |  TRACE_MSG :                   1A00 C |
*TRUE :                           1 - |  TWO_OPTBL :                    63C C |
 TWO_OPTBL_E :                  64E C |  T_NO_KY :                     19A3 C |
 T_OP1 :                        3C6 C |  T_OP11 :                       3C0 C |
 T_OP_CHK :                     3E1 C |  UARTCR :                     0FF01 - |
 UARTDR :                     0FF00 - |  UPPER :                       1808 C |
 UP_BI :                        1E1 C |  U_0 :                         1A97 C |
 U_00 :                        1A91 C |  U_1 :                         1A9B C |
*VERSION :                     142F - |  WORK_B :                     0EF00 - |
 WSTART :                       0BE C |  WS_CHK1 :                     189F C |
 WS_CHK2 :                     18AB C |  WS_CHK3 :                     18B7 C |
 WS_CHK4 :                     18C3 C |  WS_CHK5 :                     18CF C |
 XORSTR :                      1161 C |  XY_SRTP :                    0EF81 C |

    793 symbols
     35 unused symbols

 AS V1.42 Beta [Bld 227] - Source File emuz80mon_RevB02.asm - Page 3 - 10/17/2022 9:42:47


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.06 seconds assembly time

   5931 lines source file
      2 passes
      0 errors
      0 warnings

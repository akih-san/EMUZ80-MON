GAME80コンパイラについて

GAME80コンパイラは、中島聡さんによって作成されました。ソースは中島さんのGitHubにて公開されて
おります。

https://github.com/snakajima/game-compiler

また、Jun's Homepageにて詳しく解説がされています。

https://www.mztn.org/rvtl/game80.html

GAME80コンパイラは80GAME言語で記述されており、インタプリタでセルフコンパイルすることで
使用可能となります。

セルフコンパイルするためには、メモリが16K（実際はソース、ワークを含めて13K程度）必要
となります。
残念ながら、EMUZ80のリソースではセルフコンパイルすることが出来ませんでした。

そのため、SBCZ80でGAME80を動かして、セルフコンパイルしたバイナリコードから、
アセンブルソースを作成し、EMUZ80へ移植しました。移植時に、アセンブルソースにも
手を加えてあります。このソースは公開しても問題はないと思っています。

また、オリジナルのコンパイラ（GAME言語）ソースにも手を加えました。
コンパイラは、起動すると、必要な情報を手入力する必要があります。
面倒なので、デフォルトの値を表示して、入力パス（単なるリターンキーのみ）の
場合に、デフォルトの値を使います。

ワークエリアは、１Kバイト確保されます。コンパイラのセルフコンパイルで330H程度
使っていましたので、１K程度あれば結構大きなプログラムでも大丈夫かなと思います。

＜＜コンパイラの起動＞＞

GAME80コンパイラは、GAME80インタプリタのサブルーチンを使用しているため、単独での動作は
出来ません。
コンパイラの呼び出しは、GAME80インタプリタを起動してから行います。

GAME80インタプリタを起動し、プログラムを入力（ロード）してから、

>=$5B00<リターン>

と入力することでコンパイラが起動します。

コンパイルしたプログラムを動かすには、スタートアドレスを呼び出します。

>=$スタートアドレス<リターン>


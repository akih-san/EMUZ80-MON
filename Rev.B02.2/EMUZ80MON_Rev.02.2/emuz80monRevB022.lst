 AS V1.42 Beta [Bld 227] - Source File emuz80monRevB022.asm - Page 1 - 11/27/2022 22:27:27


       1/       0 :                     	page	0
       2/       0 :                     	cpu	z80
       3/       0 :                     ;;; 
       4/       0 :                     ;;; Universal Monitor for Zilog Z80
       5/       0 :                     ;;;   Copyright (C) 2019,2020,2021 Haruo Asano
       6/       0 :                     ;;;
       7/       0 :                     
       8/       0 :                     ;;; 2022.10.10 It was added functions by A.honda
       9/       0 :                     ;;; Rev.B02
      10/       0 :                     
      11/       0 :                     ;;; Constants
      12/       0 : =0DH                 CR	EQU	0DH
      13/       0 : =0AH                 LF	EQU	0AH
      14/       0 : =8H                  BS	EQU	08H
      15/       0 : =7FH                 DEL	EQU	7FH
      16/       0 : =20H                 BUFLEN	equ	32	
      17/       0 : =8H                  F_bitSize	equ	8
      18/       0 :                     ;;;
      19/       0 :                     ;;; Memory switch
      20/       0 :                     ;;;
      21/       0 :                     
      22/       0 : =1H                  RAM12K = 1
      23/       0 : =0H                  RAM8K = 0
      24/       0 : =0H                  RAM4K = 0
      25/       0 : =0H                  BACKDOOR = 0
      26/       0 :                     
      27/       0 : =>TRUE               	IF	RAM12K
      28/       0 :                     ;; ROM48K RAM12K for PIC18F47Q84
      29/       0 : =0FF00H              UARTDR	EQU	0FF00H	; UART DATA REGISTOR
      30/       0 : =0FF01H              UARTCR	EQU	0FF01H	; UART CONTROL REGISTOR
      31/       0 : =0EF00H              WORK_B	equ	0EF00H	; work area EF00-EFFF
      32/       0 : =0EF00H              STACKM	equ	0EF00H	; monitor stack
      33/       0 : =0EEC0H              STACK	equ	0EEC0H	; user stack
      34/       0 : =0H                  ROM_B	equ	0000H	;EMUZ80_Q84 ROM base address
      35/       0 : =0C000H              RAM_B	equ	0C000H	;EMUZ80_Q84 RAM base address
      36/       0 : =0EFFFH              RAM_E	equ	0EFFFH	;EMUZ80_Q84 RAM END address
      37/       0 : =0F000H              IO_B	equ	0F000H	;EMUZ80_Q84 I/O base address
      38/       0 : [27]                 	ENDIF
      39/       0 :                     
      40/       0 : =>FALSE              	IF	RAM8K
      41/       0 :                     ; ORIGINAL MEMORY MAP for PIC18F47Q84
      42/       0 :                     UARTDR	EQU	0E000H	; UART DATA REGISTOR
      43/       0 :                     UARTCR	EQU	0E001H	; UART CONTROL REGISTOR
      44/       0 :                     WORK_B	equ	9F00H	; work area 9F00-9FFF
      45/       0 :                     STACKM	equ	9F00H	; monitor stack
      46/       0 :                     STACK	equ	9EC0H	; user stack
      47/       0 :                     ROM_B	equ	0000H	;EMUZ80_Q84 ROM base address
      48/       0 :                     RAM_B	equ	8000H	;EMUZ80_Q84 RAM base address
      49/       0 :                     RAM_E	equ	9FFFH	;EMUZ80_Q84 RAM END address
      50/       0 :                     IO_B	equ	0E000H	;EMUZ80_Q84 I/O base address
      51/       0 : [40]                 	ENDIF
      52/       0 :                     
      53/       0 : =>FALSE              	IF	RAM4K
      54/       0 :                     ; ORIGINAL MEMORY MAP for PIC18F47Q43
      55/       0 :                     
      56/       0 :                     UARTDR	EQU	0E000H	; UART DATA REGISTOR
      57/       0 :                     UARTCR	EQU	0E001H	; UART CONTROL REGISTOR
      58/       0 :                     WORK_B	equ	8F00H	; work area 8F00-8FFF
      59/       0 :                     STACKM	equ	8F00H	; monitor stack
      60/       0 :                     STACK	equ	8EC0H	; user stack
      61/       0 :                     ROM_B	equ	0000H	;EMUZ80_Q43 ROM base address
      62/       0 :                     RAM_B	equ	8000H	;EMUZ80_Q43 RAM base address
      63/       0 :                     RAM_E	equ	8FFFH	;EMUZ80_Q43 RAM END address
      64/       0 :                     IO_B	equ	0E000H	;EMUZ80_Q43 I/O base address
      65/       0 : [53]                 	ENDIF
      66/       0 :                     
      67/       0 : =2000H               BASIC_TOP	equ	2000H
      68/       0 : =2000H               BASIC_CST	equ	2000H	; basic cold start
      69/       0 : =2003H               BASIC_WST	equ	2003H	; basic warm start
      70/       0 :                     
      71/       0 : =>TRUE               	IF	RAM12K
      72/       0 : =0F800H              TIM0_CTL0	equ	0F800H	; timer0 control0 register
      73/       0 : =0F801H              TIM0_CTL1	equ	0F801H	; timer0 control1 register
      74/       0 : =0F810H              TIMER0_CNTL	equ	0F810H	; timer0 16bit counter LSB
      75/       0 : =0F811H              TIMER0_CNTH	equ	0F811H	; timer0 16bit counter MSB
      76/       0 : =0F820H              TIMER0_SCTL	equ	0F820H	; timer0 seconds counter LSB
      77/       0 : =0F821H              TIMER0_SCTH	equ	0F821H	; timer0 seconds counter MSB
      78/       0 : =87E1H               TIMER0_INITC	equ	87e1h	; timer adjust count number
      79/       0 : [71]                 	ENDIF
      80/       0 :                     
      81/       0 : =40H                 ENTRY	EQU	0040H		; Entry point
      82/       0 :                     
      83/       0 :                     ;;; 
      84/       0 :                     ;;; ROM area
      85/       0 :                     ;;;
      86/       0 :                     start:
      87/       0 :                     
      88/       0 :                     	ORG	ROM_B	; (RST 00H)
      89/       0 :                     
      90/       0 :                     E_CSTART:
      91/       0 : C3 40 00            	JP	CSTART
      92/       3 :                     
      93/       3 :                     E_WSTART:
      94/       3 : C3 9E 18            	JP	API01
      95/       6 :                     
      96/       6 : 00 00               	db	0008H - $ dup(00H)
      97/       8 :                     ;	ORG	0008H	; (RST 08H)
      98/       8 : =>FALSE              	IF	BACKDOOR
      99/       8 :                     	JP	RST08H
     100/       8 : =>TRUE               	ELSE
     101/       8 : C3 C5 1F            	JP	CONOUT
     102/       B : [98]                 	ENDIF
     103/       B :                     
     104/       B : 00 00 00 00 00      	db	0010H - $ dup(00H)
     105/      10 :                     ;	ORG	0010H	; (RST 10H)
     106/      10 : =>FALSE              	IF	BACKDOOR
     107/      10 :                     	JP	RST10H
     108/      10 : =>TRUE               	ELSE
     109/      10 : C3 B4 1F            	JP	CONIN
     110/      13 : [106]                	ENDIF
     111/      13 :                     
     112/      13 : 00 00 00 00 00      	db	0018H - $ dup(00H)	; nop
     113/      18 :                     ;	ORG	0018H	; (RST 18H)
     114/      18 : =>FALSE              	IF	BACKDOOR
     115/      18 :                     	JP	RST18H
     116/      18 : =>TRUE               	ELSE
     117/      18 : C3 BF 1F            	JP	CONST
     118/      1B : [114]                	ENDIF
     119/      1B :                     
     120/      1B : 00 00 00 00 00      	db	0020H - $ dup(00H)	; nop
     121/      20 :                     ;	ORG	0020H	; (RST 20H)
     122/      20 : =>FALSE              	IF	BACKDOOR
     123/      20 :                     	JP	RST20H
     124/      20 : =>TRUE               	ELSE
     125/      20 : C9                  	RET
     126/      21 : [122]                	ENDIF
     127/      21 :                     
     128/      21 : 00 00 00 00 00 00   	db	0028H - $ dup(00H)	; nop
               27 : 00                
     129/      28 :                     ;	ORG	0028H	; (RST 28H)
     130/      28 : =>FALSE              	IF	BACKDOOR
     131/      28 :                     	RET
     132/      28 : =>TRUE               	ELSE
     133/      28 : C9                  	RET
     134/      29 : [130]                	ENDIF
     135/      29 :                     
     136/      29 : 00 00 00 00 00 00   	db	0030H - $ dup(00H)	; nop
               2F : 00                
     137/      30 :                     ;	ORG	0030H
     138/      30 : =>FALSE              	IF	BACKDOOR
     139/      30 :                     	JP	RST30H
     140/      30 : =>TRUE               	ELSE
     141/      30 : C3 54 18            	JP	RST30H_IN
     142/      33 : [138]                	ENDIF
     143/      33 :                     
     144/      33 : 00 00 00 00 00      	db	0038H - $ dup(00H)	; nop
     145/      38 :                     ;	ORG	0038H
     146/      38 : =>FALSE              	IF	BACKDOOR
     147/      38 :                     	JP	RST38H;
     148/      38 : =>TRUE               	ELSE
     149/      38 : C3 E2 18            	JP	RST38H_IN
     150/      3B : [146]                	ENDIF
     151/      3B :                     
     152/      3B :                     	;;
     153/      3B :                     	;; Entry point
     154/      3B :                     	;;
     155/      3B :                     
     156/      3B : 00 00 00 00 00      	db	ENTRY - $ dup(00H)
     157/      40 :                     	;	ORG	ENTRY
     158/      40 :                     
     159/      40 : =>FALSE              	IF	BACKDOOR
     160/      40 :                     ;;;
     161/      40 :                     ;;; RST 08H Handler
     162/      40 :                     ;;;
     163/      40 :                     RST08H:
     164/      40 :                     
     165/      40 :                     	ld	(save_hl), hl	; save hl
     166/      40 :                     	ld	hl, (stealRST08)
     167/      40 :                     	jr	jmp_rst
     168/      40 :                     
     169/      40 :                     ;;;
     170/      40 :                     ;;; RST 10H Handler
     171/      40 :                     ;;;
     172/      40 :                     RST10H:
     173/      40 :                     
     174/      40 :                     	ld	(save_hl), hl	; save hl
     175/      40 :                     	ld	hl, (stealRST10)
     176/      40 :                     	jr	jmp_rst
     177/      40 :                     
     178/      40 :                     ;;;
     179/      40 :                     ;;; RST 18H Handler
     180/      40 :                     ;;;
     181/      40 :                     RST18H:
     182/      40 :                     
     183/      40 :                     	ld	(save_hl), hl	; save hl
     184/      40 :                     	ld	hl, (stealRST18)
     185/      40 :                     	jr	jmp_rst
     186/      40 :                     
     187/      40 :                     ;;;
     188/      40 :                     ;;; RST 20H Handler
     189/      40 :                     ;;;
     190/      40 :                     RST20H:
     191/      40 :                     
     192/      40 :                     	ld	(save_hl), hl	; save hl
     193/      40 :                     	ld	hl, (stealRST20)
     194/      40 :                     	jr	jmp_rst
     195/      40 :                     
     196/      40 :                     ;;;
     197/      40 :                     ;;; RST 28H Handler
     198/      40 :                     ;;;
     199/      40 :                     RST28H:
     200/      40 :                     
     201/      40 :                     	ld	(save_hl), hl	; save hl
     202/      40 :                     	ld	hl, (stealRST28)
     203/      40 :                     	jr	jmp_rst
     204/      40 :                     
     205/      40 :                     ;;;
     206/      40 :                     ;;; RST 30H Handler
     207/      40 :                     ;;;
     208/      40 :                     RST30H:
     209/      40 :                     
     210/      40 :                     	ld	(save_hl), hl	; save hl
     211/      40 :                     	ld	hl, (stealRST30)
     212/      40 :                     	jr	jmp_rst
     213/      40 :                     
     214/      40 :                     ;;;
     215/      40 :                     ;;; RST 38H Handler
     216/      40 :                     ;;;
     217/      40 :                     RST38H:
     218/      40 :                     
     219/      40 :                     	ld	(save_hl), hl	; save hl
     220/      40 :                     	ld	hl, (stealRST38)
     221/      40 :                     jmp_rst:
     222/      40 :                     	push	hl		; set jump address
     223/      40 :                     	ld	hl, (save_hl)	; restore hl
     224/      40 :                     RST20H_IN:
     225/      40 :                     RST28H_IN:
     226/      40 :                     	ret			; jump (stealRST38)
     227/      40 : [159]                	ENDIF
     228/      40 :                     
     229/      40 :                     ;;;
     230/      40 :                     ;;; Universal Monitor Z80 Cold start
     231/      40 :                     ;;;
     232/      40 :                     
     233/      40 :                     CSTART:
     234/      40 : F3                  	DI
     235/      41 : 31 00 EF            	LD	SP,STACKM	; monitor stask defines STACKM
     236/      44 :                     
     237/      44 : 21 00 C0            	LD	HL,RAM_B
     238/      47 : 22 20 EF            	LD	(DSADDR),HL
     239/      4A : 22 27 EF            	LD	(SADDR),HL
     240/      4D : 22 25 EF            	LD	(GADDR),HL
     241/      50 : 3E 49               	LD	A,'I'
     242/      52 : 32 29 EF            	LD	(HEXMOD),A
     243/      55 :                     	
     244/      55 : =>FALSE              	IF	BACKDOOR
     245/      55 :                     	; init back door RST XXH entory point
     246/      55 :                     	ld	hl, CONOUT		; RST 08H : CONOUT
     247/      55 :                     	ld	(stealRST08), hl
     248/      55 :                     	ld	hl, CONIN
     249/      55 :                     	ld	(stealRST10), hl	; RST 10H : CONIN
     250/      55 :                     	ld	hl, CONST
     251/      55 :                     	ld	(stealRST18), hl	; RST 18H : CONST
     252/      55 :                     	ld	hl, RST20H_IN
     253/      55 :                     	ld	(stealRST20), hl
     254/      55 :                     	ld	hl, RST28H_IN
     255/      55 :                     	ld	(stealRST28), hl
     256/      55 :                     	ld	hl, RST30H_IN
     257/      55 :                     	ld	(stealRST30), hl
     258/      55 :                     	ld	hl, RST38H_IN
     259/      55 :                     	ld	(stealRST38), hl
     260/      55 : [244]                	ENDIF
     261/      55 :                     
     262/      55 :                     	;; Initialize register value
     263/      55 : AF                  	XOR	A
     264/      56 : 21 2C EF            	LD	HL,REG_B
     265/      59 : 06 1A               	LD	B,REG_E-REG_B
     266/      5B :                     IR0:
     267/      5B : 77                  	LD	(HL),A
     268/      5C : 23                  	INC	HL
     269/      5D : 10 FC               	DJNZ	IR0
     270/      5F :                     
     271/      5F : 21 C0 EE            	LD	HL,STACK		; user stack define STACK
     272/      62 : 22 40 EF            	LD	(REGSP),HL
     273/      65 : 21 00 C0            	ld	hl, RAM_B
     274/      68 : 22 42 EF            	ld	(REGPC), HL		; set program counter
     275/      6B :                     
     276/      6B : 06 08               	ld	b, F_bitSize
     277/      6D : 3E 2E               	ld	a, '.'
     278/      6F : 21 71 EF            	ld	hl, F_bit
     279/      72 :                     ir00:
     280/      72 : 77                  	ld	(hl), a
     281/      73 : 23                  	inc	hl
     282/      74 : 10 FC               	djnz	ir00		; init F_bit string
     283/      76 : AF                  	xor	a
     284/      77 : 77                  	ld	(hl), a		; delimiter
     285/      78 :                     ;
     286/      78 :                     ;	LD	B,100
     287/      78 :                     ;TL:	
     288/      78 :                     ;	XOR	A
     289/      78 :                     ;	CALL	CONOUT
     290/      78 :                     ;	DJNZ	TL
     291/      78 :                     ;
     292/      78 :                     	
     293/      78 :                     ; init dbg work area
     294/      78 :                     
     295/      78 : 06 14               	LD	B, dbg_wend - dbg_wtop
     296/      7A : 21 5D EF            	ld	hl,dbg_wtop	
     297/      7D : AF                  	XOR	A
     298/      7E :                     
     299/      7E :                     dbg_wini:
     300/      7E : 77                  	ld	(hl), a
     301/      7F : 23                  	inc	hl
     302/      80 : 10 FC               	DJNZ	dbg_wini
     303/      82 :                     
     304/      82 : 3E 49               	ld	a, 'I'
     305/      84 : 32 57 EF            	ld	(TM_mode), a	; default call_in mode
     306/      87 : 3E 4E               	ld	a, 'N'
     307/      89 : 32 56 EF            	ld	(TP_mode), a	; default display reg mode
     308/      8C : 2E 00               	ld	l, 0
     309/      8E : 65                  	ld	h, l
     310/      8F : 22 58 EF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     311/      92 : AF                  	xor	a
     312/      93 : 32 5C EF            	ld	(fever_t), a	; clear flag trace forever
     313/      96 :                     	; init bp, tp, gstop address & opcode
     314/      96 : 21 00 C0            	ld	hl, RAM_B
     315/      99 : 22 5F EF            	ld	(tpt1_adr), hl
     316/      9C : 22 63 EF            	ld	(tpt2_adr), hl
     317/      9F : 22 67 EF            	ld	(bpt1_adr), hl
     318/      A2 : 22 6B EF            	ld	(bpt2_adr), hl
     319/      A5 : 22 6F EF            	ld	(tmpb_adr), hl
     320/      A8 : 7E                  	ld	a, (hl)
     321/      A9 : 32 5E EF            	ld	(tpt1_op), a
     322/      AC : 32 62 EF            	ld	(tpt2_op), a
     323/      AF : 32 66 EF            	ld	(bpt1_op), a
     324/      B2 : 32 6A EF            	ld	(bpt2_op), a
     325/      B5 : 32 6E EF            	ld	(tmpb_op), a
     326/      B8 :                     	
     327/      B8 :                     ;; Opening message
     328/      B8 :                     
     329/      B8 : 21 1D 1D            	LD	HL,OPNMSG
     330/      BB : CD 48 17            	CALL	STROUT
     331/      BE :                     ;	EI
     332/      BE :                     
     333/      BE :                     WSTART:
     334/      BE : 21 5C 1D            	LD	HL,PROMPT
     335/      C1 : CD 48 17            	CALL	STROUT
     336/      C4 : CD A8 17            	CALL	GETLIN
     337/      C7 : CD 02 18            	CALL	SKIPSP
     338/      CA :                     ;	CALL	UPPER
     339/      CA : B7                  	OR	A
     340/      CB : 28 F1               	JR	Z, WSTART
     341/      CD :                     
     342/      CD : FE 44               	CP	'D'
     343/      CF : CA 60 06            	JP	Z, DUMP
     344/      D2 : FE 47               	CP	'G'
     345/      D4 : CA 47 13            	JP	Z, GO
     346/      D7 : FE 53               	CP	'S'
     347/      D9 : CA 0E 14            	JP	Z, SETM
     348/      DC :                     
     349/      DC : FE 4C               	CP	'L'
     350/      DE : CA 84 14            	JP	Z, LOADH
     351/      E1 : FE 50               	CP	'P'
     352/      E3 : CA 5E 15            	JP	Z, SAVEH
     353/      E6 :                     
     354/      E6 : FE 52               	CP	'R'
     355/      E8 : CA 36 16            	JP	Z, REG
     356/      EB :                     
     357/      EB : FE 23               	cp	'#'
     358/      ED : CA 0E 01            	jp	Z, Launcher
     359/      F0 :                     
     360/      F0 : FE 42               	cp	'B'
     361/      F2 : CA 22 02            	jp	z, brk_cmd	; break point command
     362/      F5 :                     	
     363/      F5 : FE 54               	cp	'T'
     364/      F7 : CA D7 02            	jp	z, trace_cmd	; trace point command
     365/      FA :                     
     366/      FA : FE 3F               	cp	'?'
     367/      FC : 28 08               	jr	z, command_hlp	; command help message
     368/      FE :                     
     369/      FE :                     ERR:
     370/      FE : 21 79 1D            	LD	HL,ERRMSG
     371/     101 : CD 48 17            	CALL	STROUT
     372/     104 : 18 B8               	JR	WSTART
     373/     106 :                     
     374/     106 :                     ;;
     375/     106 :                     ;; command help
     376/     106 :                     ;;
     377/     106 :                     command_hlp:
     378/     106 :                     
     379/     106 : 21 72 1B            	LD	HL, cmd_hlp
     380/     109 : CD 48 17            	CALL	STROUT
     381/     10C : 18 B0               	JR	WSTART
     382/     10E :                     
     383/     10E :                     ;;
     384/     10E :                     ;; Launch appended program
     385/     10E :                     ;;
     386/     10E :                     Launcher:
     387/     10E : 23                  	INC	HL
     388/     10F : CD 02 18            	CALL	SKIPSP		; A <- next char
     389/     112 :                     ;	CALL	UPPER
     390/     112 : B7                  	OR	A
     391/     113 : 28 E9               	JR	Z,ERR
     392/     115 :                     
     393/     115 :                     	; check L or number
     394/     115 :                     	
     395/     115 : FE 4C               	cp	'L'
     396/     117 : 28 25               	JR	Z,LST_PRG	; list append program
     397/     119 :                     
     398/     119 :                     	; check number
     399/     119 :                     
     400/     119 : CD B6 01            	call	GET_NUM		; return BC : number
     401/     11C : 38 E0               	JR	C, ERR
     402/     11E :                     
     403/     11E :                     	; check number
     404/     11E : 79                  	LD	A, C
     405/     11F : FE 11               	CP	(lanch1 - ApendTBL)/2 +1	; a < 17 ?
     406/     121 : D2 FE 00            	JP	NC, ERR
     407/     124 : B7                  	OR	A				; check '0'
     408/     125 : CA FE 00            	JP	Z, ERR
     409/     128 :                     
     410/     128 :                     	; A <- append program No.
     411/     128 :                     
     412/     128 : 3D                  	DEC	A	; 0 <= A <= 0FH
     413/     129 : 17                  	RLA		; A = A * 2
     414/     12A : 16 00               	LD	D, 0
     415/     12C : 5F                  	LD	E, A
     416/     12D : 21 5C 01            	LD	HL, ApendTBL
     417/     130 : 19                  	ADD	HL, DE	; get lanch address point
     418/     131 : 5E                  	LD	E, (HL)
     419/     132 : 23                  	INC	HL
     420/     133 : 56                  	LD	D, (HL)	; DE : JUMP POINT
     421/     134 :                     
     422/     134 :                     	; Jump to append program
     423/     134 :                     	
     424/     134 : EB                  	EX	DE, HL
     425/     135 : 5E                  	LD	E, (HL)
     426/     136 : 23                  	INC	HL
     427/     137 : 56                  	LD	D, (HL)	; DE : jump address
     428/     138 : 7A                  	LD	A, D
     429/     139 : B3                  	OR	E	; address check
     430/     13A : 28 C2               	JR	Z,ERR	; jump address NULL
     431/     13C : EB                  	EX	DE, HL
     432/     13D : E9                  	JP	(HL)	; lanch append program
     433/     13E :                     	
     434/     13E :                     	; List out append program
     435/     13E :                     LST_PRG:
     436/     13E :                     	; get address to DE
     437/     13E : 21 5C 01            	LD	HL, ApendTBL
     438/     141 :                     
     439/     141 :                     LST_PRG1:
     440/     141 : 5E                  	LD	E, (HL)
     441/     142 : 23                  	INC	HL
     442/     143 : 56                  	LD	D, (HL)
     443/     144 : 23                  	INC	HL
     444/     145 :                     
     445/     145 : D5                  	PUSH	DE
     446/     146 : DD E1               	POP	IX	; IX <-DE
     447/     148 : DD 7E 00            	LD	A, (IX+0)
     448/     14B : DD B6 01            	OR	(IX+1)
     449/     14E : 28 09               	JR	Z, LST_END
     450/     150 : 13                  	INC	DE
     451/     151 : 13                  	INC	DE	; get string address
     452/     152 :                     	
     453/     152 : EB                  	EX	DE, HL
     454/     153 : CD 48 17            	CALL	STROUT
     455/     156 : EB                  	EX	DE, HL
     456/     157 : 18 E8               	JR	LST_PRG1
     457/     159 :                     
     458/     159 :                     LST_END:
     459/     159 : C3 BE 00            	JP	WSTART
     460/     15C :                     	
     461/     15C :                     ; Append program launch table
     462/     15C :                     ;
     463/     15C :                     ApendTBL:
     464/     15C : 7C 01               	dw	lanch1
     465/     15E : 98 01               	dw	lanch2
     466/     160 : B4 01               	dw	lanch3
     467/     162 : B4 01               	dw	lanch4
     468/     164 : B4 01               	dw	lanch5
     469/     166 : B4 01               	dw	lanch6
     470/     168 : B4 01               	dw	lanch7
     471/     16A : B4 01               	dw	lanch8
     472/     16C : B4 01               	dw	lanch9
     473/     16E : B4 01               	dw	lanch10
     474/     170 : B4 01               	dw	lanch11
     475/     172 : B4 01               	dw	lanch12
     476/     174 : B4 01               	dw	lanch13
     477/     176 : B4 01               	dw	lanch14
     478/     178 : B4 01               	dw	lanch15
     479/     17A : B4 01               	dw	lanch16
     480/     17C :                     	
     481/     17C :                     lanch1:
     482/     17C : 00 20               	dw	BASIC_CST
     483/     17E : 31 2E 20 42 41 53   	DB	"1. BASIC4.7b Cold Start",CR,LF,00H
              184 : 49 43 34 2E 37 62 
              18A : 20 43 6F 6C 64 20 
              190 : 53 74 61 72 74 0D 
              196 : 0A 00             
     484/     198 :                     lanch2:
     485/     198 : 03 20               	dw	BASIC_WST
     486/     19A : 32 2E 20 42 41 53   	DB	"2. BASIC4.7b Warm Start",CR,LF,00H
              1A0 : 49 43 34 2E 37 62 
              1A6 : 20 57 61 72 6D 20 
              1AC : 53 74 61 72 74 0D 
              1B2 : 0A 00             
     487/     1B4 :                     
     488/     1B4 :                     lanch3:
     489/     1B4 :                     lanch4:
     490/     1B4 :                     lanch5:
     491/     1B4 :                     lanch6:
     492/     1B4 :                     lanch7:
     493/     1B4 :                     lanch8:
     494/     1B4 :                     lanch9:
     495/     1B4 :                     lanch10:
     496/     1B4 :                     lanch11:
     497/     1B4 :                     lanch12:
     498/     1B4 :                     lanch13:
     499/     1B4 :                     lanch14:
     500/     1B4 :                     lanch15:
     501/     1B4 :                     lanch16:
     502/     1B4 : 00 00               	dw	0
     503/     1B6 :                     
     504/     1B6 :                     	; get number
     505/     1B6 :                     	; input HL : string buffer
     506/     1B6 :                     	;
     507/     1B6 :                     	; Return
     508/     1B6 :                     	; CF =1 : Error
     509/     1B6 :                     	; BC: Calculation result
     510/     1B6 :                     
     511/     1B6 :                     GET_NUM:
     512/     1B6 : AF                  	XOR	A		; Initialize C
     513/     1B7 : 47                  	LD	B, A
     514/     1B8 : 4F                  	LD	C, A		; clear BC
     515/     1B9 :                     	
     516/     1B9 :                     GET_NUM0:
     517/     1B9 : CD 02 18            	CALL	SKIPSP		; A <- next char
     518/     1BC :                     ;	CALL	UPPER
     519/     1BC : B7                  	OR	A
     520/     1BD : C8                  	RET	Z		; ZF=1, ok! buffer end
     521/     1BE :                     
     522/     1BE : CD D4 01            	CALL	GET_BI
     523/     1C1 : D8                  	RET	C
     524/     1C2 :                     
     525/     1C2 : F5                  	push	af
     526/     1C3 : 08                  	EX	AF, AF'		;'AF <> AF: save A
     527/     1C4 : F1                  	pop	af
     528/     1C5 : CD E3 01            	CALL	MUL_10		; BC = BC * 10
     529/     1C8 : D8                  	RET	C		; overflow error
     530/     1C9 : 08                  	EX	AF, AF'		;'AF <> AF: restor A
     531/     1CA :                     
     532/     1CA : 16 00               	ld	d, 0
     533/     1CC : 5F                  	ld	e, a
     534/     1CD : CD FA 01            	CALL	BC_PLUS_DE	; BC = BC + A
     535/     1D0 : D8                  	RET	C		; overflow error
     536/     1D1 :                     				; result: BC = BC * 10 + A
     537/     1D1 : 23                  	INC	HL
     538/     1D2 : 18 E5               	JR	GET_NUM0
     539/     1D4 :                     ;
     540/     1D4 :                     ; Make binary to A
     541/     1D4 :                     ; ERROR if CF=1
     542/     1D4 :                     ;
     543/     1D4 :                     GET_BI:
     544/     1D4 : B7                  	OR	A
     545/     1D5 : 28 0A               	JR	Z, UP_BI
     546/     1D7 : FE 30               	CP	'0'
     547/     1D9 : D8                  	RET	C
     548/     1DA :                     	
     549/     1DA : FE 3A               	CP	'9'+1	; ASCII':'
     550/     1DC : 30 03               	JR	NC, UP_BI
     551/     1DE : D6 30               	SUB	'0'	; Make binary to A
     552/     1E0 : C9                  	RET
     553/     1E1 :                     
     554/     1E1 :                     UP_BI:
     555/     1E1 : 37                  	SCF		; Set CF
     556/     1E2 : C9                  	RET
     557/     1E3 :                     
     558/     1E3 :                     ;
     559/     1E3 :                     ; multiply by 10
     560/     1E3 :                     ; BC = BC * 10
     561/     1E3 :                     MUL_10:
     562/     1E3 : C5                  	push	bc
     563/     1E4 : CB 21               	SLA	C
     564/     1E6 : CB 10               	RL	B		; 2BC
     565/     1E8 : CB 21               	SLA	C
     566/     1EA : CB 10               	RL	B		; 4BC
     567/     1EC : CB 21               	SLA	C
     568/     1EE : CB 10               	RL	B		; 8BC
     569/     1F0 : D1                  	pop	de		; de = bc
     570/     1F1 : D8                  	ret	c
     571/     1F2 : CD FA 01            	CALL	BC_PLUS_DE	; 9BC
     572/     1F5 : D8                  	ret	c
     573/     1F6 : CD FA 01            	CALL	BC_PLUS_DE	; 10BC
     574/     1F9 : C9                  	RET			; result : BC = BC * 10
     575/     1FA :                     ;
     576/     1FA :                     ; BC = BC + DE
     577/     1FA :                     BC_PLUS_DE:
     578/     1FA : E5                  	push	hl
     579/     1FB :                     
     580/     1FB : D5                  	push	de
     581/     1FC : E1                  	pop	hl
     582/     1FD :                     
     583/     1FD : 09                  	add	hl, bc
     584/     1FE :                     
     585/     1FE : E5                  	push	hl
     586/     1FF : C1                  	pop	bc
     587/     200 :                     
     588/     200 : E1                  	pop	hl
     589/     201 : C9                  	RET
     590/     202 :                     
     591/     202 :                     ;
     592/     202 :                     ; list break point
     593/     202 :                     ;
     594/     202 :                     b_list:
     595/     202 : 3A 65 EF            	ld	a, (bpt1_f)
     596/     205 : B7                  	or	a
     597/     206 : 28 08               	jr	z, b_list1
     598/     208 :                     
     599/     208 : 2A 67 EF            	ld	hl, (bpt1_adr)
     600/     20B : 3E 31               	ld	a, '1'
     601/     20D : CD BD 02            	call	b_msg_out
     602/     210 :                     
     603/     210 :                     b_list1:
     604/     210 : 3A 69 EF            	ld	a, (bpt2_f)
     605/     213 : B7                  	or	a
     606/     214 : CA BE 00            	jp	z, WSTART
     607/     217 :                     
     608/     217 : 2A 6B EF            	ld	hl, (bpt2_adr)
     609/     21A : 3E 32               	ld	a, '2'
     610/     21C : CD BD 02            	call	b_msg_out
     611/     21F : C3 BE 00            	JP	WSTART
     612/     222 :                     
     613/     222 :                     
     614/     222 :                     ;;; 
     615/     222 :                     ;;; break point command
     616/     222 :                     ;;; 
     617/     222 :                     brk_cmd:
     618/     222 : 23                  	INC	HL
     619/     223 : CD 02 18            	CALL	SKIPSP		; A <- next char
     620/     226 :                     ;	CALL	UPPER
     621/     226 : B7                  	OR	A
     622/     227 : 28 D9               	JR	Z,b_list	; only type "B"
     623/     229 :                     
     624/     229 : 01 65 EF            	ld	bc, bpt1_f
     625/     22C : FE 31               	cp	'1'
     626/     22E : 28 0E               	jr	z, set_bp1
     627/     230 :                     
     628/     230 : 01 69 EF            	ld	bc, bpt2_f
     629/     233 : FE 32               	cp	'2'
     630/     235 : 28 07               	jr	z, set_bp1
     631/     237 :                     
     632/     237 : FE 43               	cp	'C'	;clear?
     633/     239 : 28 3E               	jr	z, bp_clr
     634/     23B : C3 FE 00            	jp	ERR
     635/     23E :                     
     636/     23E :                     set_bp1:
     637/     23E : 08                  	EX	AF, AF'
     638/     23F :                     
     639/     23F : 23                  	INC	HL
     640/     240 : CD 02 18            	CALL	SKIPSP		; A <- next char
     641/     243 :                     ;	CALL	UPPER
     642/     243 : B7                  	OR	A
     643/     244 : 28 5A               	JR	Z, bp_LOT 	;; No address input -> list out
     644/     246 : FE 2C               	cp	','
     645/     248 : C2 FE 00            	jp	nz, ERR
     646/     24B :                     
     647/     24B : 23                  	INC	HL
     648/     24C : CD 02 18            	CALL	SKIPSP
     649/     24F : C5                  	push	bc
     650/     250 : CD 12 18            	CALL	RDHEX		; 1st arg.
     651/     253 : E1                  	pop	hl		; hl <- bc
     652/     254 : DA FE 00            	jp	c, ERR
     653/     257 :                     
     654/     257 : CD 60 02            	call	setbpadr
     655/     25A : DA FE 00            	jp	c, ERR
     656/     25D : C3 BE 00            	JP	WSTART
     657/     260 :                     
     658/     260 :                     
     659/     260 :                     ; hl : point of bp flag( bpt1_f or bpt2_f)
     660/     260 :                     ; de : break point address
     661/     260 :                     
     662/     260 :                     ; check ram area, and set berak point
     663/     260 :                     ; 
     664/     260 :                     setbpadr:
     665/     260 : 7A                  	ld	a, d
     666/     261 : FE C0               	cp	RAM_B >> 8	; a - 0C0H
     667/     263 : DA 77 02            	jp	c, chkERR	; ROM area
     668/     266 : FE F0               	cp	IO_B >> 8	; a - 0F0H
     669/     268 : D2 77 02            	jp	nc, chkERR	; I/O area
     670/     26B : 3E 01               	ld	a,1
     671/     26D : 77                  	ld	(hl), a	; set flag
     672/     26E : 23                  	inc	hl
     673/     26F : 1A                  	ld	a, (de)		; get opcode
     674/     270 : 77                  	ld	(hl), a		; save opcode
     675/     271 : 23                  	inc	hl
     676/     272 : 73                  	ld	(hl), e ; set break point low address
     677/     273 : 23                  	inc	hl
     678/     274 : 72                  	ld	(hl), d ; set break point high address
     679/     275 : B7                  	or	a	; reset carry
     680/     276 : C9                  	ret
     681/     277 :                     
     682/     277 :                     chkERR:
     683/     277 : 37                  	scf	;set carry
     684/     278 : C9                  	ret
     685/     279 :                     
     686/     279 :                     ; clear break point
     687/     279 :                     
     688/     279 :                     bp_clr:
     689/     279 : 23                  	INC	HL
     690/     27A : CD 02 18            	CALL	SKIPSP		; A <- next char
     691/     27D :                     ;	CALL	UPPER
     692/     27D : B7                  	OR	A
     693/     27E : 28 14               	JR	Z,b_aclr	; all clear
     694/     280 :                     
     695/     280 : 01 65 EF            	ld	bc, bpt1_f
     696/     283 : FE 31               	cp	'1'
     697/     285 : 28 08               	jr	z, bp_clr1
     698/     287 :                     
     699/     287 : 01 69 EF            	ld	bc, bpt2_f
     700/     28A : FE 32               	cp	'2'
     701/     28C : C2 FE 00            	jp	nz, ERR
     702/     28F :                     
     703/     28F :                     bp_clr1:
     704/     28F : AF                  	xor	a
     705/     290 : 02                  	ld	(bc), a
     706/     291 : C3 BE 00            	JP	WSTART
     707/     294 :                     
     708/     294 :                     b_aclr:
     709/     294 : AF                  	xor	a
     710/     295 : 01 65 EF            	ld	bc, bpt1_f
     711/     298 : 02                  	ld	(bc), a
     712/     299 : 01 69 EF            	ld	bc, bpt2_f
     713/     29C : 02                  	ld	(bc), a
     714/     29D : C3 BE 00            	JP	WSTART
     715/     2A0 :                     
     716/     2A0 :                     ; when no address input. list out BP
     717/     2A0 :                     ;
     718/     2A0 :                     ; bc : break pointer buffer offset
     719/     2A0 :                     bp_LOT:
     720/     2A0 : 0A                  	ld	a, (bc)		; set break point?
     721/     2A1 : B7                  	or	a
     722/     2A2 : CA BE 00            	jp	z, WSTART	; no break point setting
     723/     2A5 :                     
     724/     2A5 : 08                  	EX	AF, AF'
     725/     2A6 : 2A 67 EF            	ld	hl, (bpt1_adr)
     726/     2A9 : FE 31               	cp	'1'
     727/     2AB : 28 03               	jr	z, l_b2
     728/     2AD : 2A 6B EF            	ld	hl, (bpt2_adr)
     729/     2B0 :                     l_b2:
     730/     2B0 : CD BD 02            	call	b_msg_out
     731/     2B3 : C3 BE 00            	JP	WSTART
     732/     2B6 :                     
     733/     2B6 : 42 50 28 00         bp_msg1:	db	"BP(",00H
     734/     2BA : 29 3A 00            bp_msg2:	db	"):",00H
     735/     2BD :                     
     736/     2BD :                     b_msg_out:
     737/     2BD : E5                  	push	hl
     738/     2BE : F5                  	push	af
     739/     2BF : 21 B6 02            	ld	hl, bp_msg1
     740/     2C2 : CD 48 17            	call	STROUT
     741/     2C5 : F1                  	pop	af
     742/     2C6 : CD C5 1F            	call	CONOUT
     743/     2C9 : 21 BA 02            	ld	hl, bp_msg2
     744/     2CC : CD 48 17            	call	STROUT
     745/     2CF : E1                  	pop	hl
     746/     2D0 : CD 51 17            	call	HEXOUT4
     747/     2D3 : CD 91 17            	call	CRLF	
     748/     2D6 : C9                  	ret
     749/     2D7 :                     
     750/     2D7 :                     ;;; 
     751/     2D7 :                     ;;; trace command
     752/     2D7 :                     ;;; 
     753/     2D7 :                     trace_cmd:
     754/     2D7 :                     
     755/     2D7 :                     ; T[address][,step数]
     756/     2D7 :                     ; TP[ON | OFF]
     757/     2D7 :                     ; TM[I | S]
     758/     2D7 :                     
     759/     2D7 :                     ; init steps
     760/     2D7 : E5                  	push	hl
     761/     2D8 : 2E 00               	ld	l, 0
     762/     2DA : 26 00               	ld	h, 0
     763/     2DC : 22 58 EF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     764/     2DF : 2A 42 EF            	ld	hl,(REGPC)
     765/     2E2 : 22 5A EF            	ld	(tmpT), hl	; init temp address
     766/     2E5 : AF                  	xor	a
     767/     2E6 : 32 5C EF            	ld	(fever_t), a	; clear flag trace forever
     768/     2E9 :                     
     769/     2E9 : E1                  	pop	hl
     770/     2EA : 23                  	inc	hl
     771/     2EB : CD 02 18            	CALL	SKIPSP
     772/     2EE : CD 12 18            	CALL	RDHEX		; 1st arg.
     773/     2F1 : D2 9D 03            	jp	nc, tadr_chk
     774/     2F4 : CD 02 18            	CALL	SKIPSP
     775/     2F7 : 7E                  	ld	a, (hl)
     776/     2F8 : B7                  	or	a
     777/     2F9 : CA C6 03            	Jp	z, t_op1	; only 1 step trace, check opcode
     778/     2FC : FE 2C               	cp	','
     779/     2FE : CA AE 03            	jp	z, stp_chk	; steps check
     780/     301 :                     
     781/     301 :                     ;	CALL	UPPER
     782/     301 : FE 50               	cp	'P'
     783/     303 : 28 4E               	jr	z, tp_cmd
     784/     305 : FE 4D               	cp	'M'
     785/     307 : C2 FE 00            	jp	nz, ERR
     786/     30A :                     	
     787/     30A :                     	; tm_cmd
     788/     30A :                     	
     789/     30A : 23                  	inc	hl
     790/     30B : CD 02 18            	CALL	SKIPSP		; A <- next char
     791/     30E :                     ;	CALL	UPPER
     792/     30E :                     dip_TM:
     793/     30E : 21 45 03            	ld	hl, tm_msg_i
     794/     311 : FE 49               	cp	'I'
     795/     313 : 28 10               	jr	z, set_TM
     796/     315 : 21 4B 03            	ld	hl, tm_msg_s
     797/     318 : FE 53               	cp	'S'
     798/     31A : 28 09               	jr	z, set_TM
     799/     31C : B7                  	or	a
     800/     31D : C2 FE 00            	jp	nz, ERR
     801/     320 :                     
     802/     320 :                     ;display T mode
     803/     320 : 3A 57 EF            	ld	a, (TM_mode)
     804/     323 : 18 E9               	jr	dip_TM
     805/     325 :                     
     806/     325 :                     ;set TM mode and display
     807/     325 :                     set_TM:
     808/     325 : 32 57 EF            	ld	(TM_mode),a
     809/     328 : E5                  	push	hl
     810/     329 : 21 36 03            	ld	hl, tm_msg_0
     811/     32C : CD 48 17            	call	STROUT
     812/     32F : E1                  	pop	hl
     813/     330 : CD 48 17            	call	STROUT
     814/     333 : C3 BE 00            	jp	WSTART
     815/     336 :                     
     816/     336 :                     tm_msg_0:
     817/     336 : 54 4D 20 6D 6F 64   	db	"TM mode:<CALL ", 00h
              33C : 65 3A 3C 43 41 4C 
              342 : 4C 20 00          
     818/     345 :                     tm_msg_i:
     819/     345 : 49 4E 3E 0D 0A 00   	db	"IN>", CR, LF, 00h
     820/     34B :                     tm_msg_s:
     821/     34B : 53 4B 49 50 3E 0D   	db	"SKIP>", CR, LF, 00h
              351 : 0A 00             
     822/     353 :                     	
     823/     353 :                     	
     824/     353 :                     	; tp_cmd
     825/     353 :                     tp_cmd:	
     826/     353 : 23                  	inc	hl
     827/     354 : CD 02 18            	CALL	SKIPSP		; A <- next char
     828/     357 :                     ;	CALL	UPPER
     829/     357 : B7                  	or	a
     830/     358 : 20 05               	jr	nz, tp_n1
     831/     35A : 3A 56 EF            	ld	a, (TP_mode)
     832/     35D : 18 09               	jr	tp_n2
     833/     35F :                     	
     834/     35F :                     tp_n1:
     835/     35F : FE 4F               	cp	'O'
     836/     361 : C2 FE 00            	jp	nz, ERR
     837/     364 : 23                  	inc	hl
     838/     365 : CD 02 18            	CALL	SKIPSP		; A <- next char
     839/     368 :                     ;	CALL	UPPER
     840/     368 :                     
     841/     368 :                     tp_n2:
     842/     368 : 21 92 03            	ld	hl, tp_msg_on
     843/     36B : FE 4E               	cp	'N'
     844/     36D : 28 08               	jr	z, tp_md_on
     845/     36F :                     
     846/     36F : 21 97 03            	ld	hl, tp_msg_off
     847/     372 : FE 46               	cp	'F'
     848/     374 : C2 FE 00            	jp	nz, ERR
     849/     377 :                     
     850/     377 :                     tp_md_on:
     851/     377 :                     	; set trace mode and display mode
     852/     377 : 32 56 EF            	ld	(TP_mode), a
     853/     37A : E5                  	push	hl
     854/     37B : 21 88 03            	ld	hl, tp_msg_0
     855/     37E : CD 48 17            	call	STROUT
     856/     381 : E1                  	pop	hl
     857/     382 : CD 48 17            	call	STROUT
     858/     385 : C3 BE 00            	jp	WSTART
     859/     388 :                     	
     860/     388 :                     tp_msg_0:
     861/     388 : 54 50 20 6D 6F 64   	db	"TP mode: ", 00h
              38E : 65 3A 20 00       
     862/     392 :                     tp_msg_on:
     863/     392 : 4F 4E 0D 0A 00      	db	"ON", CR, LF, 00h
     864/     397 :                     tp_msg_off:
     865/     397 : 4F 46 46 0D 0A 00   	db	"OFF", CR, LF, 00h
     866/     39D :                     
     867/     39D :                     tadr_chk:
     868/     39D : ED 53 5A EF         	ld	(tmpT), de	; set start address
     869/     3A1 : CD 02 18            	CALL	SKIPSP		; A <- next char
     870/     3A4 : B7                  	or	a
     871/     3A5 : 28 1F               	jr	z, t_op1	; 1step trace
     872/     3A7 : FE 2C               	cp	','
     873/     3A9 : 28 03               	jr	z, stp_chk
     874/     3AB : C3 FE 00            	jp	ERR
     875/     3AE :                     
     876/     3AE :                     stp_chk:
     877/     3AE : 23                  	inc	hl
     878/     3AF : CD 02 18            	CALL	SKIPSP		; A <- next char
     879/     3B2 : B7                  	or	a
     880/     3B3 : CA FE 00            	jp	z, ERR
     881/     3B6 : FE 2D               	cp	'-'
     882/     3B8 : 28 11               	jr	z, chk_fevre
     883/     3BA :                     
     884/     3BA :                     ; check steps
     885/     3BA :                     
     886/     3BA : CD B6 01            	call	GET_NUM		; get steps to BC
     887/     3BD : DA FE 00            	JP	C, ERR		; number error
     888/     3C0 :                     
     889/     3C0 :                     t_op11:
     890/     3C0 : ED 43 58 EF         	ld	(TC_cnt), bc	; set trace step counter
     891/     3C4 : 18 1B               	jr	t_op_chk
     892/     3C6 :                     
     893/     3C6 :                     t_op1:
     894/     3C6 : 01 01 00            	ld	bc, 1
     895/     3C9 : 18 F5               	jr	t_op11
     896/     3CB :                     
     897/     3CB :                     chk_fevre:
     898/     3CB : 23                  	inc	hl
     899/     3CC : CD 02 18            	CALL	SKIPSP		; A <- next char
     900/     3CF : FE 31               	cp	'1'
     901/     3D1 : C2 FE 00            	jp	nz, ERR
     902/     3D4 : 23                  	inc	hl
     903/     3D5 : CD 02 18            	CALL	SKIPSP		; A <- next char
     904/     3D8 : B7                  	or	a
     905/     3D9 : C2 FE 00            	jp	nz, ERR		; not "-1" then error
     906/     3DC : 3E 01               	ld	a, 1
     907/     3DE : 32 5C EF            	ld	(fever_t), a	; set flag trace forever
     908/     3E1 :                     
     909/     3E1 :                     t_op_chk:
     910/     3E1 : 2A 5A EF            	ld	hl, (tmpT)	; get PC address
     911/     3E4 : 7E                  	ld	a, (hl)		; get opcode
     912/     3E5 :                     	
     913/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     914/     3E5 :                     ;;;
     915/     3E5 :                     ;;; branch opecode check
     916/     3E5 :                     ;;;
     917/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     918/     3E5 :                     
     919/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     920/     3E5 :                     ; 2 insertion Trace code(TC) 
     921/     3E5 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     922/     3E5 :                     INSTC2:
     923/     3E5 :                     	; check 1 byte machine code: branch (RET CC)
     924/     3E5 :                     
     925/     3E5 : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
     926/     3E8 : 21 7E 05            	ld	hl, RETCC_TBLS
     927/     3EB : ED B1               	cpir
     928/     3ED : 20 13               	jr	nz, next_bc1	; not RET CC
     929/     3EF :                     
     930/     3EF :                     	; RET CC
     931/     3EF :                     	; trace operation:
     932/     3EF :                     	;   1. ea = *REGSP; *ea = TC;
     933/     3EF :                     	;   2. ea = *REGPC; *(ea+1) = TC;
     934/     3EF :                     
     935/     3EF :                     	; 1
     936/     3EF : 0E 01               	ld	c, 1		; first TC point
     937/     3F1 : CD 47 05            	call	insBRK_sp
     938/     3F4 : DA 06 05            	jp	c, err_trace_seq
     939/     3F7 :                     	
     940/     3F7 :                     	; 2
     941/     3F7 : 0E 02               	ld	c, 2		; second TC point
     942/     3F9 : CD 27 05            	call	insBRK_1op
     943/     3FC : DA 06 05            	jp	c, err_trace_seq
     944/     3FF :                     
     945/     3FF : C3 03 05            	jp	END_INS_TC
     946/     402 :                     
     947/     402 :                     	; check 2 byte machine code: branch (JR CC, Relative Value)
     948/     402 :                     next_bc1:
     949/     402 :                     
     950/     402 : 01 05 00            	ld	bc, JRCC_TBLE - JRCC_TBLS
     951/     405 : 21 86 05            	ld	hl, JRCC_TBLS
     952/     408 : ED B1               	cpir
     953/     40A : 20 19               	jr	nz, next_bc2	; not JR CC
     954/     40C :                     
     955/     40C :                     	; JR CC, nn
     956/     40C :                     	; trace operation:
     957/     40C :                     	;   1. ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
     958/     40C :                     	;   2. ea = *REGPC; *(ea+2) = TC;
     959/     40C :                     
     960/     40C :                     	; 1
     961/     40C : 0E 01               	ld	c, 1		; first TC point
     962/     40E : 2A 5A EF            	ld	hl, (tmpT)
     963/     411 : CD 1A 05            	call	Rel_adr_c
     964/     414 : CD 54 05            	call	inadr_chk_and_wrt
     965/     417 : DA 06 05            	jp	c, err_trace_seq
     966/     41A :                     
     967/     41A :                     	; 2
     968/     41A : 0E 02               	ld	c, 2		; second TC point
     969/     41C : CD 2C 05            	call	insBRK_2op
     970/     41F : DA 06 05            	jp	c, err_trace_seq
     971/     422 :                     
     972/     422 : C3 03 05            	jp	END_INS_TC
     973/     425 :                     
     974/     425 :                     	; check 3 byte machine code: branch JP CC, nnnn 16bit literal)
     975/     425 :                     
     976/     425 :                     next_bc2:
     977/     425 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
     978/     428 : 21 8B 05            	ld	hl, JPCC_TBLS
     979/     42B : ED B1               	cpir
     980/     42D : 20 04               	jr	nz, next_bc21		; not JP CCC
     981/     42F :                     
     982/     42F :                     	; JP CC, nnnn
     983/     42F :                     	; trace operation:
     984/     42F :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
     985/     42F :                     	;   2. ea = *REGPC; *(ea+3) = TC;
     986/     42F :                     
     987/     42F : 0E 01               	ld	c, 1		; first TC point
     988/     431 : 18 13               	jr	next_bc222
     989/     433 :                     
     990/     433 :                     	; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
     991/     433 :                     
     992/     433 :                     next_bc21:
     993/     433 : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
     994/     436 : 21 93 05            	ld	hl, CLCC_TBLS
     995/     439 : ED B1               	cpir
     996/     43B : 20 1A               	jr	nz, INSTC1		; not CALL CCC
     997/     43D :                     
     998/     43D :                     	; CALL CC, nnnn
     999/     43D :                     	; trace operation:
    1000/     43D :                     	; TM_mode = 'I'
    1001/     43D :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
    1002/     43D :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1003/     43D :                     	;
    1004/     43D :                     	; TM_mode = 'S'
    1005/     43D :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1006/     43D :                     
    1007/     43D : 0E 01               	ld	c, 1		; first TC point
    1008/     43F : 3A 57 EF            	ld	a, (TM_mode)
    1009/     442 : FE 53               	cp	'S'
    1010/     444 : 28 08               	jr	z, next_bc22	; skip insertion 1.
    1011/     446 :                     
    1012/     446 :                     next_bc222:
    1013/     446 :                     	; 1. ea = *REGPC; *((char *)(ea+1)) = TC;
    1014/     446 : CD 3B 05            	call	insBRK_brp
    1015/     449 : DA 06 05            	jp	c, err_trace_seq
    1016/     44C :                     	
    1017/     44C :                     next_bc221:
    1018/     44C :                     	; 2. ea = *REGPC; *(ea+3) = TC;
    1019/     44C : 0E 02               	ld	c, 2		; second TC point
    1020/     44E :                     next_bc22:
    1021/     44E : CD 31 05            	call	insBRK_3op
    1022/     451 : DA 06 05            	jp	c, err_trace_seq
    1023/     454 :                     
    1024/     454 : C3 03 05            	jp	END_INS_TC
    1025/     457 :                     
    1026/     457 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1027/     457 :                     ; 1 insertion Trace code(TC) 
    1028/     457 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1029/     457 :                     INSTC1:
    1030/     457 :                     	; check 1 byte machine code: branch (return)
    1031/     457 : FE C9               	cp	0C9H		; RET ?
    1032/     459 : 20 0B               	jr	nz, next_bc3	; not RET
    1033/     45B :                     
    1034/     45B :                     	; RET
    1035/     45B :                     	; trace operation:
    1036/     45B :                     	;   ea = *REGSP; *ea = TC;
    1037/     45B : 0E 01               	ld	c, 1		; first TC point
    1038/     45D : CD 47 05            	call	insBRK_sp
    1039/     460 : DA 06 05            	jp	c, err_trace_seq
    1040/     463 : C3 03 05            	jp	END_INS_TC
    1041/     466 :                     
    1042/     466 :                     	; check RST p
    1043/     466 :                     next_bc3:
    1044/     466 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    1045/     469 : 21 9B 05            	ld	hl, RST_TBLS
    1046/     46C : ED B1               	cpir
    1047/     46E : 20 0B               	jr	nz, next_bc4		; not RST p
    1048/     470 :                     
    1049/     470 :                     	; RST p
    1050/     470 :                     	; can't trace: skip trace
    1051/     470 :                     	; trace operation:
    1052/     470 :                     	;   ea = *REGPC; *(ea+1) = TC;
    1053/     470 :                     ;	ld	hl, RST_DMSG
    1054/     470 :                     ;	call	STROUT		; message out "DETECT RST OPCODE"
    1055/     470 : 0E 01               	ld	c, 1		; first TC point
    1056/     472 : CD 27 05            	call	insBRK_1op
    1057/     475 : DA 06 05            	jp	c, err_trace_seq
    1058/     478 :                     	
    1059/     478 : C3 03 05            	jp	END_INS_TC
    1060/     47B :                     
    1061/     47B :                     ;RST_DMSG:
    1062/     47B :                     ;	db	"(RST nn) WILL BE SKIPPED. AND TRACE NEXT OPCODE", CR, LF,00
    1063/     47B :                     
    1064/     47B :                     	; check code 0EDH
    1065/     47B :                     next_bc4:
    1066/     47B : FE ED               	cp	0EDH		; CODE 0EDH ?
    1067/     47D : 20 13               	jr	nz, next_bc5	; not 0EDH
    1068/     47F :                     
    1069/     47F : 23                  	inc	hl
    1070/     480 : 7E                  	ld	a, (hl)
    1071/     481 : FE 45               	cp	45H		; RETN?
    1072/     483 : 28 04               	jr	z, next_bc6	; yes, RETN
    1073/     485 : FE 4D               	cp	4DH		; RETI?
    1074/     487 : 20 09               	jr	nz, next_bc5	; not RETN
    1075/     489 :                     
    1076/     489 :                     	; trace operation:
    1077/     489 :                     	;   ea = *REGSP; *ea = TC;
    1078/     489 :                     next_bc6:
    1079/     489 : 0E 01               	ld	c, 1		; first TC point
    1080/     48B : CD 47 05            	call	insBRK_sp
    1081/     48E : 38 76               	jr	c, err_trace_seq
    1082/     490 : 18 71               	jr	END_INS_TC
    1083/     492 :                     
    1084/     492 :                     	; check JP (HL)
    1085/     492 :                     next_bc5:
    1086/     492 : 2A 5A EF            	ld	hl, (tmpT)
    1087/     495 : 7E                  	ld	a, (hl)
    1088/     496 :                     
    1089/     496 : FE E9               	cp	0E9H		; JP (HL) ?
    1090/     498 : 20 0C               	jr	nz, next_bc7	; not JP (HL)
    1091/     49A :                     
    1092/     49A :                     	; JP (HL)
    1093/     49A :                     	; trace operation:
    1094/     49A :                     	;   ea = *REGHL; *ea = TC;
    1095/     49A : 2A 32 EF            	ld	hl, (REGHL)
    1096/     49D :                     jphl:
    1097/     49D : 0E 01               	ld	c, 1		; first TC point
    1098/     49F : CD 54 05            	call	inadr_chk_and_wrt
    1099/     4A2 : 38 62               	jr	c, err_trace_seq
    1100/     4A4 : 18 5D               	jr	END_INS_TC
    1101/     4A6 :                     
    1102/     4A6 :                     	; check JP (IX)
    1103/     4A6 :                     next_bc7:
    1104/     4A6 : FE DD               	cp	0DDH		; 1st OPOCDE 0DDH ?
    1105/     4A8 : 20 0B               	jr	nz, next_bc8	; no 0DDH
    1106/     4AA : 23                  	inc	hl
    1107/     4AB : 7E                  	ld	a, (hl)
    1108/     4AC : FE E9               	cp	0E9H		; JP (IX) ?
    1109/     4AE : 20 05               	jr	nz, next_bc8	; not JP (IX)
    1110/     4B0 :                     
    1111/     4B0 :                     	; JP (IX)
    1112/     4B0 :                     	; trace operation:
    1113/     4B0 :                     	;   ea = *REGIX; *ea = TC;
    1114/     4B0 : 2A 3C EF            	ld	hl, (REGIX)
    1115/     4B3 : 18 E8               	jr	jphl
    1116/     4B5 :                     
    1117/     4B5 :                     	; check JP (IY)
    1118/     4B5 :                     next_bc8:
    1119/     4B5 : 2A 5A EF            	ld	hl, (tmpT)
    1120/     4B8 : 7E                  	ld	a, (hl)
    1121/     4B9 :                     
    1122/     4B9 : FE FD               	cp	0FDH		; 1st OPOCDE 0FDH ?
    1123/     4BB : 20 0B               	jr	nz, next_bc9	; no 0FDH
    1124/     4BD : 23                  	inc	hl
    1125/     4BE : 7E                  	ld	a, (hl)
    1126/     4BF : FE E9               	cp	0E9H		; JP (IX) ?
    1127/     4C1 : 20 05               	jr	nz, next_bc9	; not JP (IX)
    1128/     4C3 :                     
    1129/     4C3 :                     	; JP (IY)
    1130/     4C3 :                     	; trace operation:
    1131/     4C3 :                     	;   ea = *REGIY; *ea = TC;
    1132/     4C3 : 2A 3E EF            	ld	hl, (REGIY)
    1133/     4C6 : 18 D5               	jr	jphl
    1134/     4C8 :                     
    1135/     4C8 :                     	; check JR relative
    1136/     4C8 :                     next_bc9:
    1137/     4C8 : 2A 5A EF            	ld	hl, (tmpT)
    1138/     4CB : 7E                  	ld	a, (hl)
    1139/     4CC : FE 18               	cp	18H		; JR relative ?
    1140/     4CE : 20 0C               	jr	nz, next_bc10	; not JR relative
    1141/     4D0 :                     
    1142/     4D0 :                     	; JR Relative
    1143/     4D0 :                     	; trace operation:
    1144/     4D0 :                     	;   ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
    1145/     4D0 : 0E 01               	ld	c, 1		; first TC point
    1146/     4D2 : CD 1A 05            	call	Rel_adr_c
    1147/     4D5 : CD 54 05            	call	inadr_chk_and_wrt
    1148/     4D8 : 38 2C               	jr	c, err_trace_seq
    1149/     4DA : 18 27               	jr	END_INS_TC
    1150/     4DC :                     
    1151/     4DC :                     	; check JP literal
    1152/     4DC :                     next_bc10:
    1153/     4DC : FE C3               	cp	0C3H		; JP literal ?
    1154/     4DE : 20 09               	jr	nz, next_bc11	; not JP literal
    1155/     4E0 :                     
    1156/     4E0 :                     	; JP literal
    1157/     4E0 :                     	; trace operation:
    1158/     4E0 :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1159/     4E0 : 0E 01               	ld	c, 1		; first TC point
    1160/     4E2 : CD 3B 05            	call	insBRK_brp
    1161/     4E5 : 38 1F               	jr	c, err_trace_seq
    1162/     4E7 : 18 1A               	jr	END_INS_TC
    1163/     4E9 :                     
    1164/     4E9 :                     	; check call literal
    1165/     4E9 :                     next_bc11:
    1166/     4E9 : FE CD               	cp	0CDH		; CALL literal ?
    1167/     4EB : C2 A3 05            	jp	nz, INS2	; no, check not branch opcode 
    1168/     4EE :                     
    1169/     4EE :                     	; CALL literal
    1170/     4EE :                     	; trace operation:
    1171/     4EE :                     	; TM_mode = 'I'
    1172/     4EE :                     	;   ea = *REGPC; *((short *)(ea+1)) = TC;
    1173/     4EE :                     	; TM_mode = 'S'
    1174/     4EE :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1175/     4EE :                     
    1176/     4EE : 0E 01               	ld	c, 1		; first TC point
    1177/     4F0 : 3A 57 EF            	ld	a, (TM_mode)
    1178/     4F3 : FE 53               	cp	'S'
    1179/     4F5 : 28 07               	jr	z, next_bc111	; yes, TM_mode='S'
    1180/     4F7 :                     
    1181/     4F7 :                     	; TM_mode = 'I'
    1182/     4F7 :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1183/     4F7 : CD 3B 05            	call	insBRK_brp
    1184/     4FA : 38 0A               	jr	c, err_trace_seq
    1185/     4FC : 18 05               	jr	END_INS_TC
    1186/     4FE :                     
    1187/     4FE :                     	; TM_mode = 'S'
    1188/     4FE :                     	; ea = *REGPC; *(ea+3) = TC;
    1189/     4FE :                     next_bc111:
    1190/     4FE : CD 31 05            	call	insBRK_3op
    1191/     501 : 38 03               	jr	c, err_trace_seq
    1192/     503 :                     
    1193/     503 :                     END_INS_TC:
    1194/     503 : C3 8A 13            	jp	G0	; go, trace operation
    1195/     506 :                     
    1196/     506 :                     err_trace_seq:
    1197/     506 : 21 10 05            	ld	hl, terr_msg
    1198/     509 : CD 48 17            	call	STROUT
    1199/     50C : C3 BE 00            	JP	WSTART
    1200/     50F : FF                  	rst	38h
    1201/     510 :                     ;	
    1202/     510 : 41 64 72 20 45 52   terr_msg:	db	"Adr ERR", CR, LF, 00H
              516 : 52 0D 0A 00       
    1203/     51A :                     
    1204/     51A :                     ;--------------------------------------
    1205/     51A :                     ; 2 byte machine code branch
    1206/     51A :                     ; - 2nd byte is Relative address
    1207/     51A :                     ; - input hl : opecode address
    1208/     51A :                     ; - output hl : target address
    1209/     51A :                     ;--------------------------------------
    1210/     51A :                     Rel_adr_c:
    1211/     51A : 23                  	inc	hl
    1212/     51B : 5E                  	ld	e, (hl)		; e = 2nd operand
    1213/     51C : 23                  	inc	hl		; hl = PC + 2
    1214/     51D : 16 FF               	ld	d, 0ffh
    1215/     51F : CB 7B               	bit	7, e		; test msb bit
    1216/     521 : 20 02               	jr	nz, exp_msb	; 
    1217/     523 : 16 00               	ld	d, 0
    1218/     525 :                     exp_msb:
    1219/     525 : 19                  	add	hl, de
    1220/     526 : C9                  	ret
    1221/     527 :                     
    1222/     527 :                     ;--------------------------------------
    1223/     527 :                     ; 1 byte op code, insert TC
    1224/     527 :                     ; ea = *REGPC; *(ea+1) = TC
    1225/     527 :                     ;--------------------------------------
    1226/     527 :                     insBRK_1op:
    1227/     527 :                     ;	ld	hl, (REGPC)
    1228/     527 : 2A 5A EF            	ld	hl, (tmpT)
    1229/     52A : 18 0A               	jr	ib1
    1230/     52C :                     	
    1231/     52C :                     ;--------------------------------------
    1232/     52C :                     ; 2 byte op code, insert TC
    1233/     52C :                     ; ea = *REGPC; *(ea+2) = TC
    1234/     52C :                     ;--------------------------------------
    1235/     52C :                     insBRK_2op:
    1236/     52C :                     ;	ld	hl, (REGPC)
    1237/     52C : 2A 5A EF            	ld	hl, (tmpT)
    1238/     52F : 18 04               	jr	ib2
    1239/     531 :                     	
    1240/     531 :                     ;--------------------------------------
    1241/     531 :                     ; 3 byte op code, insert TC
    1242/     531 :                     ; ea = *REGPC; *(ea+3) = TC;
    1243/     531 :                     ;--------------------------------------
    1244/     531 :                     insBRK_3op:
    1245/     531 :                     ;	ld	hl, (REGPC)
    1246/     531 : 2A 5A EF            	ld	hl, (tmpT)
    1247/     534 :                     ib3:
    1248/     534 : 23                  	inc	hl
    1249/     535 :                     ib2:
    1250/     535 : 23                  	inc	hl
    1251/     536 :                     ib1:
    1252/     536 : 23                  	inc	hl
    1253/     537 : CD 54 05            	call	inadr_chk_and_wrt
    1254/     53A : C9                  	ret
    1255/     53B :                     
    1256/     53B :                     ;--------------------------------------
    1257/     53B :                     ; 3 byte op code, insert TC in branch point
    1258/     53B :                     ; ea = *REGPC; *((char *)(ea+1)) = TC;
    1259/     53B :                     ;--------------------------------------
    1260/     53B :                     insBRK_brp:
    1261/     53B :                     ;	ld	hl, (REGPC)
    1262/     53B : 2A 5A EF            	ld	hl, (tmpT)
    1263/     53E : 23                  	inc	hl
    1264/     53F : 5E                  	ld	e, (hl)
    1265/     540 : 23                  	inc	hl
    1266/     541 : 56                  	ld	d, (hl)
    1267/     542 : EB                  	ex	de,  hl
    1268/     543 : CD 54 05            	call	inadr_chk_and_wrt
    1269/     546 : C9                  	ret
    1270/     547 :                     
    1271/     547 :                     ;--------------------------------------
    1272/     547 :                     ; insert TC at SP
    1273/     547 :                     ; ea = *REGSP; *ea = TC;
    1274/     547 :                     ;--------------------------------------
    1275/     547 :                     insBRK_sp:
    1276/     547 : ED 5B 40 EF         	ld	de, (REGSP)
    1277/     54B : 1A                  	ld	a, (de)
    1278/     54C : 6F                  	ld	l, a
    1279/     54D : 13                  	inc	de
    1280/     54E : 1A                  	ld	a, (de)
    1281/     54F : 67                  	ld	h, a		; hl = *sp
    1282/     550 : CD 54 05            	call	inadr_chk_and_wrt
    1283/     553 : C9                  	ret
    1284/     554 :                     
    1285/     554 :                     ;--------------------------------------
    1286/     554 :                     ; check (HL) is RAM AREA
    1287/     554 :                     ; insert Trace code at (HL)
    1288/     554 :                     ;--------------------------------------
    1289/     554 :                     inadr_chk_and_wrt:
    1290/     554 : 7C                  	ld	a, h
    1291/     555 :                     
    1292/     555 : FE C0               	cp	RAM_B >> 8		; 80H
    1293/     557 : 38 23               	jr	c, NO_RAM_AREA
    1294/     559 : FE EF               	cp	RAM_E >> 8		; 8FH
    1295/     55B : 30 1F               	jr	nc, NO_RAM_AREA
    1296/     55D :                     
    1297/     55D : 79                  	ld	a, c
    1298/     55E : FE 01               	cp	1		;first save?
    1299/     560 : 20 0D               	jr	nz, icka1
    1300/     562 : 11 5D EF            	ld	de, tpt1_f
    1301/     565 : 12                  	ld	(de), a		; set trace ON
    1302/     566 : 22 5F EF            	ld	(tpt1_adr), hl
    1303/     569 : 7E                  	ld	a, (hl)		; get opcode
    1304/     56A : 32 5E EF            	ld	(tpt1_op), a	; save opcode
    1305/     56D : 18 0B               	jr	icka_end
    1306/     56F :                     icka1:
    1307/     56F : 11 61 EF            	ld	de, tpt2_f
    1308/     572 : 12                  	ld	(de), a		; set trace ON
    1309/     573 : 22 63 EF            	ld	(tpt2_adr), hl
    1310/     576 : 7E                  	ld	a, (hl)		; get opcode
    1311/     577 : 32 62 EF            	ld	(tpt2_op), a	; save opcode
    1312/     57A :                     icka_end:
    1313/     57A : AF                  	xor	a
    1314/     57B : C9                  	ret
    1315/     57C :                     
    1316/     57C :                     NO_RAM_AREA:
    1317/     57C : 37                  	SCF
    1318/     57D : C9                  	ret
    1319/     57E :                     	
    1320/     57E :                     
    1321/     57E :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1322/     57E :                     ; 2 insertion TC TABLE
    1323/     57E :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1324/     57E :                     ;
    1325/     57E :                     ; 1 byte machine code: branch (RET CC)
    1326/     57E :                     RETCC_TBLS:
    1327/     57E : C0                  	DB	0C0H	; RET	NZ
    1328/     57F : C8                  	DB	0C8H	; RET	Z
    1329/     580 : D0                  	DB	0D0H	; RET	NC
    1330/     581 : D8                  	DB	0D8H	; RET	C
    1331/     582 : E0                  	DB	0E0H	; RET	PO
    1332/     583 : E8                  	DB	0E8H	; RET	PE
    1333/     584 : F0                  	DB	0F0H	; RET	P
    1334/     585 : F8                  	DB	0F8H	; RET	M
    1335/     586 :                     RETCC_TBLE:
    1336/     586 :                     
    1337/     586 :                     ; 2 byte machine code: branch (JR CC, Relative)
    1338/     586 :                     JRCC_TBLS:
    1339/     586 : 10                  	DB	10H	; DJNZ	$
    1340/     587 :                     JRCC_TBLS1:
    1341/     587 : 20                  	DB	20H	; JR	NZ,$
    1342/     588 : 28                  	DB	28H	; JR	Z,$
    1343/     589 : 30                  	DB	30H	; JR	NC,$
    1344/     58A : 38                  	DB	38H	; JR	C,$
    1345/     58B :                     JRCC_TBLE:
    1346/     58B :                     
    1347/     58B :                     ; 3 byte machine code: branch (JP CC, 16bit literal)
    1348/     58B :                     JPCC_TBLS:
    1349/     58B : C2                  	DB	0C2H	; JP	NZ,1234H
    1350/     58C : CA                  	DB	0CAH	; JP	Z,1234H
    1351/     58D : D2                  	DB	0D2H	; JP	NC,1234H
    1352/     58E : DA                  	DB	0DAH	; JP	C,1234H
    1353/     58F : E2                  	DB	0E2H	; JP	PO,1234H
    1354/     590 : EA                  	DB	0EAH	; JP	PE,1234H
    1355/     591 : F2                  	DB	0F2H	; JP	P,1234H
    1356/     592 : FA                  	DB	0FAH	; JP	M,1234H
    1357/     593 :                     JPCC_TBLE:
    1358/     593 :                     
    1359/     593 :                     ; (call 16bit literal)
    1360/     593 :                     CLCC_TBLS:
    1361/     593 : C4                  	DB	0C4H	; CALL	NZ,1234H
    1362/     594 : CC                  	DB	0CCH	; CALL	Z,1234H
    1363/     595 : D4                  	DB	0D4H	; CALL	NC,1234H
    1364/     596 : DC                  	DB	0DCH	; CALL	C,1234H
    1365/     597 : E4                  	DB	0E4H	; CALL	PO,1234H
    1366/     598 : EC                  	DB	0ECH	; CALL	PE,1234H
    1367/     599 : F4                  	DB	0F4H	; CALL	P,1234H
    1368/     59A : FC                  	DB	0FCH	; CALL	M,1234H
    1369/     59B :                     CLCC_TBLE:
    1370/     59B :                     
    1371/     59B :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1372/     59B :                     ; 1 insertion TC TABLE
    1373/     59B :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1374/     59B :                     
    1375/     59B :                     ; restart
    1376/     59B :                     RST_TBLS:
    1377/     59B : C7                  	DB	0C7H	; RST	00H
    1378/     59C : CF                  	DB	0CFH	; RST	08H
    1379/     59D : D7                  	DB	0D7H	; RST	10H
    1380/     59E : DF                  	DB	0DFH	; RST	18H
    1381/     59F : E7                  	DB	0E7H	; RST	20H
    1382/     5A0 : EF                  	DB	0EFH	; RST	28H
    1383/     5A1 : F7                  	DB	0F7H	; RST	30H
    1384/     5A2 : FF                  	DB	0FFH	; RST	38H
    1385/     5A3 :                     RST_TBLE:
    1386/     5A3 :                     
    1387/     5A3 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1388/     5A3 :                     ;;;
    1389/     5A3 :                     ;;; machine code check(except branch)
    1390/     5A3 :                     ;;;
    1391/     5A3 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1392/     5A3 :                     INS2:
    1393/     5A3 :                     
    1394/     5A3 :                     	; 2byte machine code search
    1395/     5A3 : 01 12 00            	ld	bc, TWO_OPTBL_E - TWO_OPTBL
    1396/     5A6 : 21 3C 06            	ld	hl, TWO_OPTBL
    1397/     5A9 : ED B1               	cpir
    1398/     5AB : CA 17 06            	jp	z, meet_op2
    1399/     5AE :                     
    1400/     5AE :                     	; 3byte machine code search
    1401/     5AE : 01 08 00            	ld	bc, THREE_OPTBL_E - THREE_OPTBL
    1402/     5B1 : 21 4E 06            	ld	hl, THREE_OPTBL
    1403/     5B4 : ED B1               	cpir
    1404/     5B6 : CA 22 06            	jp	z, meet_op3
    1405/     5B9 :                     
    1406/     5B9 :                     	; check 0CBH
    1407/     5B9 :                     	
    1408/     5B9 :                     	; readjust hl
    1409/     5B9 : 2A 5A EF            	ld	hl, (tmpT)
    1410/     5BC :                     
    1411/     5BC : FE CB               	cp	0CBH		; opecode 0CBH?
    1412/     5BE : 28 57               	jr	z, meet_op2
    1413/     5C0 :                     	
    1414/     5C0 :                     	; check 0DDH
    1415/     5C0 : FE DD               	cp	0ddh		; opecode 0DDH?
    1416/     5C2 : 28 0A               	jr	z, meet_dd
    1417/     5C4 :                     	
    1418/     5C4 :                     	; check 0EDH
    1419/     5C4 : FE ED               	cp	0edh		; opecode 0EDH?
    1420/     5C6 : 28 28               	jr	z, meet_ed
    1421/     5C8 :                     
    1422/     5C8 :                     	; check 0FDH
    1423/     5C8 : FE FD               	cp	0fdh		; opecode 0FDH?
    1424/     5CA : 28 02               	jr	z, meet_dd
    1425/     5CC :                     
    1426/     5CC :                     	; 1byte machine code
    1427/     5CC : 18 3E               	jr	meet_op1
    1428/     5CE :                     
    1429/     5CE :                     	; opecode 0DDh
    1430/     5CE :                     meet_dd:
    1431/     5CE : 23                  	inc	hl
    1432/     5CF : 7E                  	ld	a, (hl)	
    1433/     5D0 : FE CB               	cp	0cbh		; 2nd 0CBH?
    1434/     5D2 : 28 59               	jr	z, meet_op4
    1435/     5D4 : FE 21               	cp	21h		; 2nd 21H?
    1436/     5D6 : 28 55               	jr	z, meet_op4
    1437/     5D8 : FE 22               	cp	22h		; 2nd 22H?
    1438/     5DA : 28 51               	jr	z, meet_op4
    1439/     5DC : FE 2A               	cp	2ah		; 2nd 2AH?
    1440/     5DE : 28 4D               	jr	z, meet_op4
    1441/     5E0 : FE 36               	cp	36h		; 2nd 36H?
    1442/     5E2 : 28 49               	jr	z, meet_op4
    1443/     5E4 :                     
    1444/     5E4 :                     	; 2nd code search
    1445/     5E4 : 01 0A 00            	ld	bc, DD_2NDTBL_E - DD_2NDTBL
    1446/     5E7 : 21 56 06            	ld	hl, DD_2NDTBL
    1447/     5EA : ED B1               	cpir
    1448/     5EC : 28 29               	jr	z, meet_op2
    1449/     5EE : 18 32               	jr	meet_op3
    1450/     5F0 :                     
    1451/     5F0 :                     meet_ed:
    1452/     5F0 : 23                  	inc	hl
    1453/     5F1 : 7E                  	ld	a, (hl)	
    1454/     5F2 : FE 43               	cp	43h		; 2nd 43H?
    1455/     5F4 : 28 37               	jr	z, meet_op4
    1456/     5F6 : FE 4B               	cp	4bh		; 2nd 4BH?
    1457/     5F8 : 28 33               	jr	z, meet_op4
    1458/     5FA : FE 53               	cp	53h		; 2nd 53H?
    1459/     5FC : 28 2F               	jr	z, meet_op4
    1460/     5FE : FE 5B               	cp	5bh		; 2nd 5BH?
    1461/     600 : 28 2B               	jr	z, meet_op4
    1462/     602 : FE 73               	cp	73h		; 2nd 73H?
    1463/     604 : 28 27               	jr	z, meet_op4
    1464/     606 : FE 7B               	cp	7bh		; 2nd 7BH?
    1465/     608 : 28 23               	jr	z, meet_op4
    1466/     60A : 18 0B               	jr	meet_op2
    1467/     60C :                     
    1468/     60C :                     ; 1 machine code
    1469/     60C :                     meet_op1:
    1470/     60C : 0E 01               	ld	c, 1
    1471/     60E : CD 27 05            	call	insBRK_1op
    1472/     611 : DA 06 05            	jp	c, err_trace_seq
    1473/     614 : C3 03 05            	jp	END_INS_TC
    1474/     617 :                     
    1475/     617 :                     ; 2 machine code
    1476/     617 :                     meet_op2:
    1477/     617 : 0E 01               	ld	c, 1
    1478/     619 : CD 2C 05            	call	insBRK_2op
    1479/     61C : DA 06 05            	jp	c, err_trace_seq
    1480/     61F : C3 03 05            	jp	END_INS_TC
    1481/     622 :                     ; 3 machine code
    1482/     622 :                     meet_op3:
    1483/     622 : 0E 01               	ld	c, 1
    1484/     624 : CD 31 05            	call	insBRK_3op
    1485/     627 : DA 06 05            	jp	c, err_trace_seq
    1486/     62A : C3 03 05            	jp	END_INS_TC
    1487/     62D :                     
    1488/     62D :                     ; 4 machine codee
    1489/     62D :                     meet_op4:
    1490/     62D : 0E 01               	ld	c, 1
    1491/     62F :                     ;	ld	hl, (REGPC)
    1492/     62F : 2A 5A EF            	ld	hl, (tmpT)
    1493/     632 : 23                  	inc	hl
    1494/     633 : CD 34 05            	call	ib3
    1495/     636 : DA 06 05            	jp	c, err_trace_seq
    1496/     639 : C3 03 05            	jp	END_INS_TC
    1497/     63C :                     
    1498/     63C :                     TWO_OPTBL:	; second byte is 8bitliteral[nn]
    1499/     63C :                     ld_r_nn_s:
    1500/     63C : 06                  	DB	06h	; LD	B,nn
    1501/     63D : 0E                  	DB	0Eh	; LD	C,nn
    1502/     63E : 16                  	DB	16h	; LD	D,nn
    1503/     63F : 1E                  	DB	1Eh	; LD	E,nn
    1504/     640 : 26                  	DB	26h	; LD	H,nn
    1505/     641 : 2E                  	DB	2Eh	; LD	L,nn
    1506/     642 : 36                  	DB	36h	; LD	(HL),nn
    1507/     643 : 3E                  	DB	3Eh	; LD	A,nn
    1508/     644 :                     ld_r_nn_e:
    1509/     644 :                     
    1510/     644 :                     log_op_s:
    1511/     644 : C6                  	DB	0C6h	; ADD	A,nn
    1512/     645 : CE                  	DB	0CEh	; ADC	A,nn
    1513/     646 : DE                  	DB	0DEh	; SBC	A,nn
    1514/     647 : D6                  	DB	0D6h	; SUB	nn
    1515/     648 : E6                  	DB	0E6h	; AND	nn
    1516/     649 : EE                  	DB	0EEh	; XOR	nn
    1517/     64A : F6                  	DB	0F6h	; OR	nn
    1518/     64B : FE                  	DB	0FEh	; CP	nn
    1519/     64C : DB                  	DB	0DBh	; IN	A,(nn)
    1520/     64D : D3                  	DB	0D3h	; OUT	(nn),A
    1521/     64E :                     log_op_e:
    1522/     64E :                     TWO_OPTBL_E:
    1523/     64E :                     
    1524/     64E :                     THREE_OPTBL:	; 2nd, 3rd byte is 16bitliteral[nnnn]
    1525/     64E : 01                  	DB	01h	; LD	BC,nnnn
    1526/     64F : 11                  	DB	11h	; LD	DE,nnnn
    1527/     650 : 21                  	DB	21h	; LD	HL,nnnn
    1528/     651 : 31                  	DB	31h	; LD	SP,nnnn
    1529/     652 :                     THREE_OPTBLe
    1530/     652 : 22                  	DB	22h	; LD	(nnnn),HL
    1531/     653 : 32                  	DB	32h	; LD	(nnnn),A
    1532/     654 :                     
    1533/     654 : 2A                  	DB	2Ah	; LD	HL,(nnnn)
    1534/     655 : 3A                  	DB	3Ah	; LD	A,(nnnn)
    1535/     656 :                     THREE_OPTBL_E:
    1536/     656 :                     
    1537/     656 :                     DD_2NDTBL:
    1538/     656 : 09                  	DB	09h	; ADD	IX,BC
    1539/     657 : 19                  	DB	19h	; ADD	IX,DE
    1540/     658 : 29                  	DB	29h	; ADD	IX,IX
    1541/     659 : 39                  	DB	39h	; ADD	IX,SP
    1542/     65A :                     DD_2NDTBL1:
    1543/     65A : 23                  	DB	23h	; INC	IX
    1544/     65B : 2B                  	DB	2Bh	; DEC	IX
    1545/     65C : E5                  	DB	0E5h	; PUSH	IX
    1546/     65D : E1                  	DB	0E1h	; POP	IX
    1547/     65E :                     DD_2NDTBL2:
    1548/     65E : E3                  	DB	0E3h	; EX	(SP),IX
    1549/     65F : F9                  	DB	0F9h	; LD	SP,IX
    1550/     660 :                     DD_2NDTBL_E:
    1551/     660 :                     
    1552/     660 :                     ;;; 
    1553/     660 :                     ;;; Dump memory
    1554/     660 :                     ;;; 
    1555/     660 :                     
    1556/     660 :                     DUMP:
    1557/     660 : 23                  	INC	HL
    1558/     661 : 7E                  	LD	A,(HL)
    1559/     662 : FE 49               	cp	'I'
    1560/     664 : CA 68 07            	JP	Z,disassemble
    1561/     667 : CD 02 18            	CALL	SKIPSP
    1562/     66A : CD 12 18            	CALL	RDHEX		; 1st arg.
    1563/     66D : 38 06               	jr	c, DP0
    1564/     66F :                     	;; 1st arg. found
    1565/     66F : ED 53 20 EF         	LD	(DSADDR),DE
    1566/     673 : 18 10               	jr	dp00
    1567/     675 :                     
    1568/     675 :                     DP0:	;; No arg. chk
    1569/     675 :                     
    1570/     675 : E5                  	push	hl
    1571/     676 : 2A 20 EF            	LD	HL,(DSADDR)
    1572/     679 : 01 80 00            	LD	BC,128
    1573/     67C : 09                  	ADD	HL,BC
    1574/     67D : 22 22 EF            	LD	(DEADDR),HL
    1575/     680 : E1                  	pop	hl
    1576/     681 : 7E                  	LD	A,(HL)
    1577/     682 : B7                  	OR	A
    1578/     683 : 28 2B               	JR	z, DPM		; no arg.
    1579/     685 :                     
    1580/     685 :                     dp00:
    1581/     685 : CD 02 18            	CALL	SKIPSP
    1582/     688 : 7E                  	LD	A,(HL)
    1583/     689 : FE 2C               	CP	','
    1584/     68B : 28 0D               	JR	Z,DP1
    1585/     68D : B7                  	OR	A
    1586/     68E : C2 FE 00            	JP	NZ,ERR
    1587/     691 :                     	;; No 2nd arg.
    1588/     691 : 21 80 00            	LD	HL,128
    1589/     694 : 19                  	ADD	HL,DE
    1590/     695 : 22 22 EF            	LD	(DEADDR),HL
    1591/     698 : 18 16               	JR	DPM
    1592/     69A :                     DP1:
    1593/     69A : 23                  	INC	HL
    1594/     69B : CD 02 18            	CALL	SKIPSP
    1595/     69E : CD 12 18            	CALL	RDHEX
    1596/     6A1 : DA FE 00            	jp	c, ERR
    1597/     6A4 : CD 02 18            	CALL	SKIPSP
    1598/     6A7 : B7                  	OR	A
    1599/     6A8 : C2 FE 00            	jp	nz, ERR
    1600/     6AB : 13                  	INC	DE
    1601/     6AC : ED 53 22 EF         	LD	(DEADDR),DE
    1602/     6B0 :                     DPM:
    1603/     6B0 :                     	;; DUMP main
    1604/     6B0 : 2A 20 EF            	LD	HL,(DSADDR)
    1605/     6B3 : 3E F0               	LD	A,0F0H
    1606/     6B5 : A5                  	AND	L
    1607/     6B6 : 6F                  	LD	L,A
    1608/     6B7 : AF                  	XOR	A
    1609/     6B8 : 32 24 EF            	LD	(DSTATE),A
    1610/     6BB :                     DPM0:
    1611/     6BB : E5                  	PUSH	HL
    1612/     6BC : CD E2 06            	CALL	DPL
    1613/     6BF : E1                  	POP	HL
    1614/     6C0 : 01 10 00            	LD	BC,16
    1615/     6C3 : 09                  	ADD	HL,BC
    1616/     6C4 : CD BF 1F            	CALL	CONST
    1617/     6C7 : 20 10               	JR	NZ,DPM1
    1618/     6C9 : 3A 24 EF            	LD	A,(DSTATE)
    1619/     6CC : FE 02               	CP	2
    1620/     6CE : 38 EB               	JR	C,DPM0
    1621/     6D0 : 2A 22 EF            	LD	HL,(DEADDR)
    1622/     6D3 : 22 20 EF            	LD	(DSADDR),HL
    1623/     6D6 : C3 BE 00            	JP	WSTART
    1624/     6D9 :                     DPM1:
    1625/     6D9 : 22 20 EF            	LD	(DSADDR),HL
    1626/     6DC : CD B4 1F            	CALL	CONIN
    1627/     6DF : C3 BE 00            	JP	WSTART
    1628/     6E2 :                     
    1629/     6E2 :                     DPL:
    1630/     6E2 :                     	;; DUMP line
    1631/     6E2 : CD 51 17            	CALL	HEXOUT4
    1632/     6E5 : E5                  	PUSH	HL
    1633/     6E6 : 21 81 1D            	LD	HL,DSEP0
    1634/     6E9 : CD 48 17            	CALL	STROUT
    1635/     6EC : E1                  	POP	HL
    1636/     6ED : DD 21 00 EF         	LD	IX,INBUF
    1637/     6F1 : 06 10               	LD	B,16
    1638/     6F3 :                     DPL0:
    1639/     6F3 : CD 1C 07            	CALL	DPB
    1640/     6F6 : 10 FB               	DJNZ	DPL0
    1641/     6F8 :                     
    1642/     6F8 : 21 84 1D            	LD	HL,DSEP1
    1643/     6FB : CD 48 17            	CALL	STROUT
    1644/     6FE :                     
    1645/     6FE : 21 00 EF            	LD	HL,INBUF
    1646/     701 : 06 10               	LD	B,16
    1647/     703 :                     DPL1:
    1648/     703 : 7E                  	LD	A,(HL)
    1649/     704 : 23                  	INC	HL
    1650/     705 : FE 20               	CP	' '
    1651/     707 : 38 09               	JR	C,DPL2
    1652/     709 : FE 7F               	CP	7FH
    1653/     70B : 30 05               	JR	NC,DPL2
    1654/     70D : CD C5 1F            	CALL	CONOUT
    1655/     710 : 18 05               	JR	DPL3
    1656/     712 :                     DPL2:
    1657/     712 : 3E 2E               	LD	A,'.'
    1658/     714 : CD C5 1F            	CALL	CONOUT
    1659/     717 :                     DPL3:
    1660/     717 : 10 EA               	DJNZ	DPL1
    1661/     719 : C3 91 17            	JP	CRLF
    1662/     71C :                     
    1663/     71C :                     DPB:	; Dump byte
    1664/     71C : 3E 20               	LD	A,' '
    1665/     71E : CD C5 1F            	CALL	CONOUT
    1666/     721 : 3A 24 EF            	LD	A,(DSTATE)
    1667/     724 : B7                  	OR	A
    1668/     725 : 20 20               	JR	NZ,DPB2
    1669/     727 :                     	; Dump state 0
    1670/     727 : 3A 20 EF            	LD	A,(DSADDR)	; Low byte
    1671/     72A : BD                  	CP	L
    1672/     72B : 20 06               	JR	NZ,DPB0
    1673/     72D : 3A 21 EF            	LD	A,(DSADDR+1)	; High byte
    1674/     730 : BC                  	CP	H
    1675/     731 : 28 0F               	JR	Z,DPB1
    1676/     733 :                     DPB0:	; Still 0 or 2
    1677/     733 : 3E 20               	LD	A,' '
    1678/     735 : CD C5 1F            	CALL	CONOUT
    1679/     738 : CD C5 1F            	CALL	CONOUT
    1680/     73B : DD 77 00            	LD	(IX),A
    1681/     73E : 23                  	INC	HL
    1682/     73F : DD 23               	INC	IX
    1683/     741 : C9                  	RET
    1684/     742 :                     DPB1:	; Found start address
    1685/     742 : 3E 01               	LD	A,1
    1686/     744 : 32 24 EF            	LD	(DSTATE),A
    1687/     747 :                     DPB2:
    1688/     747 : 3A 24 EF            	LD	A,(DSTATE)
    1689/     74A : FE 01               	CP	1
    1690/     74C : 20 E5               	JR	NZ,DPB0
    1691/     74E :                     	; Dump state 1
    1692/     74E : 7E                  	LD	A,(HL)
    1693/     74F : DD 77 00            	LD	(IX),A
    1694/     752 : CD 56 17            	CALL	HEXOUT2
    1695/     755 : 23                  	INC	HL
    1696/     756 : DD 23               	INC	IX
    1697/     758 : 3A 22 EF            	LD	A,(DEADDR)	; Low byte
    1698/     75B : BD                  	CP	L
    1699/     75C : C0                  	RET	NZ
    1700/     75D : 3A 23 EF            	LD	A,(DEADDR+1)	; High byte
    1701/     760 : BC                  	CP	H
    1702/     761 : C0                  	RET	NZ
    1703/     762 :                     	; Found end address
    1704/     762 : 3E 02               	LD	A,2
    1705/     764 : 32 24 EF            	LD	(DSTATE),A
    1706/     767 : C9                  	RET
    1707/     768 :                     
    1708/     768 :                     ;;;
    1709/     768 :                     ;;; Disassemble
    1710/     768 :                     ;;; 
    1711/     768 :                     
    1712/     768 :                     
    1713/     768 :                     ; DI[<address>][,s<steps>|<end address>]
    1714/     768 :                     
    1715/     768 :                     disassemble:
    1716/     768 : 23                  	INC	HL
    1717/     769 : CD 02 18            	CALL	SKIPSP
    1718/     76C : CD 12 18            	CALL	RDHEX		; 1st arg.
    1719/     76F : 30 14               	jr	nc, get_DI1
    1720/     771 :                     
    1721/     771 :                     di_nxt:
    1722/     771 :                     	;; No arg. chk
    1723/     771 : CD 02 18            	CALL	SKIPSP
    1724/     774 : 7E                  	LD	A,(HL)
    1725/     775 : B7                  	OR	A
    1726/     776 : 20 13               	jr	NZ, chk_DI1	; ',' check
    1727/     778 :                     
    1728/     778 :                     ; No arg
    1729/     778 : 26 00               	ld	h, 0
    1730/     77A : 2E 0A               	ld	l, 10
    1731/     77C : 7D                  	ld	a, l
    1732/     77D : 32 7C EF            	ld	(dasm_stpf), a	; set step flag
    1733/     780 : 22 7A EF            	ld	(dasm_ed), hl	; set 10 steps
    1734/     783 : 18 33               	jr	DISASM_go
    1735/     785 :                     
    1736/     785 :                     ; 1st arg
    1737/     785 :                     get_DI1:
    1738/     785 : ED 53 7D EF         	ld	(dasm_adr), de	; save start address
    1739/     789 :                     ;	INC	HL
    1740/     789 : 18 E6               	jr	di_nxt
    1741/     78B :                     
    1742/     78B :                     chk_DI1:
    1743/     78B : FE 2C               	cp	','
    1744/     78D : C2 FE 00            	jp	nz, ERR
    1745/     790 :                     
    1746/     790 :                     ; check 2nd arg
    1747/     790 :                     
    1748/     790 : 23                  	INC	HL
    1749/     791 : CD 02 18            	CALL	SKIPSP
    1750/     794 :                     ;	call	UPPER
    1751/     794 : FE 53               	cp	'S'
    1752/     796 : 20 12               	jr	nz, chk_stpDI
    1753/     798 :                     
    1754/     798 :                     ; step arg
    1755/     798 : 3E 01               	ld	a, 1
    1756/     79A : 32 7C EF            	ld	(dasm_stpf), a	; set step flag
    1757/     79D : 23                  	inc	hl
    1758/     79E : CD B6 01            	call	GET_NUM		; get decimal number to binary
    1759/     7A1 : DA FE 00            	jp	c, ERR
    1760/     7A4 : ED 43 7A EF         	ld	(dasm_ed), bc	; set steps
    1761/     7A8 : 18 0E               	jr	DISASM_go
    1762/     7AA :                     
    1763/     7AA :                     chk_stpDI:
    1764/     7AA : CD 12 18            	CALL	RDHEX		; 2nd arg.
    1765/     7AD : DA FE 00            	jp	c, ERR
    1766/     7B0 : ED 53 7A EF         	ld	(dasm_ed), de	; set end address
    1767/     7B4 : AF                  	xor	a
    1768/     7B5 : 32 7C EF            	ld	(dasm_stpf), a	; clear step flag
    1769/     7B8 :                     
    1770/     7B8 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1771/     7B8 :                     ; operation Disassemble
    1772/     7B8 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1773/     7B8 :                     
    1774/     7B8 :                     DISASM_go:
    1775/     7B8 : CD BF 1F            	call	CONST
    1776/     7BB : 28 06               	jr	z, dis_go1
    1777/     7BD : CD B4 1F            	call	CONIN		;discard key
    1778/     7C0 : C3 BE 00            	jp	WSTART		; exit disasm command
    1779/     7C3 :                     
    1780/     7C3 :                     dis_go1:
    1781/     7C3 :                     	; get opcode
    1782/     7C3 : CD 47 08            	call	dis_analysis
    1783/     7C6 : CD 0C 08            	call	mk_adr_str	; conout address and machine code
    1784/     7C9 :                     				; *dasm_adr is next opcode address
    1785/     7C9 : 21 84 EF            	ld	hl, adr_mc_buf
    1786/     7CC : CD 48 17            	call	STROUT		; conout disassemble strings
    1787/     7CF :                     
    1788/     7CF : 3A 7C EF            	ld	a, (dasm_stpf)
    1789/     7D2 : B7                  	or	a
    1790/     7D3 : 20 0E               	jr	nz, calc_dis_step
    1791/     7D5 :                     	
    1792/     7D5 :                     	; *dasm_adr > *dasm_ed ?, yes, finish
    1793/     7D5 : 2A 7A EF            	ld	hl, (dasm_ed)
    1794/     7D8 : ED 4B 7D EF         	ld	bc, (dasm_adr)
    1795/     7DC : ED 42               	sbc	hl, bc
    1796/     7DE : 30 D8               	jr	nc, DISASM_go
    1797/     7E0 : C3 BE 00            	jp	WSTART
    1798/     7E3 :                     
    1799/     7E3 :                     calc_dis_step:
    1800/     7E3 : 2A 7A EF            	ld	hl, (dasm_ed)
    1801/     7E6 : 2B                  	dec	hl
    1802/     7E7 : 22 7A EF            	ld	(dasm_ed), hl
    1803/     7EA : 7C                  	ld	a, h
    1804/     7EB : B5                  	or	l
    1805/     7EC : 20 CA               	jr	nz, DISASM_go
    1806/     7EE : C3 BE 00            	jp	WSTART
    1807/     7F1 :                     
    1808/     7F1 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1809/     7F1 :                     ; Disassemble and maked strings to user buffer
    1810/     7F1 :                     ; input de : user buffer
    1811/     7F1 :                     ;       hl : disassemble address
    1812/     7F1 :                     ; output de : next MC address
    1813/     7F1 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1814/     7F1 :                     get_disasm_st:
    1815/     7F1 : 22 7D EF            	ld	(dasm_adr), hl
    1816/     7F4 : D5                  	push	de
    1817/     7F5 : CD 47 08            	call	dis_analysis
    1818/     7F8 : CD 0C 08            	call	mk_adr_str	; conout address and machine code
    1819/     7FB : D1                  	pop	de
    1820/     7FC : 21 84 EF            	ld	hl, adr_mc_buf
    1821/     7FF : 01 2A 00            	ld	bc, dasm_be - dasm_bs
    1822/     802 : ED B0               	ldir
    1823/     804 : ED 5B 7D EF         	ld	de, (dasm_adr)
    1824/     808 : 3A 83 EF            	ld	a, (mc_Size)
    1825/     80B : C9                  	ret
    1826/     80C :                     
    1827/     80C :                     ;-------------------------------------------------
    1828/     80C :                     ; Make address and machine code at adr_mc_buf
    1829/     80C :                     ; "XXXX XX XX XX XX " (17bytes)
    1830/     80C :                     ;-------------------------------------------------
    1831/     80C :                     mk_adr_str:
    1832/     80C : 21 84 EF            	ld	hl, adr_mc_buf
    1833/     80F : ED 5B 7D EF         	ld	de, (dasm_adr)
    1834/     813 : CD E7 0F            	call	hex4str		; address XXXX
    1835/     816 : CD 77 10            	call	ins_spcR
    1836/     819 : CD 77 10            	call	ins_spcR
    1837/     81C :                     
    1838/     81C : 06 04               	ld	b, 4
    1839/     81E : 3A 83 EF            	ld	a, (mc_Size)
    1840/     821 : 4F                  	ld	c, a
    1841/     822 :                     mas_1:
    1842/     822 : 1A                  	ld	a, (de)
    1843/     823 : 13                  	inc	de
    1844/     824 :                     
    1845/     824 : D5                  	push	de
    1846/     825 : 5F                  	ld	e, a
    1847/     826 : CD EF 0F            	call	hex2str		; MC XX
    1848/     829 : CD 77 10            	call	ins_spcR
    1849/     82C : D1                  	pop	de
    1850/     82D :                     
    1851/     82D : 05                  	dec	b
    1852/     82E : 28 0F               	jr	z, mas_3	; end
    1853/     830 : 0D                  	dec	c
    1854/     831 : 20 EF               	jr	nz, mas_1
    1855/     833 :                     
    1856/     833 :                     mas_2:	
    1857/     833 : CD 77 10            	call	ins_spcR
    1858/     836 : CD 77 10            	call	ins_spcR
    1859/     839 : CD 77 10            	call	ins_spcR
    1860/     83C : 05                  	dec	b
    1861/     83D : 20 F4               	jr	nz, mas_2
    1862/     83F :                     mas_3:
    1863/     83F : CD 77 10            	call	ins_spcR
    1864/     842 : ED 53 7D EF         	ld	(dasm_adr), de	; set next analysis address
    1865/     846 : C9                  	ret
    1866/     847 :                     
    1867/     847 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1868/     847 :                     ; dis assemble analysis
    1869/     847 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1870/     847 :                     
    1871/     847 :                     dis_analysis:
    1872/     847 :                     
    1873/     847 :                     	; pre init string buffer
    1874/     847 :                     
    1875/     847 : 3E 01               	ld	a, 1
    1876/     849 : 32 83 EF            	ld	(mc_Size), a
    1877/     84C :                     
    1878/     84C : 11 46 11            	ld	de, LDstr	; insert LD string
    1879/     84F : CD 0B 10            	call	mkopcstr
    1880/     852 :                     
    1881/     852 : 21 9F EF            	ld	hl, dasm_OprStr
    1882/     855 : CD 37 10            	call	insPostStr	; CR, LF, 00h
    1883/     858 :                     
    1884/     858 : 2A 7D EF            	ld	hl, (dasm_adr)
    1885/     85B : 7E                  	ld	a, (hl)		; get opcode
    1886/     85C :                     
    1887/     85C :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1888/     85C :                     	; analysys 1 byte MC
    1889/     85C :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1890/     85C :                     
    1891/     85C :                     ;  check no operand
    1892/     85C :                     
    1893/     85C : 01 0D 00            	ld	bc, oth_1op_e - oth_1op_s
    1894/     85F : 21 8A 10            	ld	hl, oth_1op_s
    1895/     862 : ED B1               	cpir
    1896/     864 : 20 12               	jr	nz, chk_ld
    1897/     866 :                     
    1898/     866 :                     ;  no operand
    1899/     866 :                     
    1900/     866 : 21 99 12            	ld	hl, oth_1op_tbl
    1901/     869 : CD 8D 0F            	call	get_strBufpoint
    1902/     86C : C3 0B 10            	jp	mkopcstr
    1903/     86F :                     
    1904/     86F :                     get_r_num:
    1905/     86F : E6 38               	and	38H
    1906/     871 : 0F                  	rrca
    1907/     872 : 0F                  	rrca
    1908/     873 : 0F                  	rrca
    1909/     874 : 4F                  	ld	c, a
    1910/     875 : 06 00               	ld	b, 0		; bc ; register No.
    1911/     877 : C9                  	ret
    1912/     878 :                     ;
    1913/     878 :                     ; LD opecode
    1914/     878 :                     ;
    1915/     878 :                     
    1916/     878 :                     ; check LD "A,(BC)", "A,(DE)", "(BC),A", "(DE),A", "SP,HL"
    1917/     878 :                     
    1918/     878 :                     chk_ld:
    1919/     878 : FE 0A               	cp	0AH	; LD	A,(BC)
    1920/     87A : 28 19               	jr	z, ld_a_kbck
    1921/     87C : FE 1A               	cp	1AH	; LD	A,(DE)
    1922/     87E : 28 23               	jr	z, ld_a_kdek
    1923/     880 : FE 02               	cp	02H	; LD	(BC),A
    1924/     882 : 28 24               	jr	z, ld_kbck_a
    1925/     884 : FE 12               	cp	12H	; LD	(DE),A
    1926/     886 : 28 29               	jr	z, ld_kdek_a
    1927/     888 : FE F9               	cp	0F9H	; LD	SP,HL
    1928/     88A : 20 2A               	jr	nz, chk_ld1
    1929/     88C :                     
    1930/     88C :                     ; LD SP, HL
    1931/     88C : 11 A9 1F            	ld	de, RNSP
    1932/     88F : CD 5E 10            	call	mk_rcs		; "SP, "
    1933/     892 : C3 31 10            	jp	hl_crlf
    1934/     895 :                     	
    1935/     895 :                     ; LD A, (BC)
    1936/     895 :                     ld_a_kbck:
    1937/     895 : 11 68 1F            	ld	de, RNBC
    1938/     898 :                     ld_a_kxxk:
    1939/     898 : D5                  	push	de
    1940/     899 : CD 5B 10            	call	a_colon_sp	; "A, "
    1941/     89C : D1                  	pop	de
    1942/     89D : CD 45 10            	call	mk_krk		; "(BC)", "(DE)"
    1943/     8A0 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    1944/     8A3 :                     
    1945/     8A3 :                     ; LD A, (DE)
    1946/     8A3 :                     ld_a_kdek:
    1947/     8A3 : 11 6F 1F            	ld	de, RNDE
    1948/     8A6 : 18 F0               	jr	ld_a_kxxk
    1949/     8A8 :                     
    1950/     8A8 :                     ; LD (BC), A
    1951/     8A8 :                     ld_kbck_a:
    1952/     8A8 : 11 68 1F            	ld	de, RNBC
    1953/     8AB :                     
    1954/     8AB :                     ld_kxxk_a:
    1955/     8AB : CD 4D 10            	call	mk_krkcs	; "(BC), ", "(DE), "
    1956/     8AE : C3 26 10            	jp	a_crlf		; "A",CR,LF
    1957/     8B1 :                     
    1958/     8B1 :                     ; LD (DE), A
    1959/     8B1 :                     ld_kdek_a:
    1960/     8B1 : 11 6F 1F            	ld	de, RNDE
    1961/     8B4 : 18 F5               	jr	ld_kxxk_a
    1962/     8B6 :                     
    1963/     8B6 :                     ; check other 1byte LD MC
    1964/     8B6 :                     
    1965/     8B6 :                     chk_ld1:
    1966/     8B6 : FE 40               	cp	40h
    1967/     8B8 : DA 4E 09            	jp	c, chk_inc
    1968/     8BB : FE 80               	cp	80h
    1969/     8BD : 30 28               	jr	nc, chk_add
    1970/     8BF : FE 76               	cp	76h	; HALT?
    1971/     8C1 : 20 06               	jr	nz, LD1op
    1972/     8C3 :                     
    1973/     8C3 : 11 49 11            	ld	de, HLTstr	; HALT string
    1974/     8C6 : C3 0B 10            	jp	mkopcstr	; de : next string buffer addr
    1975/     8C9 :                     
    1976/     8C9 :                     ; LD
    1977/     8C9 :                     
    1978/     8C9 :                     LD1op:
    1979/     8C9 : CD 6F 08            	call	get_r_num
    1980/     8CC : CD 8A 0F            	call	get_rstg_off
    1981/     8CF : 21 9F EF            	ld	hl, dasm_OprStr
    1982/     8D2 : CD 5E 10            	call	mk_rcs		; "REG, "
    1983/     8D5 :                     
    1984/     8D5 :                     mk_2ndopr:
    1985/     8D5 : ED 5B 7D EF         	ld	de, (dasm_adr)
    1986/     8D9 : 1A                  	ld	a, (de)		; get opcode
    1987/     8DA : E6 07               	and	07h
    1988/     8DC : 4F                  	ld	c, a
    1989/     8DD : 06 00               	ld	b, 0
    1990/     8DF :                     
    1991/     8DF :                     mk_2ndopr1:
    1992/     8DF : E5                  	push	hl		; save copy buffer
    1993/     8E0 : CD 8A 0F            	call	get_rstg_off
    1994/     8E3 : E1                  	pop	hl		; copy buffer
    1995/     8E4 : C3 34 10            	jp	cpstr_crlf	; "REG",CR,LF
    1996/     8E7 :                     
    1997/     8E7 :                     ; ADD 80H - 87H
    1998/     8E7 :                     ; check ADD code
    1999/     8E7 :                     
    2000/     8E7 :                     chk_add:
    2001/     8E7 : FE 88               	cp	88h
    2002/     8E9 : 30 08               	jr	nc, chk_adc
    2003/     8EB :                     
    2004/     8EB :                     ; ADD
    2005/     8EB : CD 08 10            	call	add_opstr
    2006/     8EE : CD 5B 10            	call	a_colon_sp
    2007/     8F1 : 18 E2               	jr	mk_2ndopr
    2008/     8F3 :                     
    2009/     8F3 :                     ; ADC 88H - 8FH
    2010/     8F3 :                     ; check ADC code
    2011/     8F3 :                     
    2012/     8F3 :                     chk_adc:
    2013/     8F3 : FE 90               	cp	90h
    2014/     8F5 : 30 0B               	jr	nc, chk_sub
    2015/     8F7 :                     
    2016/     8F7 :                     ; ADC
    2017/     8F7 : 11 52 11            	ld	de, ADCstr
    2018/     8FA : CD 0B 10            	call	mkopcstr
    2019/     8FD : CD 5B 10            	call	a_colon_sp
    2020/     900 : 18 D3               	jr	mk_2ndopr
    2021/     902 :                     
    2022/     902 :                     ; SUB 90H - 97H
    2023/     902 :                     ; check SUB code
    2024/     902 :                     
    2025/     902 :                     chk_sub:
    2026/     902 : FE 98               	cp	98h
    2027/     904 : 30 08               	jr	nc, chk_sbc
    2028/     906 :                     
    2029/     906 :                     ; SUB
    2030/     906 : 11 56 11            	ld	de, SUBstr
    2031/     909 : CD 0B 10            	call	mkopcstr
    2032/     90C : 18 C7               	jr	mk_2ndopr
    2033/     90E :                     
    2034/     90E :                     ; SBC 98H - 9FH
    2035/     90E :                     ; check SBC code
    2036/     90E :                     
    2037/     90E :                     chk_sbc:
    2038/     90E : FE A0               	cp	0A0h
    2039/     910 : 30 0B               	jr	nc, chk_and
    2040/     912 :                     
    2041/     912 :                     ; SBC
    2042/     912 : 11 5A 11            	ld	de, SBCstr
    2043/     915 : CD 0B 10            	call	mkopcstr
    2044/     918 : CD 5B 10            	call	a_colon_sp
    2045/     91B : 18 B8               	jr	mk_2ndopr
    2046/     91D :                     
    2047/     91D :                     ; AND 0A0H - 0A7H
    2048/     91D :                     ; check AND code
    2049/     91D :                     
    2050/     91D :                     chk_and:
    2051/     91D : FE A8               	cp	0A8h
    2052/     91F : 30 08               	jr	nc, chk_xor
    2053/     921 :                     
    2054/     921 :                     ; AND
    2055/     921 : 11 5E 11            	ld	de, ANDstr
    2056/     924 : CD 0B 10            	call	mkopcstr
    2057/     927 : 18 AC               	jr	mk_2ndopr
    2058/     929 :                     
    2059/     929 :                     ; XOR 0A8H - 0AFH
    2060/     929 :                     ; check XOR code
    2061/     929 :                     
    2062/     929 :                     chk_xor:
    2063/     929 :                     
    2064/     929 : FE B0               	cp	0B0h
    2065/     92B : 30 08               	jr	nc, chk_or
    2066/     92D :                     
    2067/     92D :                     ; XOR
    2068/     92D : 11 62 11            	ld	de, XORstr
    2069/     930 : CD 0B 10            	call	mkopcstr
    2070/     933 : 18 A0               	jr	mk_2ndopr
    2071/     935 :                     
    2072/     935 :                     ; OR 0B0H - 0B7H
    2073/     935 :                     ; check OR code
    2074/     935 :                     
    2075/     935 :                     chk_or:
    2076/     935 : FE B8               	cp	0B8h
    2077/     937 : 30 08               	jr	nc, chk_cp
    2078/     939 :                     
    2079/     939 :                     ; OR
    2080/     939 : 11 66 11            	ld	de, ORstr
    2081/     93C : CD 0B 10            	call	mkopcstr
    2082/     93F : 18 94               	jr	mk_2ndopr
    2083/     941 :                     
    2084/     941 :                     ; CP 0B8H - 0BFH
    2085/     941 :                     ; check CP code
    2086/     941 :                     
    2087/     941 :                     chk_cp:
    2088/     941 : FE C0               	cp	0C0h
    2089/     943 : D2 CA 09            	jp	nc, chk_pop_rp
    2090/     946 :                     
    2091/     946 :                     ; CP
    2092/     946 : 11 69 11            	ld	de, CPstr
    2093/     949 : CD 0B 10            	call	mkopcstr
    2094/     94C : 18 87               	jr	mk_2ndopr
    2095/     94E :                     
    2096/     94E :                     ;check INC
    2097/     94E :                     
    2098/     94E :                     chk_inc:
    2099/     94E : 01 08 00            	ld	bc, INC_OPCDTBLE - INC_OPCDTBLS
    2100/     951 : 21 97 10            	ld	hl, INC_OPCDTBLS
    2101/     954 : ED B1               	cpir
    2102/     956 : 20 0E               	jr	nz, chk_dec
    2103/     958 :                     
    2104/     958 :                     ; INC
    2105/     958 : F5                  	push	af
    2106/     959 : 11 6C 11            	ld	de, INCstr
    2107/     95C : CD 0B 10            	call	mkopcstr
    2108/     95F : F1                  	pop	af
    2109/     960 :                     
    2110/     960 :                     inc_dec:
    2111/     960 : CD 6F 08            	call	get_r_num
    2112/     963 : C3 DF 08            	jp	mk_2ndopr1
    2113/     966 :                     
    2114/     966 :                     ;check dec
    2115/     966 :                     
    2116/     966 :                     chk_dec:
    2117/     966 : 01 08 00            	ld	bc, DEC_OPCDTBLE - DEC_OPCDTBLS
    2118/     969 : 21 9F 10            	ld	hl, DEC_OPCDTBLS
    2119/     96C : ED B1               	cpir
    2120/     96E : 20 0A               	jr	nz, chk_inc_rp
    2121/     970 :                     
    2122/     970 :                     ; DEC
    2123/     970 : F5                  	push	af
    2124/     971 : 11 70 11            	ld	de, DECstr
    2125/     974 : CD 0B 10            	call	mkopcstr
    2126/     977 : F1                  	pop	af
    2127/     978 : 18 E6               	jr	inc_dec
    2128/     97A :                     
    2129/     97A :                     ; check inc rp
    2130/     97A :                     
    2131/     97A :                     chk_inc_rp:
    2132/     97A : 01 04 00            	ld	bc, inc_rp_e - inc_rp_s
    2133/     97D : 21 A7 10            	ld	hl, inc_rp_s
    2134/     980 : ED B1               	cpir
    2135/     982 : 20 0F               	jr	nz, chk_dec_rp
    2136/     984 :                     
    2137/     984 :                     ; INC rp
    2138/     984 : 11 6C 11            	ld	de, INCstr
    2139/     987 : CD 0B 10            	call	mkopcstr
    2140/     98A :                     
    2141/     98A : 21 89 12            	ld	hl, INC_DEC_ADDrp
    2142/     98D : CD 81 0F            	call	mk_str
    2143/     990 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2144/     993 :                     
    2145/     993 :                     ; check dec rp
    2146/     993 :                     
    2147/     993 :                     chk_dec_rp:
    2148/     993 : 01 04 00            	ld	bc, dec_rp_e - dec_rp_s
    2149/     996 : 21 AB 10            	ld	hl, dec_rp_s
    2150/     999 : ED B1               	cpir
    2151/     99B : 20 0F               	jr	nz, chk_add_rp
    2152/     99D :                     
    2153/     99D :                     ; dec rp
    2154/     99D : 11 70 11            	ld	de, DECstr
    2155/     9A0 : CD 0B 10            	call	mkopcstr
    2156/     9A3 :                     
    2157/     9A3 : 21 89 12            	ld	hl, INC_DEC_ADDrp
    2158/     9A6 : CD 81 0F            	call	mk_str
    2159/     9A9 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2160/     9AC :                     
    2161/     9AC :                     ;check ADD HL, rp
    2162/     9AC :                     
    2163/     9AC :                     chk_add_rp:
    2164/     9AC : 01 04 00            	ld	bc, add_rp_e - add_rp_s
    2165/     9AF : 21 AF 10            	ld	hl, add_rp_s
    2166/     9B2 : ED B1               	cpir
    2167/     9B4 : 20 46               	jr	nz, chk_ex
    2168/     9B6 :                     
    2169/     9B6 :                     ; add hl, rp
    2170/     9B6 :                     
    2171/     9B6 : CD 08 10            	call	add_opstr
    2172/     9B9 :                     
    2173/     9B9 : 11 76 1F            	ld	de, RNHL
    2174/     9BC : CD 5E 10            	call	mk_rcs		; "HL, "
    2175/     9BF :                     
    2176/     9BF : E5                  	push	hl
    2177/     9C0 : 21 89 12            	ld	hl, INC_DEC_ADDrp
    2178/     9C3 : CD 8D 0F            	call	get_strBufpoint
    2179/     9C6 : E1                  	pop	hl
    2180/     9C7 : C3 34 10            	jp	cpstr_crlf	; CR, LF, 00h
    2181/     9CA :                     
    2182/     9CA :                     ; check POP rp
    2183/     9CA :                     
    2184/     9CA :                     chk_pop_rp:
    2185/     9CA : 01 04 00            	ld	bc, pop_rp_e - pop_rp_s
    2186/     9CD : 21 B3 10            	ld	hl, pop_rp_s
    2187/     9D0 : ED B1               	cpir
    2188/     9D2 : 20 0F               	jr	nz, chk_push_rp
    2189/     9D4 :                     
    2190/     9D4 :                     ; POP RP
    2191/     9D4 :                     
    2192/     9D4 : 11 74 11            	ld	de, POPstr
    2193/     9D7 : CD 0B 10            	call	mkopcstr
    2194/     9DA :                     
    2195/     9DA : 21 91 12            	ld	hl, POP_PUSHrp
    2196/     9DD : CD 81 0F            	call	mk_str
    2197/     9E0 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2198/     9E3 :                     
    2199/     9E3 :                     ; check PUSH rp
    2200/     9E3 :                     
    2201/     9E3 :                     chk_push_rp:
    2202/     9E3 : 01 04 00            	ld	bc, push_rp_e - push_rp_s
    2203/     9E6 : 21 B7 10            	ld	hl, push_rp_s
    2204/     9E9 : ED B1               	cpir
    2205/     9EB : 20 0F               	jr	nz, chk_ex
    2206/     9ED :                     
    2207/     9ED :                     ; PUSH RP
    2208/     9ED :                     
    2209/     9ED : 11 78 11            	ld	de, PUSHstr
    2210/     9F0 : CD 0B 10            	call	mkopcstr
    2211/     9F3 :                     
    2212/     9F3 : 21 91 12            	ld	hl, POP_PUSHrp
    2213/     9F6 : CD 81 0F            	call	mk_str
    2214/     9F9 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2215/     9FC :                     
    2216/     9FC :                     ; check EX XX, XX
    2217/     9FC :                     
    2218/     9FC :                     chk_ex:
    2219/     9FC : FE 08               	cp	08H		; EX	AF,AF'
    2220/     9FE : 28 17               	jr	z, ex_af_af
    2221/     A00 : FE E3               	cp	0E3H		; EX	(SP),HL
    2222/     A02 : 28 21               	jr	z, ex_sp_hl
    2223/     A04 : FE EB               	cp	0EBH		; EX	DE,HL
    2224/     A06 : 20 25               	jr	nz, chk_1mc_bnh
    2225/     A08 :                     
    2226/     A08 :                     ; EX DE, HL
    2227/     A08 : 11 6F 1F            	ld	de, RNDE
    2228/     A0B : CD 5E 10            	call	mk_rcs
    2229/     A0E :                     
    2230/     A0E :                     ins_hl_opr:
    2231/     A0E : CD 31 10            	call	hl_crlf
    2232/     A11 :                     
    2233/     A11 :                     ins_ex_opc:
    2234/     A11 : 11 7D 11            	ld	de, EXstr
    2235/     A14 : C3 0B 10            	jp	mkopcstr
    2236/     A17 :                     
    2237/     A17 :                     ; EX AF,AF'
    2238/     A17 :                     ex_af_af:
    2239/     A17 : 11 27 11            	ld	de, RNAF
    2240/     A1A : CD 5E 10            	call	mk_rcs
    2241/     A1D : 11 2A 11            	ld	de, RNAFX
    2242/     A20 : CD 34 10            	call	cpstr_crlf
    2243/     A23 : 18 EC               	jr ins_ex_opc
    2244/     A25 :                     
    2245/     A25 :                     ; EX (SP),HL
    2246/     A25 :                     ex_sp_hl:
    2247/     A25 : 11 A9 1F            	ld	de, RNSP
    2248/     A28 : CD 4D 10            	call	mk_krkcs
    2249/     A2B : 18 E1               	jr	ins_hl_opr
    2250/     A2D :                     
    2251/     A2D :                     ; check other one MC code
    2252/     A2D :                     
    2253/     A2D :                     chk_1mc_bnh:
    2254/     A2D :                     
    2255/     A2D :                     ; check JP (HL)
    2256/     A2D :                     
    2257/     A2D : FE E9               	cp	0E9H		; JP (HL) ?
    2258/     A2F : 20 0F               	jr	nz, chk_ret
    2259/     A31 :                     
    2260/     A31 :                     ; JP (HL)
    2261/     A31 : 11 32 11            	ld	de, JPstr
    2262/     A34 : CD 0B 10            	call	mkopcstr	; "JP "
    2263/     A37 :                     
    2264/     A37 : 11 76 1F            	ld	de, RNHL
    2265/     A3A : CD 42 10            	call	mk_krk_1
    2266/     A3D : C3 37 10            	jp	insPostStr
    2267/     A40 :                     
    2268/     A40 :                     ; check RET CC
    2269/     A40 :                     chk_ret:
    2270/     A40 : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
    2271/     A43 : 21 7E 05            	ld	hl, RETCC_TBLS
    2272/     A46 : ED B1               	cpir
    2273/     A48 : 20 0F               	jr	nz, chk_rst
    2274/     A4A :                     
    2275/     A4A :                     ; RET CC
    2276/     A4A :                     ; BC : 7 >= BC >= 0
    2277/     A4A :                     
    2278/     A4A :                     	; make opcode string
    2279/     A4A : 11 2E 11            	ld	de, RETstr
    2280/     A4D : CD 0B 10            	call	mkopcstr
    2281/     A50 :                     
    2282/     A50 :                     	; make operand string
    2283/     A50 :                     
    2284/     A50 : 21 71 12            	ld	hl, CC_opr	; string base
    2285/     A53 : CD 81 0F            	call	mk_str
    2286/     A56 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2287/     A59 :                     
    2288/     A59 :                     ; check RST p
    2289/     A59 :                     
    2290/     A59 :                     chk_rst:
    2291/     A59 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    2292/     A5C : 21 9B 05            	ld	hl, RST_TBLS
    2293/     A5F : ED B1               	cpir
    2294/     A61 : 20 17               	jr	nz, chk_2MC		; 2bytes MC
    2295/     A63 :                     
    2296/     A63 :                     ; RST p
    2297/     A63 :                     
    2298/     A63 : 11 42 11            	ld	de, RSTstr
    2299/     A66 : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2300/     A69 :                     
    2301/     A69 :                     ; 0 <= BC <= 7
    2302/     A69 :                     ; 7: 00H  (0000 0 111 : 00 000 000)
    2303/     A69 :                     ; 6: 08H  (0000 0 110 : 00 001 000)
    2304/     A69 :                     ; 5: 10H  (0000 0 101 : 00 010 000)
    2305/     A69 :                     ; 4: 18H  (0000 0 100 : 00 011 000)
    2306/     A69 :                     ; 3: 20H  (0000 0 011 : 00 100 000)
    2307/     A69 :                     ; 2: 28H  (0000 0 010 : 00 101 000)
    2308/     A69 :                     ; 1: 30H  (0000 0 001 : 00 110 000)
    2309/     A69 :                     ; 0: 38H  (0000 0 000 : 00 111 000)
    2310/     A69 :                     ;
    2311/     A69 : 79                  	ld	a, c
    2312/     A6A : 2F                  	cpl		; not a
    2313/     A6B : CB 27               	sla	a
    2314/     A6D : CB 27               	sla	a
    2315/     A6F : CB 27               	sla	a
    2316/     A71 : E6 38               	and	38H	; a = RST No.
    2317/     A73 :                     
    2318/     A73 : 5F                  	ld	e, a
    2319/     A74 : 21 9F EF            	ld	hl, dasm_OprStr
    2320/     A77 : C3 96 0F            	jp	mk_n2crlf	; "nnH", CR, LF
    2321/     A7A :                     
    2322/     A7A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2323/     A7A :                     	; analysys 2 byte MC
    2324/     A7A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2325/     A7A :                     
    2326/     A7A :                     chk_2MC:
    2327/     A7A :                     
    2328/     A7A : F5                  	push	af
    2329/     A7B : 3E 02               	ld	a, 2
    2330/     A7D : 32 83 EF            	ld	(mc_Size), a
    2331/     A80 : F1                  	pop	af
    2332/     A81 :                     
    2333/     A81 :                     ; check LD r, nn
    2334/     A81 :                     
    2335/     A81 : 01 08 00            	ld	bc, ld_r_nn_e - ld_r_nn_s
    2336/     A84 : 21 3C 06            	ld	hl, ld_r_nn_s
    2337/     A87 : ED B1               	cpir
    2338/     A89 : 20 16               	jr	nz, chk_logop2
    2339/     A8B :                     
    2340/     A8B :                     ; LD r, nn
    2341/     A8B :                     
    2342/     A8B : CD 6F 08            	call	get_r_num
    2343/     A8E : CD 8A 0F            	call	get_rstg_off
    2344/     A91 : CD 5E 10            	call	mk_rcs		; "REG, "
    2345/     A94 :                     
    2346/     A94 : ED 5B 7D EF         	ld	de, (dasm_adr)
    2347/     A98 : 13                  	inc	de
    2348/     A99 : 1A                  	ld	a, (de)		; get nn
    2349/     A9A : 5F                  	ld	e, a
    2350/     A9B : CD D9 0F            	call	hex2str_asm	; "nnH"
    2351/     A9E : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2352/     AA1 :                     
    2353/     AA1 :                     ; check logical operation with 8 bit literal
    2354/     AA1 :                     
    2355/     AA1 :                     chk_logop2:
    2356/     AA1 :                     
    2357/     AA1 : 01 0A 00            	ld	bc, log_op_e - log_op_s
    2358/     AA4 : 21 44 06            	ld	hl, log_op_s
    2359/     AA7 : ED B1               	cpir
    2360/     AA9 : C2 F5 0A            	jp	nz, chk_djnz
    2361/     AAC :                     
    2362/     AAC :                     ; logical operation with 8 bit literal
    2363/     AAC :                     
    2364/     AAC :                     
    2365/     AAC : C5                  	push	bc
    2366/     AAD : 21 B3 12            	ld	hl, logop2str
    2367/     AB0 : CD 8D 0F            	call	get_strBufpoint
    2368/     AB3 : CD 0B 10            	call	mkopcstr		; make op code string
    2369/     AB6 : C1                  	pop	bc
    2370/     AB7 : 79                  	ld	a, c
    2371/     AB8 :                     
    2372/     AB8 : FE 01               	cp	1
    2373/     ABA : 28 14               	jr	z, acs_kn2k	; insert "A, (nn)"
    2374/     ABC : B7                  	or	a
    2375/     ABD : 28 1A               	jr	z, ins_kn2k	; insert "(nn), A"
    2376/     ABF : FE 07               	cp	7
    2377/     AC1 : 38 03               	jr	c, ins_n2crlf	; insert  "nnH"
    2378/     AC3 :                     
    2379/     AC3 :                     ; insert "A, "
    2380/     AC3 :                     
    2381/     AC3 : CD 5B 10            	call	a_colon_sp
    2382/     AC6 :                     
    2383/     AC6 :                     ; "nn"
    2384/     AC6 :                     ins_n2crlf:
    2385/     AC6 : ED 5B 7D EF         	ld	de, (dasm_adr)
    2386/     ACA : 13                  	inc	de
    2387/     ACB : 1A                  	ld	a, (de)
    2388/     ACC : 5F                  	ld	e, a		; get nn
    2389/     ACD : C3 96 0F            	jp	mk_n2crlf	; "nnH", CR, LF
    2390/     AD0 :                     
    2391/     AD0 :                     acs_kn2k:
    2392/     AD0 : CD 5B 10            	call	a_colon_sp	; "A, "
    2393/     AD3 : CD E5 0A            	call	kn2k		; "(nnH)"
    2394/     AD6 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2395/     AD9 :                     
    2396/     AD9 :                     ; "(nn), A"
    2397/     AD9 :                     ins_kn2k:
    2398/     AD9 : 21 9F EF            	ld	hl, dasm_OprStr	;operand str buffer
    2399/     ADC : CD E5 0A            	call	kn2k		; "(nnH)"
    2400/     ADF : CD 83 10            	call	ins_kmR		; " ,"
    2401/     AE2 : C3 26 10            	jp	a_crlf		; "A", CR, LF, 00h
    2402/     AE5 :                     
    2403/     AE5 :                     ; "(nnH)"
    2404/     AE5 :                     kn2k:
    2405/     AE5 : CD 6E 10            	call	ins_kakkoL	; "("
    2406/     AE8 : ED 5B 7D EF         	ld	de, (dasm_adr)
    2407/     AEC : 13                  	inc	de
    2408/     AED : 1A                  	ld	a, (de)		; get nn
    2409/     AEE : 5F                  	ld	e, a		; e: nn
    2410/     AEF : CD D9 0F            	call	hex2str_asm	; hex strings
    2411/     AF2 : C3 72 10            	jp	ins_kakkoR	; ")"
    2412/     AF5 :                     
    2413/     AF5 :                     
    2414/     AF5 :                     ; check DJNZ nn
    2415/     AF5 :                     chk_djnz:
    2416/     AF5 : FE 10               	cp	10H
    2417/     AF7 : 20 05               	jr	nz, chk_jrnn
    2418/     AF9 :                     
    2419/     AF9 :                     ; check DJNZ nn
    2420/     AF9 : 11 38 11            	ld	de, DJNZstr
    2421/     AFC : 18 07               	jr	jr_n4crlf
    2422/     AFE :                     
    2423/     AFE :                     ; check jr nn
    2424/     AFE :                     chk_jrnn:
    2425/     AFE : FE 18               	cp	18H
    2426/     B00 : 20 0C               	jr	nz, chk_jrcc	; not JR relative
    2427/     B02 :                     
    2428/     B02 :                     ; JR Relative
    2429/     B02 : 11 35 11            	ld	de, JRstr
    2430/     B05 :                     jr_n4crlf:
    2431/     B05 : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2432/     B08 : 21 9F EF            	ld	hl, dasm_OprStr
    2433/     B0B : C3 BA 0F            	jp	mkRel_str	; "nnnnH",cr,lf : nnnn : branch address
    2434/     B0E :                     
    2435/     B0E :                     ; JR CC, nn
    2436/     B0E :                     
    2437/     B0E :                     chk_jrcc:
    2438/     B0E : 01 04 00            	ld	bc, JRCC_TBLE - JRCC_TBLS1
    2439/     B11 : 21 87 05            	ld	hl, JRCC_TBLS1
    2440/     B14 : ED B1               	cpir
    2441/     B16 : 20 12               	jr	nz, chk_3MC	; no, check 3 bnytes MC
    2442/     B18 :                     
    2443/     B18 :                     ; JR CC, nn(Relative Value)
    2444/     B18 :                     
    2445/     B18 : 11 35 11            	ld	de, JRstr
    2446/     B1B : CD 0B 10            	call	mkopcstr
    2447/     B1E : 21 81 12            	ld	hl, JRCC_opr1	; string base
    2448/     B21 : CD 81 0F            	call	mk_str		; "NZ", "Z", "NC", "C"
    2449/     B24 : CD 83 10            	call	ins_kmR		; ", "
    2450/     B27 : C3 BA 0F            	jp	mkRel_str	; "nnnnH", cr, lf
    2451/     B2A :                     
    2452/     B2A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2453/     B2A :                     	; analysys 3 byte MC
    2454/     B2A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2455/     B2A :                     
    2456/     B2A :                     chk_3MC:
    2457/     B2A : F5                  	push	af
    2458/     B2B : 3E 03               	ld	a, 3
    2459/     B2D : 32 83 EF            	ld	(mc_Size), a
    2460/     B30 : F1                  	pop	af
    2461/     B31 :                     
    2462/     B31 : 01 04 00            	ld	bc, THREE_OPTBLe - THREE_OPTBL
    2463/     B34 : 21 4E 06            	ld	hl, THREE_OPTBL
    2464/     B37 : ED B1               	cpir
    2465/     B39 : C2 4B 0B            	jp	nz, chk_ld16
    2466/     B3C :                     
    2467/     B3C :                     ; LD rp, nnnn
    2468/     B3C :                     
    2469/     B3C : 21 C7 12            	ld	hl, logop3str
    2470/     B3F : CD 8D 0F            	call	get_strBufpoint
    2471/     B42 : CD 5E 10            	call	mk_rcs		; "Reg, "
    2472/     B45 :                     
    2473/     B45 :                     get_n4crlf:
    2474/     B45 : CD 73 0B            	call	get_n4
    2475/     B48 : C3 9C 0F            	jp	mk_n4crlf	; "nnnnH", CR, LF, 00h
    2476/     B4B :                     
    2477/     B4B :                     ; LD 16bit literal
    2478/     B4B :                     chk_ld16:
    2479/     B4B : FE 22               	cp	22h
    2480/     B4D : 28 12               	jr	z, ins_kkhl	; "(nnnnH), HL"
    2481/     B4F : FE 32               	cp	32h
    2482/     B51 : 28 14               	jr	z, ins_kka	; "(nnnnH), A"
    2483/     B53 : FE 2A               	cp	2ah
    2484/     B55 : 28 26               	jr	z, ins_hlkk	; "HL, (nnnnH)"
    2485/     B57 : FE 3A               	cp	3ah
    2486/     B59 : C2 8C 0B            	jp	nz, chk_jpn4	; check jp n4
    2487/     B5C :                     
    2488/     B5C :                     ; "A, (nnnnH)"
    2489/     B5C : CD 5B 10            	call	a_colon_sp	; "A, "
    2490/     B5F : 18 22               	jr	kn4kcrlf
    2491/     B61 :                     
    2492/     B61 :                     ; "(nnnnH), HL"
    2493/     B61 :                     ins_kkhl:
    2494/     B61 : CD 6D 0B            	call	kn4hk
    2495/     B64 : C3 31 10            	jp	hl_crlf		; "HL",cr,lf
    2496/     B67 :                     
    2497/     B67 :                     ; "(nnnnH), A"
    2498/     B67 :                     ins_kka:
    2499/     B67 : CD 6D 0B            	call	kn4hk
    2500/     B6A : C3 26 10            	jp	a_crlf		; "A",cr,lf
    2501/     B6D :                     
    2502/     B6D :                     kn4hk:
    2503/     B6D : CD 73 0B            	call	get_n4
    2504/     B70 : C3 A2 0F            	jp	ins_kn4kcs	; "(nnnnH), "
    2505/     B73 :                     
    2506/     B73 :                     get_n4:
    2507/     B73 : E5                  	push	hl
    2508/     B74 : 2A 7D EF            	ld	hl, (dasm_adr)
    2509/     B77 : 23                  	inc	hl
    2510/     B78 : 5E                  	ld	e, (hl)
    2511/     B79 : 23                  	inc	hl
    2512/     B7A : 56                  	ld	d, (hl)
    2513/     B7B : E1                  	pop	hl
    2514/     B7C : C9                  	ret
    2515/     B7D :                     
    2516/     B7D :                     ; "HL, (nnnnH)"
    2517/     B7D :                     ins_hlkk:
    2518/     B7D : 11 76 1F            	ld	de, RNHL
    2519/     B80 : CD 5E 10            	call	mk_rcs		; "HL ,"
    2520/     B83 :                     
    2521/     B83 :                     kn4kcrlf:
    2522/     B83 : CD 73 0B            	call	get_n4
    2523/     B86 : CD B1 0F            	call	mk_kn4k		; "(nnnnH)"
    2524/     B89 : C3 37 10            	jp	insPostStr	; cr, lf
    2525/     B8C :                     
    2526/     B8C :                     ; check JP literal
    2527/     B8C :                     
    2528/     B8C :                     chk_jpn4:
    2529/     B8C : FE C3               	cp	0C3H		; JP literal ?
    2530/     B8E : 20 08               	jr	nz, chk_calln4	; not JP literal
    2531/     B90 :                     
    2532/     B90 :                     ; "JP nnnnH"
    2533/     B90 :                     
    2534/     B90 : 11 32 11            	ld	de, JPstr
    2535/     B93 : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2536/     B96 : 18 AD               	jr	get_n4crlf
    2537/     B98 :                     
    2538/     B98 :                     ; check call literal
    2539/     B98 :                     
    2540/     B98 :                     chk_calln4:
    2541/     B98 : FE CD               	cp	0CDH		; CALL literal ?
    2542/     B9A : 20 08               	jr	nz, chk_jpcc
    2543/     B9C :                     
    2544/     B9C :                     ; "CALL nnnnH",cr,lf
    2545/     B9C :                     
    2546/     B9C : 11 3D 11            	ld	de, CALLstr
    2547/     B9F : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2548/     BA2 : 18 A1               	jr	get_n4crlf
    2549/     BA4 :                     
    2550/     BA4 :                     
    2551/     BA4 :                     ; check 3 byte machine code: branch JP CC, nnnn
    2552/     BA4 :                     
    2553/     BA4 :                     chk_jpcc:
    2554/     BA4 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
    2555/     BA7 : 21 8B 05            	ld	hl, JPCC_TBLS
    2556/     BAA : ED B1               	cpir
    2557/     BAC : 20 11               	jr	nz, chk_calcc
    2558/     BAE :                     
    2559/     BAE :                     ; JP CC, nnnn
    2560/     BAE :                     ; BC : 7 >= BC >= 0
    2561/     BAE :                     
    2562/     BAE : 11 32 11            	ld	de, JPstr
    2563/     BB1 :                     
    2564/     BB1 :                     CC_NNNN:
    2565/     BB1 : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2566/     BB4 :                     
    2567/     BB4 : 21 71 12            	ld	hl, CC_opr	; string base
    2568/     BB7 : CD 81 0F            	call	mk_str		; de: point (string end) + 1
    2569/     BBA : CD 83 10            	call	ins_kmR		; " ,"
    2570/     BBD : 18 86               	jr	get_n4crlf	; "nnnnh", cr,lf
    2571/     BBF :                     
    2572/     BBF :                     
    2573/     BBF :                     ; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
    2574/     BBF :                     
    2575/     BBF :                     chk_calcc:
    2576/     BBF : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
    2577/     BC2 : 21 93 05            	ld	hl, CLCC_TBLS
    2578/     BC5 : ED B1               	cpir
    2579/     BC7 : 20 05               	jr	nz, chk_0CBH
    2580/     BC9 :                     
    2581/     BC9 :                     ; CALL CC, nnnn
    2582/     BC9 :                     ; BC : 7 >= BC >= 0 CALLstr
    2583/     BC9 :                     
    2584/     BC9 : 11 3D 11            	ld	de, CALLstr
    2585/     BCC : 18 E3               	jr	CC_NNNN
    2586/     BCE :                     
    2587/     BCE :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2588/     BCE :                     	; OPECODE 0CBH check
    2589/     BCE :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2590/     BCE :                     
    2591/     BCE :                     chk_0CBH:
    2592/     BCE : 2A 7D EF            	ld	hl, (dasm_adr)
    2593/     BD1 : 23                  	inc	hl		; 2nd opecode address
    2594/     BD2 :                     
    2595/     BD2 : F5                  	push	af
    2596/     BD3 : 3E 02               	ld	a, 2
    2597/     BD5 : 32 83 EF            	ld	(mc_Size), a	; set 2bytes MC
    2598/     BD8 : F1                  	pop	af
    2599/     BD9 :                     
    2600/     BD9 : FE CB               	cp	0cbh
    2601/     BDB : C2 94 0C            	jp	nz, chk_0DDH
    2602/     BDE :                     
    2603/     BDE : 7E                  	ld	a, (hl)		; a : 2nd opecode
    2604/     BDF : 21 9F EF            	ld	hl, dasm_OprStr ; set operand string buffer
    2605/     BE2 :                     
    2606/     BE2 : FE 08               	cp	08h
    2607/     BE4 : DA 1D 0C            	jp	c, mk_rlcr
    2608/     BE7 : FE 10               	cp	10h
    2609/     BE9 : DA 26 0C            	jp	c, mk_rrcr
    2610/     BEC : FE 18               	cp	18h
    2611/     BEE : DA 2F 0C            	jp	c, mk_rlr
    2612/     BF1 : FE 20               	cp	20h
    2613/     BF3 : DA 38 0C            	jp	c, mk_rrr
    2614/     BF6 : FE 28               	cp	28h
    2615/     BF8 : DA 41 0C            	jp	c, mk_slar
    2616/     BFB : FE 30               	cp	30h
    2617/     BFD : DA 4A 0C            	jp	c, mk_srar
    2618/     C00 : FE 38               	cp	38h
    2619/     C02 : DA 6E 0C            	jp	c, op_err
    2620/     C05 : FE 40               	cp	40h
    2621/     C07 : DA 53 0C            	jp	c, mk_srlr
    2622/     C0A : FE 80               	cp	80h
    2623/     C0C : DA 5C 0C            	jp	c, mk_bitr
    2624/     C0F : FE C0               	cp	0c0h
    2625/     C11 : DA 65 0C            	jp	c, mk_resr
    2626/     C14 :                     
    2627/     C14 :                     ; make SET n, r, SET n, (HL)
    2628/     C14 :                     
    2629/     C14 : CD 74 0C            	call	mk_bitr_str
    2630/     C17 : 11 3C 12            	ld	de, SETstr
    2631/     C1A : C3 0B 10            	jp	mkopcstr
    2632/     C1D :                     
    2633/     C1D :                     
    2634/     C1D :                     ; make RLC r, RLC (HL)
    2635/     C1D :                     mk_rlcr:
    2636/     C1D : CD 79 0C            	call	ins_rstg
    2637/     C20 : 11 B7 11            	ld	de, RLCstr
    2638/     C23 : C3 0B 10            	jp	mkopcstr
    2639/     C26 :                     
    2640/     C26 :                     ; make RRC r, RRC (HL)
    2641/     C26 :                     mk_rrcr:
    2642/     C26 : CD 79 0C            	call	ins_rstg
    2643/     C29 : 11 BB 11            	ld	de, RRCstr
    2644/     C2C : C3 0B 10            	jp	mkopcstr
    2645/     C2F :                     
    2646/     C2F :                     ; make RL r, RL (HL)
    2647/     C2F :                     mk_rlr:
    2648/     C2F : CD 79 0C            	call	ins_rstg
    2649/     C32 : 11 BF 11            	ld	de, RLstr
    2650/     C35 : C3 0B 10            	jp	mkopcstr
    2651/     C38 :                     
    2652/     C38 :                     ; make RR r, RR (HL)
    2653/     C38 :                     mk_rrr:
    2654/     C38 : CD 79 0C            	call	ins_rstg
    2655/     C3B : 11 C2 11            	ld	de, RRstr
    2656/     C3E : C3 0B 10            	jp	mkopcstr
    2657/     C41 :                     
    2658/     C41 :                     ; make SLA r, SLA (HL)
    2659/     C41 :                     mk_slar:
    2660/     C41 : CD 79 0C            	call	ins_rstg
    2661/     C44 : 11 C5 11            	ld	de, SLAstr
    2662/     C47 : C3 0B 10            	jp	mkopcstr
    2663/     C4A :                     
    2664/     C4A :                     ; make SRA r, SRA (HL)
    2665/     C4A :                     mk_srar:
    2666/     C4A : CD 79 0C            	call	ins_rstg
    2667/     C4D : 11 C9 11            	ld	de, SRAstr
    2668/     C50 : C3 0B 10            	jp	mkopcstr
    2669/     C53 :                     
    2670/     C53 :                     ; make SRL r, SRL (HL)
    2671/     C53 :                     mk_srlr:
    2672/     C53 : CD 79 0C            	call	ins_rstg
    2673/     C56 : 11 CD 11            	ld	de, SRLstr
    2674/     C59 : C3 0B 10            	jp	mkopcstr
    2675/     C5C :                     
    2676/     C5C :                     ; make BIT n, r, BIT n, (HL)
    2677/     C5C :                     mk_bitr:
    2678/     C5C : CD 74 0C            	call	mk_bitr_str
    2679/     C5F : 11 D1 11            	ld	de, BITstr
    2680/     C62 : C3 0B 10            	jp	mkopcstr
    2681/     C65 :                     
    2682/     C65 :                     ; make RES n, r, RES n, (HL)
    2683/     C65 :                     mk_resr:
    2684/     C65 : CD 74 0C            	call	mk_bitr_str
    2685/     C68 : 11 D5 11            	ld	de, RESstr
    2686/     C6B : C3 0B 10            	jp	mkopcstr
    2687/     C6E :                     
    2688/     C6E :                     op_err:
    2689/     C6E : 11 40 12            	ld	de, ER_OPMSG
    2690/     C71 : C3 0B 10            	jp	mkopcstr
    2691/     C74 :                     
    2692/     C74 :                     ;-------------------------------------------
    2693/     C74 :                     ; input a : 2nd opecode
    2694/     C74 :                     ;	hl : make string buffer
    2695/     C74 :                     ; make "bit No, r" string to *hl
    2696/     C74 :                     ; (ex) *hl = "1, B"
    2697/     C74 :                     ;-------------------------------------------
    2698/     C74 :                     mk_bitr_str:
    2699/     C74 : F5                  	push	af
    2700/     C75 : CD 86 0C            	call	set_bitno
    2701/     C78 : F1                  	pop	af
    2702/     C79 :                     
    2703/     C79 :                     ins_rstg:
    2704/     C79 : E6 07               	and	07h
    2705/     C7B : 4F                  	ld	c, a	; table offset
    2706/     C7C : 06 00               	ld	b, 0		; bc : string offset
    2707/     C7E : E5                  	push	hl
    2708/     C7F : CD 8A 0F            	call	get_rstg_off	; get string address to de
    2709/     C82 : E1                  	pop	hl
    2710/     C83 : C3 34 10            	jp	cpstr_crlf	; "REG", CR, LF, 00h
    2711/     C86 :                     ;
    2712/     C86 :                     ; input hl : make string buffer
    2713/     C86 :                     ;
    2714/     C86 :                     set_bitno:
    2715/     C86 : E6 38               	and	38h
    2716/     C88 : 0F                  	rrca
    2717/     C89 : 0F                  	rrca
    2718/     C8A : 0F                  	rrca
    2719/     C8B : 47                  	ld	b, a	; bit number
    2720/     C8C :                     
    2721/     C8C : 3E 30               	ld	a, 30h
    2722/     C8E : B0                  	or	b		; a : bit string "0" - "7"
    2723/     C8F : 77                  	ld	(hl), a
    2724/     C90 : 23                  	inc	hl
    2725/     C91 : C3 83 10            	jp	ins_kmR
    2726/     C94 :                     
    2727/     C94 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2728/     C94 :                     	; OPECODE 0DDH check
    2729/     C94 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2730/     C94 :                     
    2731/     C94 :                     chk_0DDH:
    2732/     C94 : FE DD               	cp	0ddh
    2733/     C96 : C2 3A 0E            	jp	nz, chk_0EDH
    2734/     C99 :                     
    2735/     C99 : 11 A3 1F            	ld	de, RNIX
    2736/     C9C : ED 53 7F EF         	ld	(reg_xy), de	; save index reg string
    2737/     CA0 : 11 E3 12            	ld	de, addixrp_tbl
    2738/     CA3 : ED 53 81 EF         	ld	(xy_srtp), de
    2739/     CA7 :                     
    2740/     CA7 :                     chk_0DDH_1:
    2741/     CA7 :                     
    2742/     CA7 : 7E                  	ld	a, (hl)		; get 2nd opcode
    2743/     CA8 :                     
    2744/     CA8 : FE E3               	cp	0E3h	; EX (SP),IX
    2745/     CAA : CA EE 0C            	jp	z, ins_kspkix
    2746/     CAD : FE E9               	cp	0E9h	; JP (IX)
    2747/     CAF : CA DC 0C            	jp	z, ins_jpix
    2748/     CB2 : FE F9               	cp	0F9h	; LD SP, IX
    2749/     CB4 : CA FD 0C            	jp	z, ins_spix
    2750/     CB7 :                     
    2751/     CB7 : 01 04 00            	ld	bc, DD_2NDTBL1 - DD_2NDTBL
    2752/     CBA : 21 56 06            	ld	hl, DD_2NDTBL
    2753/     CBD : ED B1               	cpir
    2754/     CBF : CA 06 0D            	jp	z, ins_ixrp
    2755/     CC2 :                     
    2756/     CC2 : 01 04 00            	ld	bc, DD_2NDTBL2 - DD_2NDTBL1
    2757/     CC5 : 21 5A 06            	ld	hl, DD_2NDTBL1
    2758/     CC8 : ED B1               	cpir
    2759/     CCA : C2 1B 0D            	jp	nz, chk_0DD3op
    2760/     CCD :                     
    2761/     CCD :                     ; INC	IX
    2762/     CCD :                     ; DEC	IX
    2763/     CCD :                     ; PUSH	IX
    2764/     CCD :                     ; POP	IX
    2765/     CCD : 21 DB 12            	ld	hl, dd_2opt
    2766/     CD0 : CD 8D 0F            	call	get_strBufpoint
    2767/     CD3 : CD 0B 10            	call	mkopcstr		; inseert OPCODE strings to dasm_OpcStr
    2768/     CD6 :                     
    2769/     CD6 : 21 9F EF            	ld	hl, dasm_OprStr
    2770/     CD9 : C3 2B 10            	jp	ix_crlf			; "IX", CR, LF, 00h
    2771/     CDC :                     
    2772/     CDC :                     ; JP	(IX)
    2773/     CDC :                     ins_jpix:
    2774/     CDC : ED 5B 7F EF         	ld	de, (reg_xy)
    2775/     CE0 :                     ins_jpix1:
    2776/     CE0 : D5                  	push	de
    2777/     CE1 : 11 32 11            	ld	de, JPstr
    2778/     CE4 : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2779/     CE7 :                     
    2780/     CE7 : D1                  	pop	de
    2781/     CE8 : CD 42 10            	call	mk_krk_1
    2782/     CEB : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    2783/     CEE :                     
    2784/     CEE :                     ; EX	(SP),IX
    2785/     CEE :                     ins_kspkix:
    2786/     CEE : 11 7D 11            	ld	de, EXstr
    2787/     CF1 : CD 0B 10            	call	mkopcstr	; de : next string buffer addr
    2788/     CF4 : 11 A9 1F            	ld	de, RNSP
    2789/     CF7 : CD 4D 10            	call	mk_krkcs	; "(SP), "
    2790/     CFA : C3 2B 10            	jp	ix_crlf		; "IX",cr,lf
    2791/     CFD :                     
    2792/     CFD :                     ; LD	SP,IX
    2793/     CFD :                     ins_spix:
    2794/     CFD : 11 A9 1F            	ld	de, RNSP
    2795/     D00 : CD 5E 10            	call	mk_rcs		; "SP, "
    2796/     D03 : C3 2B 10            	jp	ix_crlf		; "IX",cr,lf
    2797/     D06 :                     
    2798/     D06 :                     ; ADD	IX,BC
    2799/     D06 :                     ; ADD	IX,DE
    2800/     D06 :                     ; ADD	IX,IX
    2801/     D06 :                     ; ADD	IX,SP
    2802/     D06 :                     ins_ixrp:
    2803/     D06 : CD 08 10            	call	add_opstr	; de : next string buffer addr
    2804/     D09 :                     
    2805/     D09 : ED 5B 7F EF         	ld	de, (reg_xy)
    2806/     D0D : CD 5E 10            	call	mk_rcs		; "IX, "
    2807/     D10 :                     
    2808/     D10 : E5                  	push	hl
    2809/     D11 : 2A 81 EF            	ld	hl, (xy_srtp)
    2810/     D14 : CD 8D 0F            	call	get_strBufpoint
    2811/     D17 : E1                  	pop	hl
    2812/     D18 : C3 34 10            	jp	cpstr_crlf	; "REG",cr,lf
    2813/     D1B :                     
    2814/     D1B :                     ;
    2815/     D1B :                     ; check 0DD 3bytes MC
    2816/     D1B :                     ;
    2817/     D1B :                     chk_0DD3op:
    2818/     D1B : F5                  	push	af
    2819/     D1C : 3E 03               	ld	a, 3
    2820/     D1E : 32 83 EF            	ld	(mc_Size), a	; 2byte machine code
    2821/     D21 : F1                  	pop	af
    2822/     D22 :                     
    2823/     D22 : 01 0E 00            	ld	bc, dd_ld_tble - dd_ld_tbl
    2824/     D25 : 21 BB 10            	ld	hl, dd_ld_tbl
    2825/     D28 : ED B1               	cpir
    2826/     D2A : CA 5A 0D            	jp	z, dd_ld
    2827/     D2D :                     
    2828/     D2D : FE 86               	cp	86h
    2829/     D2F : CA 85 0D            	jp	z, dd_mix
    2830/     D32 : FE 8E               	cp	8eh
    2831/     D34 : CA 90 0D            	jp	z, dd_mix1
    2832/     D37 : FE 9E               	cp	9eh
    2833/     D39 : CA 95 0D            	jp	z, dd_mix2
    2834/     D3C :                     
    2835/     D3C : 01 07 00            	ld	bc, dd_log_tble - dd_log_tbl
    2836/     D3F : 21 C9 10            	ld	hl, dd_log_tbl
    2837/     D42 : ED B1               	cpir
    2838/     D44 : C2 9A 0D            	jp	nz, chk_0DD4op
    2839/     D47 :                     
    2840/     D47 :                     ;
    2841/     D47 :                     ; make "SUB (IX+nn)", "AND (IX+nn)", "XOR (IX+nn)"
    2842/     D47 :                     ;       "OR (IX+nn)",  "CP (IX+nn)"
    2843/     D47 :                     ;      "INC (IX+nn)", "DEC (IX+nn)"
    2844/     D47 :                     ;
    2845/     D47 : 21 F3 12            	ld	hl, ddlogtbl
    2846/     D4A : CD 8D 0F            	call	get_strBufpoint
    2847/     D4D : CD 0B 10            	call	mkopcstr
    2848/     D50 :                     
    2849/     D50 :                     mk_kixpnk:
    2850/     D50 : ED 5B 7F EF         	ld	de, (reg_xy)
    2851/     D54 :                     
    2852/     D54 :                     mk_kiypnk:
    2853/     D54 : 21 9F EF            	ld	hl, dasm_OprStr
    2854/     D57 : C3 51 0F            	jp	kixypnk_crlf		; "(IX+nnH)",cr,lf
    2855/     D5A :                     
    2856/     D5A :                     ;
    2857/     D5A :                     ; make "LD (IX+nn), r" or "LD r, (IX+nn)"
    2858/     D5A :                     ;
    2859/     D5A :                     dd_ld:
    2860/     D5A : 79                  	ld	a, c
    2861/     D5B : FE 07               	cp	7
    2862/     D5D : D2 72 0D            	jp	nc, dd_ld1
    2863/     D60 :                     	
    2864/     D60 :                     ; LD (IX+nn), r
    2865/     D60 : ED 5B 7F EF         	ld	de, (reg_xy)
    2866/     D64 : CD 48 0F            	call	kixypnk_cs	; make "(IX+nn), "
    2867/     D67 :                     
    2868/     D67 : E5                  	push	hl
    2869/     D68 : 21 01 13            	ld	hl, dd_ldtbl
    2870/     D6B : CD 8D 0F            	call	get_strBufpoint
    2871/     D6E : E1                  	pop	hl
    2872/     D6F : C3 34 10            	jp	cpstr_crlf	; "A", "L", "H", "E", D", "C", "B"
    2873/     D72 :                     				; CR, LF, 00h
    2874/     D72 :                     	
    2875/     D72 :                     ; LD r, (IX+nn)
    2876/     D72 :                     dd_ld1:
    2877/     D72 : D6 07               	sub	7
    2878/     D74 : 4F                  	ld	c, a
    2879/     D75 : 21 01 13            	ld	hl, dd_ldtbl
    2880/     D78 : CD 8D 0F            	call	get_strBufpoint
    2881/     D7B :                     
    2882/     D7B : CD 5E 10            	call	mk_rcs		; "REG, "
    2883/     D7E :                     dd_mix4:
    2884/     D7E : ED 5B 7F EF         	ld	de, (reg_xy)
    2885/     D82 : C3 51 0F            	jp	kixypnk_crlf	; "(IX+nn)", CR, LF, 00h
    2886/     D85 :                     
    2887/     D85 :                     
    2888/     D85 :                     ; "ADD A,(IX+nn)"
    2889/     D85 :                     dd_mix:
    2890/     D85 : 11 4E 11            	ld	de, ADDstr
    2891/     D88 :                     dd_mix3:
    2892/     D88 : CD 0B 10            	call	mkopcstr	; "ADD"
    2893/     D8B : CD 5B 10            	call	a_colon_sp	; "A, "
    2894/     D8E : 18 EE               	jr	dd_mix4		; "(IX+nn)",cr,lf
    2895/     D90 :                     
    2896/     D90 :                     ;"ADC A,(IX+nn)"
    2897/     D90 :                     dd_mix1:
    2898/     D90 : 11 52 11            	ld	de, ADCstr
    2899/     D93 : 18 F3               	jr	dd_mix3
    2900/     D95 :                     
    2901/     D95 :                     ;"SBC A,(IX+nn)"
    2902/     D95 :                     dd_mix2:
    2903/     D95 : 11 5A 11            	ld	de, SBCstr
    2904/     D98 : 18 EE               	jr	dd_mix3
    2905/     D9A :                     
    2906/     D9A :                     ;
    2907/     D9A :                     ; check 0DD 4bytes MC
    2908/     D9A :                     ;
    2909/     D9A :                     chk_0DD4op:
    2910/     D9A : F5                  	push	af
    2911/     D9B : 3E 04               	ld	a, 4
    2912/     D9D : 32 83 EF            	ld	(mc_Size), a	; 2byte machine code
    2913/     DA0 : F1                  	pop	af
    2914/     DA1 :                     
    2915/     DA1 : FE 21               	cp	21h
    2916/     DA3 : CA C0 0D            	jp	z, DD_21
    2917/     DA6 : FE 22               	cp	22h
    2918/     DA8 : CA CD 0D            	jp	z, DD_22
    2919/     DAB : FE 2A               	cp	2ah
    2920/     DAD : CA D6 0D            	jp	z, DD_2a
    2921/     DB0 : FE 36               	cp	36h
    2922/     DB2 : C2 E6 0D            	jp	nz, chk_DD_CB
    2923/     DB5 :                     ; DD 36
    2924/     DB5 :                     ; "LD (IX+xx), yy"
    2925/     DB5 :                     
    2926/     DB5 : ED 5B 7F EF         	ld	de, (reg_xy)
    2927/     DB9 : CD 48 0F            	call	kixypnk_cs	; "(IX+xx), "
    2928/     DBC : 5A                  	ld	e, d		; e: yy
    2929/     DBD : C3 96 0F            	jp	mk_n2crlf	; "0yyH",cr,lf
    2930/     DC0 :                     
    2931/     DC0 :                     
    2932/     DC0 :                     ; "LD IX, nnnn"
    2933/     DC0 :                     DD_21:
    2934/     DC0 : ED 5B 7F EF         	ld	de, (reg_xy)
    2935/     DC4 : CD 5E 10            	call	mk_rcs		; "IX, "
    2936/     DC7 : CD 76 0F            	call	get_nnnn
    2937/     DCA : C3 9C 0F            	jp	mk_n4crlf	; "nnnnH",cr,lf
    2938/     DCD :                     
    2939/     DCD :                     ; "LD (nnnn), IX"
    2940/     DCD :                     DD_22:
    2941/     DCD : CD 76 0F            	call	get_nnnn
    2942/     DD0 : CD A2 0F            	call	ins_kn4kcs	; "(nnnnH), "
    2943/     DD3 : C3 2B 10            	jp	ix_crlf		; "IX",cr,lf
    2944/     DD6 :                     
    2945/     DD6 :                     ; "LD IX, (nnnn)"
    2946/     DD6 :                     DD_2a:
    2947/     DD6 : ED 5B 7F EF         	ld	de, (reg_xy)
    2948/     DDA :                     DD_2a1:
    2949/     DDA : CD 5E 10            	call	mk_rcs		; "IX, "
    2950/     DDD : CD 76 0F            	call	get_nnnn
    2951/     DE0 : CD B1 0F            	call	mk_kn4k		; "(nnnnH)"
    2952/     DE3 : C3 37 10            	jp	insPostStr	; cr,lf
    2953/     DE6 :                     
    2954/     DE6 :                     chk_DD_CB
    2955/     DE6 : FE CB               	cp	0CBH
    2956/     DE8 : C2 6E 0C            	jp	nz, op_err
    2957/     DEB :                     
    2958/     DEB : CD 76 0F            	call	get_nnnn	; d: 3rd OP, e:nn
    2959/     DEE : 7A                  	ld	a, d
    2960/     DEF :                     
    2961/     DEF : 01 07 00            	ld	bc, dd_rt_tble - dd_rt_tbles
    2962/     DF2 : 21 D0 10            	ld	hl, dd_rt_tbles
    2963/     DF5 : ED B1               	cpir
    2964/     DF7 : C2 06 0E            	jp	nz, DD_CB_nn_XX
    2965/     DFA :                     
    2966/     DFA : 21 39 13            	ld	hl, dd_rt_str
    2967/     DFD : CD 8D 0F            	call	get_strBufpoint
    2968/     E00 : CD 0B 10            	call	mkopcstr	; RLC, RRC, RL, RR, SLA, SRA, SRL
    2969/     E03 : C3 50 0D            	jp	mk_kixpnk	; "(IX+nnH)",cr,lf
    2970/     E06 :                     
    2971/     E06 :                     ; check BIT, RES, SET
    2972/     E06 :                     DD_CB_nn_XX:
    2973/     E06 :                     
    2974/     E06 :                     	; check undefine MC
    2975/     E06 : 01 18 00            	ld	bc, dd_bit_opTble - dd_bit_opTbl
    2976/     E09 : 21 D7 10            	ld	hl, dd_bit_opTbl
    2977/     E0C : ED B1               	cpir
    2978/     E0E : C2 6E 0C            	jp	nz, op_err
    2979/     E11 :                     
    2980/     E11 : FE 80               	cp	80h
    2981/     E13 : DA 2A 0E            	jp	c, dd_bit
    2982/     E16 : FE C0               	cp	0c0h
    2983/     E18 : DA 32 0E            	jp	c, dd_res
    2984/     E1B :                     
    2985/     E1B :                     ; DD_SET
    2986/     E1B :                     ; "SET i, (IX+nn)"
    2987/     E1B :                     
    2988/     E1B : 11 3C 12            	ld	de, SETstr
    2989/     E1E : CD 0B 10            	call	mkopcstr
    2990/     E21 :                     
    2991/     E21 :                     DD_BSR:
    2992/     E21 :                     
    2993/     E21 : 21 9F EF            	ld	hl, dasm_OprStr ; set operand string buffer
    2994/     E24 : CD 86 0C            	call	set_bitno	; "i, "
    2995/     E27 : C3 7E 0D            	jp	dd_mix4		; "(IX+nn)", cr,lf
    2996/     E2A :                     
    2997/     E2A :                     ; DD_BIT
    2998/     E2A :                     ; "BIT i, (IX+nn)"
    2999/     E2A :                     dd_bit:
    3000/     E2A : 11 D1 11            	ld	de, BITstr
    3001/     E2D : CD 0B 10            	call	mkopcstr
    3002/     E30 : 18 EF               	jr	DD_BSR
    3003/     E32 :                     
    3004/     E32 :                     ; DD_RES
    3005/     E32 :                     ; "RES i, (IX+nn)"
    3006/     E32 :                     dd_res:
    3007/     E32 : 11 D5 11            	ld	de, RESstr
    3008/     E35 : CD 0B 10            	call	mkopcstr
    3009/     E38 : 18 E7               	jr	DD_BSR
    3010/     E3A :                     
    3011/     E3A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3012/     E3A :                     	; OPECODE 0EDH check
    3013/     E3A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3014/     E3A :                     
    3015/     E3A :                     chk_0EDH:
    3016/     E3A : FE ED               	cp	0edh
    3017/     E3C : C2 37 0F            	jp	nz, chk_0FDH
    3018/     E3F :                     
    3019/     E3F : 7E                  	ld	a, (hl)		; get 2nd opcode
    3020/     E40 :                     
    3021/     E40 :                     	; check undefine MC
    3022/     E40 : 01 38 00            	ld	bc, ed_op_tble - ed_op_tbl
    3023/     E43 : 21 EF 10            	ld	hl, ed_op_tbl
    3024/     E46 : ED B1               	cpir
    3025/     E48 : C2 6E 0C            	jp	nz, op_err
    3026/     E4B :                     
    3027/     E4B : 79                  	ld	a, c
    3028/     E4C : FE 06               	cp	6
    3029/     E4E : DA 18 0F            	jp	c, ed_4mc
    3030/     E51 : FE 1B               	cp	27
    3031/     E53 : DA 0A 0F            	jp	c, ed_no_opr
    3032/     E56 : FE 1E               	cp	30
    3033/     E58 : DA F7 0E            	jp	c, ed_im
    3034/     E5B : CA D7 0E            	jp	z, ed_ld_ar
    3035/     E5E : FE 1F               	cp	31
    3036/     E60 : CA E0 0E            	jp	z, ed_ld_ai
    3037/     E63 : FE 20               	cp	32
    3038/     E65 : CA E9 0E            	jp	z, ed_ld_ra
    3039/     E68 : FE 21               	cp	33
    3040/     E6A : CA F2 0E            	jp	z, ed_ld_ia
    3041/     E6D : FE 26               	cp	38
    3042/     E6F : DA C6 0E            	jp	c, ed_adc
    3043/     E72 : FE 2A               	cp	42
    3044/     E74 : DA B0 0E            	jp	c, ed_sbc
    3045/     E77 : FE 31               	cp	49
    3046/     E79 : DA 95 0E            	jp	c, ed_out
    3047/     E7C :                     
    3048/     E7C :                     ; c: 49 - 55 : IN r,(C) (r:B,C,D,E,H,L,A)
    3049/     E7C :                     
    3050/     E7C : 11 B4 11            	ld	de, INstr
    3051/     E7F : CD 0B 10            	call	mkopcstr
    3052/     E82 :                     
    3053/     E82 : 79                  	ld	a, c
    3054/     E83 : D6 31               	sub	49
    3055/     E85 : 4F                  	ld	c, a
    3056/     E86 : 21 01 13            	ld	hl, dd_ldtbl
    3057/     E89 : CD 8D 0F            	call	get_strBufpoint	; get strung buffer
    3058/     E8C : CD 5E 10            	call	mk_rcs		; "REG, "
    3059/     E8F : 11 44 12            	ld	de, KCKstr
    3060/     E92 : C3 34 10            	jp	cpstr_crlf	; "(C)",cr,lf
    3061/     E95 :                     
    3062/     E95 :                     ; c: 42 - 48 : OUT (C),r(r:B,C,D,E,H,L,A)
    3063/     E95 :                     ed_out:
    3064/     E95 : 11 B0 11            	ld	de, OUTstr
    3065/     E98 : CD 0B 10            	call	mkopcstr
    3066/     E9B :                     
    3067/     E9B : 11 44 12            	ld	de, KCKstr
    3068/     E9E : CD 5E 10            	call	mk_rcs		; "(C), "
    3069/     EA1 :                     
    3070/     EA1 : 79                  	ld	a, c
    3071/     EA2 : D6 2A               	sub	42
    3072/     EA4 : 4F                  	ld	c, a
    3073/     EA5 : E5                  	push	hl
    3074/     EA6 : 21 01 13            	ld	hl, dd_ldtbl
    3075/     EA9 :                     
    3076/     EA9 :                     ed_out1:
    3077/     EA9 : CD 8D 0F            	call	get_strBufpoint	; get strung buffer
    3078/     EAC : E1                  	pop	hl
    3079/     EAD : C3 34 10            	jp	cpstr_crlf	; "REG",cr,lf
    3080/     EB0 :                     
    3081/     EB0 :                     ; c: 38 - 41 : SBC HL,rr(rr:BC,DE,HL,SP)
    3082/     EB0 :                     ed_sbc:
    3083/     EB0 : 11 5A 11            	ld	de, SBCstr
    3084/     EB3 : CD 0B 10            	call	mkopcstr
    3085/     EB6 :                     
    3086/     EB6 : 11 76 1F            	ld	de, RNHL
    3087/     EB9 : CD 5E 10            	call	mk_rcs		; "HL, "
    3088/     EBC :                     
    3089/     EBC : 79                  	ld	a, c
    3090/     EBD : D6 26               	sub	38
    3091/     EBF :                     ed_sbc1:
    3092/     EBF : 4F                  	ld	c, a
    3093/     EC0 : E5                  	push	hl
    3094/     EC1 : 21 89 12            	ld	hl, INC_DEC_ADDrp
    3095/     EC4 : 18 E3               	jr	ed_out1
    3096/     EC6 :                     
    3097/     EC6 :                     ; c: 34 - 37 : ADC HL,rr(rr:BC,DE,HL,SP)
    3098/     EC6 :                     ed_adc:
    3099/     EC6 : 11 52 11            	ld	de, ADCstr
    3100/     EC9 : CD 0B 10            	call	mkopcstr
    3101/     ECC :                     
    3102/     ECC : 11 76 1F            	ld	de, RNHL
    3103/     ECF : CD 5E 10            	call	mk_rcs		; "HL, "
    3104/     ED2 :                     
    3105/     ED2 : 79                  	ld	a, c
    3106/     ED3 : D6 22               	sub	34
    3107/     ED5 : 18 E8               	jr	ed_sbc1
    3108/     ED7 :                     
    3109/     ED7 :                     ; c: 30, 31 : LD A,R ; LD A,I
    3110/     ED7 :                     ed_ld_ar:
    3111/     ED7 : CD 5B 10            	call	a_colon_sp	; "A, "
    3112/     EDA : 11 B1 1F            	ld	de, RNR
    3113/     EDD : C3 34 10            	jp	cpstr_crlf	; "R",cr,lf
    3114/     EE0 :                     	
    3115/     EE0 :                     ed_ld_ai:
    3116/     EE0 : CD 5B 10            	call	a_colon_sp	; "A, "
    3117/     EE3 : 11 AF 1F            	ld	de, RNI
    3118/     EE6 : C3 34 10            	jp	cpstr_crlf	; "I",cr,lf
    3119/     EE9 :                     	
    3120/     EE9 :                     ; c: 32, 33 : LD R,A ; LD I,A
    3121/     EE9 :                     ed_ld_ra:
    3122/     EE9 : 11 B1 1F            	ld	de, RNR
    3123/     EEC :                     ed_ld_ra1:
    3124/     EEC : CD 5E 10            	call	mk_rcs		; "R, "
    3125/     EEF : C3 26 10            	jp	a_crlf		; "A",cr,lf
    3126/     EF2 :                     
    3127/     EF2 :                     ed_ld_ia:
    3128/     EF2 : 11 AF 1F            	ld	de, RNI
    3129/     EF5 : 18 F5               	jr	ed_ld_ra1
    3130/     EF7 :                     	
    3131/     EF7 :                     ; c: 27, 28, 29 : IM 2, IM 1, IM 0
    3132/     EF7 :                     ed_im:
    3133/     EF7 : 11 DD 11            	ld	de, IMstr
    3134/     EFA : CD 0B 10            	call	mkopcstr
    3135/     EFD :                     
    3136/     EFD : 3E 1D               	ld	a, 29
    3137/     EFF : 91                  	sub	c
    3138/     F00 : C6 30               	add	a, '0'		; '0', '1', '2'
    3139/     F02 : 21 9F EF            	ld	hl, dasm_OprStr
    3140/     F05 : 77                  	ld	(hl), a
    3141/     F06 : 23                  	inc	hl
    3142/     F07 : C3 37 10            	jp	insPostStr
    3143/     F0A :                     
    3144/     F0A :                     ; c: 6 - 26 ed_noopr
    3145/     F0A :                     ed_no_opr:
    3146/     F0A : D6 06               	sub	6
    3147/     F0C : 4F                  	ld	c, a
    3148/     F0D : 06 00               	ld	b, 0
    3149/     F0F : 21 0F 13            	ld	hl, ed_noopr
    3150/     F12 : CD 8D 0F            	call	get_strBufpoint		; de : string buffer
    3151/     F15 : C3 0B 10            	jp	mkopcstr
    3152/     F18 :                     ;
    3153/     F18 :                     ; check ED 4 byte MC
    3154/     F18 :                     ;
    3155/     F18 :                     ed_4mc:
    3156/     F18 : 3E 04               	ld	a, 4
    3157/     F1A : 32 83 EF            	ld	(mc_Size), a	; 4byte machine code
    3158/     F1D :                     
    3159/     F1D : C5                  	push	bc
    3160/     F1E : 79                  	ld	a, c
    3161/     F1F : 21 CF 12            	ld	hl, ed_rp_str
    3162/     F22 : CD 8D 0F            	call	get_strBufpoint		; de : string buffer
    3163/     F25 : C1                  	pop	bc
    3164/     F26 : 79                  	ld	a, c
    3165/     F27 : FE 03               	cp	3
    3166/     F29 : DA DA 0D            	jp	c, DD_2a1		; "rr, (nnnnH)",cr,lf
    3167/     F2C :                     					; rr: BC, DE, SP
    3168/     F2C :                     ; "(nnnnH), rr" rr: BC, DE, SP
    3169/     F2C :                     
    3170/     F2C : D5                  	push	de
    3171/     F2D : CD 76 0F            	call	get_nnnn
    3172/     F30 : CD A2 0F            	call	ins_kn4kcs	; "(nnnnH), "
    3173/     F33 : D1                  	pop	de
    3174/     F34 : C3 34 10            	jp	cpstr_crlf	; "REG",cr,lf
    3175/     F37 :                     
    3176/     F37 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3177/     F37 :                     	; OPECODE 0FDH check
    3178/     F37 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3179/     F37 :                     
    3180/     F37 :                     chk_0FDH:
    3181/     F37 :                     
    3182/     F37 : 11 A6 1F            	ld	de, RNIY
    3183/     F3A : ED 53 7F EF         	ld	(reg_xy), de	; save index reg string
    3184/     F3E : 11 EB 12            	ld	de, addiyrp_tbl
    3185/     F41 : ED 53 81 EF         	ld	(xy_srtp), de
    3186/     F45 :                     
    3187/     F45 : C3 A7 0C            	jp	chk_0DDH_1
    3188/     F48 :                     
    3189/     F48 :                     ;-----------------------------------
    3190/     F48 :                     ; make "(REG+nn), " at dasm_OprStr
    3191/     F48 :                     ;	REG : IX or IY
    3192/     F48 :                     ; input de: RNIX, or RNIY
    3193/     F48 :                     ;-----------------------------------
    3194/     F48 :                     kixypnk_cs:
    3195/     F48 : 21 9F EF            	ld	hl, dasm_OprStr
    3196/     F4B : CD 57 0F            	call	mk_kixypnk
    3197/     F4E : C3 83 10            	jp	ins_kmR
    3198/     F51 :                     
    3199/     F51 :                     ;-----------------------------------
    3200/     F51 :                     ; make "(REG+nn)",cr,lf 
    3201/     F51 :                     ;	REG : IX or IY
    3202/     F51 :                     ; input de: RNIX, or RNIY
    3203/     F51 :                     ;       hl: string buffer
    3204/     F51 :                     ;-----------------------------------
    3205/     F51 :                     kixypnk_crlf:
    3206/     F51 : CD 57 0F            	call	mk_kixypnk
    3207/     F54 : C3 37 10            	jp	insPostStr	; CR, LF, 00h
    3208/     F57 :                     
    3209/     F57 :                     ;-----------------------------------
    3210/     F57 :                     ; make "(IX+nn)", "(IY+nn)" string
    3211/     F57 :                     ; input de: RNIX, or RNIY
    3212/     F57 :                     ;       hl: string buffer
    3213/     F57 :                     ;-----------------------------------
    3214/     F57 :                     mk_kixypnk:
    3215/     F57 : CD 6E 10            	call	ins_kakkoL	; "("
    3216/     F5A : CD 66 10            	call	st_copy	; IX
    3217/     F5D : CD 76 0F            	call	get_nnnn
    3218/     F60 : 7B                  	ld	a, e		;get number
    3219/     F61 : FE 80               	cp	80h
    3220/     F63 : 38 0C               	jr	c, numPlus	; number plus
    3221/     F65 : ED 44               	neg			; a = not a + 1
    3222/     F67 : 5F                  	ld	e, a
    3223/     F68 : CD 7F 10            	call	ins_misR	; -
    3224/     F6B :                     sv_nnkr:
    3225/     F6B : CD D9 0F            	call	hex2str_asm	; nnh
    3226/     F6E : C3 72 10            	jp	ins_kakkoR	; ")"
    3227/     F71 :                     	
    3228/     F71 :                     numPlus:
    3229/     F71 : CD 7B 10            	call	ins_plsR	; +
    3230/     F74 : 18 F5               	jr	sv_nnkr
    3231/     F76 :                     
    3232/     F76 :                     ; de : nnnn , or d:yy, e:xx
    3233/     F76 :                     get_nnnn:
    3234/     F76 : E5                  	push	hl
    3235/     F77 : 2A 7D EF            	ld	hl, (dasm_adr)
    3236/     F7A : 23                  	inc	hl		; 2nd opecode address
    3237/     F7B : 23                  	inc	hl		; operand address
    3238/     F7C : 5E                  	ld	e, (hl)		; get nn
    3239/     F7D : 23                  	inc	hl
    3240/     F7E : 56                  	ld	d, (hl)		; d:yy use for "LD (IX+xx), yy"
    3241/     F7F :                     				; d:OP use for 4bytes MC like "DD CB xx OP"
    3242/     F7F :                     				; de : YYXX : ED OP XX YY
    3243/     F7F : E1                  	pop	hl
    3244/     F80 : C9                  	ret
    3245/     F81 :                     
    3246/     F81 :                     ;-------------------------------------------------
    3247/     F81 :                     ; hl: massage table
    3248/     F81 :                     ; bc: found operand point
    3249/     F81 :                     ;
    3250/     F81 :                     ; output: copy strings to dasm_OprStr buffer
    3251/     F81 :                     ;         hl = end point of copied string buffer
    3252/     F81 :                     ;-------------------------------------------------
    3253/     F81 :                     mk_str:
    3254/     F81 : CD 8D 0F            	call	get_strBufpoint
    3255/     F84 : 21 9F EF            	ld	hl, dasm_OprStr
    3256/     F87 : C3 66 10            	jp	st_copy
    3257/     F8A :                     
    3258/     F8A :                     ;------------------------------------------------
    3259/     F8A :                     ; get register strings address
    3260/     F8A :                     ; input bc: string buffer offset
    3261/     F8A :                     ; output de: register strings address
    3262/     F8A :                     ;------------------------------------------------
    3263/     F8A :                     get_rstg_off:
    3264/     F8A : 21 61 12            	ld	hl, disRegTbl
    3265/     F8D :                     
    3266/     F8D :                     ;-------------------------------------------------
    3267/     F8D :                     ; input
    3268/     F8D :                     ;	bc: found operand point
    3269/     F8D :                     ;	hl: massage table
    3270/     F8D :                     ; output: 
    3271/     F8D :                     ;	DE : string point
    3272/     F8D :                     ;-------------------------------------------------
    3273/     F8D :                     get_strBufpoint:
    3274/     F8D : CB 21               	sla	c
    3275/     F8F : CB 10               	rl	b		; bc *=2
    3276/     F91 : 09                  	add	hl, bc		; get operand string point
    3277/     F92 : 5E                  	ld	e, (hl)
    3278/     F93 : 23                  	inc	hl
    3279/     F94 : 56                  	ld	d, (hl)
    3280/     F95 : C9                  	ret
    3281/     F96 :                     
    3282/     F96 :                     ;------------------------------------------------
    3283/     F96 :                     ; insert "nnH", CR, LF to buffer
    3284/     F96 :                     ;input e: value
    3285/     F96 :                     ;      hl: string buffer
    3286/     F96 :                     ;------------------------------------------------
    3287/     F96 :                     mk_n2crlf:
    3288/     F96 : CD D9 0F            	call	hex2str_asm
    3289/     F99 : C3 37 10            	jp	insPostStr
    3290/     F9C :                     
    3291/     F9C :                     ;------------------------------------------------
    3292/     F9C :                     ; insert "nnnnH", CR, LF to buffer
    3293/     F9C :                     ;input de: value
    3294/     F9C :                     ;      hl: string buffer
    3295/     F9C :                     ;------------------------------------------------
    3296/     F9C :                     mk_n4crlf:
    3297/     F9C : CD C8 0F            	call	hex4str_asm
    3298/     F9F : C3 37 10            	jp	insPostStr
    3299/     FA2 :                     
    3300/     FA2 :                     ;------------------------------------------------
    3301/     FA2 :                     ; insert "(nnnnH), " to buffer dasm_OprStr
    3302/     FA2 :                     ;input de: value
    3303/     FA2 :                     ;
    3304/     FA2 :                     ; make "(nnnnH), " to dasm_OprStr buffer
    3305/     FA2 :                     ; output hl: end point of string buffer
    3306/     FA2 :                     ;------------------------------------------------
    3307/     FA2 :                     ins_kn4kcs:
    3308/     FA2 : 21 9F EF            	ld	hl, dasm_OprStr	;operand str buffer
    3309/     FA5 : CD 6E 10            	call	ins_kakkoL	; "("
    3310/     FA8 : CD C8 0F            	call	hex4str_asm
    3311/     FAB : CD 72 10            	call	ins_kakkoR	; ")"
    3312/     FAE : C3 83 10            	jp	ins_kmR		; ", "
    3313/     FB1 :                     
    3314/     FB1 :                     ;------------------------------------------------
    3315/     FB1 :                     ; insert "(nnnnH)" to buffer
    3316/     FB1 :                     ;input de: value
    3317/     FB1 :                     ;      hl: string buffer
    3318/     FB1 :                     ;------------------------------------------------
    3319/     FB1 :                     mk_kn4k:
    3320/     FB1 : CD 6E 10            	call	ins_kakkoL	; "("
    3321/     FB4 : CD C8 0F            	call	hex4str_asm
    3322/     FB7 : C3 72 10            	jp	ins_kakkoR	; ")"
    3323/     FBA :                     
    3324/     FBA :                     ;------------------------------------------------
    3325/     FBA :                     ; Make address string from branch relative value
    3326/     FBA :                     ; input hl: string buffer pointer
    3327/     FBA :                     ; output *hl= "nnnnH",cr,lf,0
    3328/     FBA :                     ;------------------------------------------------
    3329/     FBA :                     mkRel_str:
    3330/     FBA : E5                  	push	hl
    3331/     FBB : 2A 7D EF            	ld	hl, (dasm_adr)
    3332/     FBE : CD 1A 05            	call	Rel_adr_c	; return hl : target addr
    3333/     FC1 : EB                  	ex	de, hl		; hl: buffer, de: addr value
    3334/     FC2 : E1                  	pop	hl
    3335/     FC3 : CD C8 0F            	call	hex4str_asm
    3336/     FC6 : 18 6F               	jr	insPostStr
    3337/     FC8 :                     	
    3338/     FC8 :                     ;------------------------------------------------
    3339/     FC8 :                     ;input de: value, hl: save baffer.
    3340/     FC8 :                     ;output 4hex chars(asm format)
    3341/     FC8 :                     ;	(ex). "0FFFFH"
    3342/     FC8 :                     ;             "1234H"
    3343/     FC8 :                     ;       hl : hl = hl + 5(or 6); *hl=0
    3344/     FC8 :                     ;------------------------------------------------
    3345/     FC8 :                     hex4str_asm:
    3346/     FC8 : 7A                  	ld	a, d
    3347/     FC9 : FE A0               	cp	0a0h
    3348/     FCB : 38 04               	jr	c, h4sa_1
    3349/     FCD : 3E 30               	ld	a, '0'
    3350/     FCF : 77                  	ld	(hl), a
    3351/     FD0 : 23                  	inc	hl
    3352/     FD1 :                     
    3353/     FD1 :                     h4sa_1:
    3354/     FD1 : CD E7 0F            	call	hex4str
    3355/     FD4 :                     h4sa_2:
    3356/     FD4 : 3E 48               	ld	a, 'H'
    3357/     FD6 : C3 74 10            	jp	ikk_1
    3358/     FD9 :                     
    3359/     FD9 :                     ;------------------------------------------------
    3360/     FD9 :                     ;input e: value, hl: save baffer.
    3361/     FD9 :                     ;output: 2 hex chars(asm format)
    3362/     FD9 :                     ;	(ex). "0FFH"
    3363/     FD9 :                     ;             "12H"
    3364/     FD9 :                     ;       hl : hl = hl + 3(or 4); *hl=0
    3365/     FD9 :                     ;------------------------------------------------
    3366/     FD9 :                     hex2str_asm:
    3367/     FD9 : 7B                  	ld	a, e
    3368/     FDA : FE A0               	cp	0a0h
    3369/     FDC : 38 04               	jr	c, h2sa_1
    3370/     FDE : 3E 30               	ld	a, '0'
    3371/     FE0 : 77                  	ld	(hl), a
    3372/     FE1 : 23                  	inc	hl
    3373/     FE2 :                     
    3374/     FE2 :                     h2sa_1:
    3375/     FE2 : CD EF 0F            	call	hex2str
    3376/     FE5 : 18 ED               	jr	h4sa_2
    3377/     FE7 :                     
    3378/     FE7 :                     ;------------------------------------------------
    3379/     FE7 :                     ;input de: value, hl: save baffer.
    3380/     FE7 :                     ;output: 4 hex chras in save buffer
    3381/     FE7 :                     ;	 hl = hl + 4
    3382/     FE7 :                     ;------------------------------------------------
    3383/     FE7 :                     hex4str:
    3384/     FE7 : 7A                  	ld	a, d
    3385/     FE8 : CD F8 0F            	call	h2s_n1
    3386/     FEB : 7A                  	ld	a, d
    3387/     FEC : CD FC 0F            	call	h2s_n2
    3388/     FEF :                     
    3389/     FEF :                     ;------------------------------------------------
    3390/     FEF :                     ;input e: value, hl: save baffer.
    3391/     FEF :                     ;output: 2 hex chras in save buffer
    3392/     FEF :                     ;	 hl = hl + 2
    3393/     FEF :                     ;------------------------------------------------
    3394/     FEF :                     hex2str:
    3395/     FEF : 7B                  	ld	a, e
    3396/     FF0 : CD F8 0F            	call	h2s_n1
    3397/     FF3 : 7B                  	ld	a, e
    3398/     FF4 : CD FC 0F            	call	h2s_n2
    3399/     FF7 : C9                  	ret
    3400/     FF8 :                     
    3401/     FF8 :                     h2s_n1:
    3402/     FF8 : 0F                  	rrca
    3403/     FF9 : 0F                  	rrca
    3404/     FFA : 0F                  	rrca
    3405/     FFB : 0F                  	rrca
    3406/     FFC :                     h2s_n2:
    3407/     FFC : E6 0F               	and	0fh
    3408/     FFE : F6 30               	or	30h
    3409/    1000 : FE 3A               	cp	3aH
    3410/    1002 : 38 70               	jr	c, ikk_1	; '0' to '9'
    3411/    1004 : C6 07               	add	a, 07h		; 'A' to 'F'
    3412/    1006 : 18 6C               	jr	ikk_1
    3413/    1008 :                     
    3414/    1008 :                     add_opstr:
    3415/    1008 : 11 4E 11            	ld	de, ADDstr
    3416/    100B :                     ;-----------------------------------
    3417/    100B :                     ; make opecode strings
    3418/    100B :                     ; input de : opecode strings
    3419/    100B :                     ;-----------------------------------
    3420/    100B :                     mkopcstr:
    3421/    100B : F5                  	push	af
    3422/    100C : C5                  	push	bc
    3423/    100D : 06 08               	ld	b, 8	;tab size
    3424/    100F : 21 97 EF            	ld	hl, dasm_OpcStr
    3425/    1012 :                     dmkstr0:
    3426/    1012 : 1A                  	ld	a, (de)
    3427/    1013 : B7                  	or	a
    3428/    1014 : 28 06               	jr	z, dmkst1
    3429/    1016 : 77                  	ld	(hl), a
    3430/    1017 : 23                  	inc	hl
    3431/    1018 : 13                  	inc	de
    3432/    1019 : 05                  	dec	b
    3433/    101A : 18 F6               	jr	dmkstr0
    3434/    101C :                     dmkst1:
    3435/    101C : 3E 20               	ld	a, ' '
    3436/    101E :                     dmkst2:
    3437/    101E : 77                  	ld	(hl), a
    3438/    101F : 23                  	inc	hl
    3439/    1020 : 05                  	dec	b
    3440/    1021 : 20 FB               	jr	nz, dmkst2
    3441/    1023 : C1                  	pop	bc
    3442/    1024 : F1                  	pop	af
    3443/    1025 : C9                  	ret
    3444/    1026 :                     
    3445/    1026 :                     ;
    3446/    1026 :                     ; "REG",CR,LF
    3447/    1026 :                     ;
    3448/    1026 :                     a_crlf:
    3449/    1026 : 11 66 1F            	ld	de, RNA
    3450/    1029 : 18 09               	jr	cpstr_crlf	; "A",CR,LF
    3451/    102B :                     ;bc_crlf:
    3452/    102B :                     ;	ld	de, RNBC
    3453/    102B :                     ;	jr	cpstr_crlf
    3454/    102B :                     ;de_crlf:
    3455/    102B :                     ;	ld	de, RNDE
    3456/    102B :                     ;	jr	cpstr_crlf
    3457/    102B :                     ix_crlf:
    3458/    102B : ED 5B 7F EF         	ld	de, (reg_xy)
    3459/    102F : 18 03               	jr	cpstr_crlf
    3460/    1031 :                     ;sp_crlf:
    3461/    1031 :                     ;	ld	de, RNSP
    3462/    1031 :                     ;	jr	cpstr_crlf
    3463/    1031 :                     hl_crlf:
    3464/    1031 : 11 76 1F            	ld	de, RNHL
    3465/    1034 :                     cpstr_crlf:
    3466/    1034 : CD 66 10            	call	st_copy		; "REG"
    3467/    1037 :                     	
    3468/    1037 :                     ;-----------------------------------
    3469/    1037 :                     ; insert CR, LF, 00H(end delimiter)
    3470/    1037 :                     ; input hl : insert buffer
    3471/    1037 :                     ;-----------------------------------
    3472/    1037 :                     insPostStr:
    3473/    1037 : 3E 0D               	ld	a, CR
    3474/    1039 : 77                  	ld	(hl), a		; CR code
    3475/    103A : 23                  	inc	hl
    3476/    103B : 3E 0A               	ld	a, LF
    3477/    103D : 77                  	ld	(hl), a		; LF code
    3478/    103E : 23                  	inc	hl
    3479/    103F : AF                  	xor	a
    3480/    1040 : 77                  	ld	(hl), a		; end delimiter
    3481/    1041 : C9                  	ret
    3482/    1042 :                     
    3483/    1042 :                     mk_krk_1:
    3484/    1042 : 21 9F EF            	ld	hl, dasm_OprStr
    3485/    1045 :                     ;----------------------------
    3486/    1045 :                     ; insert "(Reg)" to buffer
    3487/    1045 :                     ;
    3488/    1045 :                     ; input de: register string
    3489/    1045 :                     ;	hl: save buffer
    3490/    1045 :                     ;----------------------------
    3491/    1045 :                     mk_krk:
    3492/    1045 : CD 6E 10            	call	ins_kakkoL	; "("
    3493/    1048 : CD 66 10            	call	st_copy		; "REG"
    3494/    104B : 18 25               	jr	ins_kakkoR	; ")"
    3495/    104D :                     
    3496/    104D :                     ;----------------------------
    3497/    104D :                     ; insert "(Reg), " to dasm_OprStr
    3498/    104D :                     ;
    3499/    104D :                     ; input de: register string
    3500/    104D :                     ;----------------------------
    3501/    104D :                     mk_krkcs:
    3502/    104D : 21 9F EF            	ld	hl, dasm_OprStr
    3503/    1050 : CD 6E 10            	call	ins_kakkoL	; "("
    3504/    1053 : CD 66 10            	call	st_copy		; "REG"
    3505/    1056 : CD 72 10            	call	ins_kakkoR	; ")"
    3506/    1059 : 18 28               	jr	ins_kmR		; ", "
    3507/    105B :                     
    3508/    105B :                     ;----------------------------
    3509/    105B :                     ; insert "A, " to dasm_OprStr
    3510/    105B :                     ;----------------------------
    3511/    105B :                     a_colon_sp:
    3512/    105B : 11 66 1F            	ld	de, RNA
    3513/    105E :                     ;----------------------------
    3514/    105E :                     ; insert "Reg, " to dasm_OprStr
    3515/    105E :                     ;
    3516/    105E :                     ; input de: register string
    3517/    105E :                     ;----------------------------
    3518/    105E :                     mk_rcs:
    3519/    105E : 21 9F EF            	ld	hl, dasm_OprStr
    3520/    1061 : CD 66 10            	call	st_copy		; "REG"
    3521/    1064 : 18 1D               	jr	ins_kmR		; ", "
    3522/    1066 :                     
    3523/    1066 :                     ;-------------------------------------------------
    3524/    1066 :                     ; copy string to output buffer
    3525/    1066 :                     ; input:
    3526/    1066 :                     ;	de : string point
    3527/    1066 :                     ;	hl : output buffer
    3528/    1066 :                     ;-------------------------------------------------
    3529/    1066 :                     st_copy:
    3530/    1066 : 1A                  	ld	a, (de)
    3531/    1067 : 77                  	ld	(hl), a
    3532/    1068 : B7                  	or	a
    3533/    1069 : C8                  	ret	z	; return after coping delimiter
    3534/    106A :                     			; hl : delimiter position
    3535/    106A : 23                  	inc	hl
    3536/    106B : 13                  	inc	de
    3537/    106C : 18 F8               	jr	st_copy
    3538/    106E :                     
    3539/    106E :                     ;--------------
    3540/    106E :                     ; insert "("
    3541/    106E :                     ;--------------
    3542/    106E :                     ins_kakkoL:
    3543/    106E : 3E 28               	ld	a, '('
    3544/    1070 : 18 02               	jr	ikk_1
    3545/    1072 :                     	
    3546/    1072 :                     ;--------------
    3547/    1072 :                     ; insert ")"
    3548/    1072 :                     ;--------------
    3549/    1072 :                     ins_kakkoR:
    3550/    1072 : 3E 29               	ld	a, ')'
    3551/    1074 :                     ikk_1:
    3552/    1074 : 77                  	ld	(hl), a
    3553/    1075 : 23                  	inc	hl
    3554/    1076 : C9                  	ret
    3555/    1077 :                     
    3556/    1077 :                     ;--------------
    3557/    1077 :                     ; insert " "
    3558/    1077 :                     ;--------------
    3559/    1077 :                     ins_spcR:
    3560/    1077 : 3E 20               	ld	a, ' '
    3561/    1079 : 18 F9               	jr	ikk_1
    3562/    107B :                     
    3563/    107B :                     ;--------------
    3564/    107B :                     ; insert "+"
    3565/    107B :                     ;--------------
    3566/    107B :                     ins_plsR:
    3567/    107B : 3E 2B               	ld	a, '+'
    3568/    107D : 18 F5               	jr	ikk_1
    3569/    107F :                     
    3570/    107F :                     ;--------------
    3571/    107F :                     ; insert "-"
    3572/    107F :                     ;--------------
    3573/    107F :                     ins_misR:
    3574/    107F : 3E 2D               	ld	a, '-'
    3575/    1081 : 18 F1               	jr	ikk_1
    3576/    1083 :                     
    3577/    1083 :                     ;--------------
    3578/    1083 :                     ; insert ", "
    3579/    1083 :                     ;--------------
    3580/    1083 :                     ins_kmR:
    3581/    1083 : 3E 2C               	ld	a, ','
    3582/    1085 : CD 74 10            	call	ikk_1
    3583/    1088 : 18 ED               	jr	ins_spcR
    3584/    108A :                     
    3585/    108A :                     ;------------------------------------------
    3586/    108A :                     ; Dis assemble tables
    3587/    108A :                     ;------------------------------------------
    3588/    108A :                     oth_1op_s:
    3589/    108A : 00                  	DB	00H	; NOP
    3590/    108B : 07                  	DB	07H	; RLCA
    3591/    108C : 0F                  	DB	0FH	; RRCA
    3592/    108D : 17                  	DB	17H	; RLA
    3593/    108E : 1F                  	DB	1FH	; RRA
    3594/    108F : 27                  	DB	27H	; DAA
    3595/    1090 : 2F                  	DB	2FH	; CPL
    3596/    1091 : 37                  	DB	37H	; SCF
    3597/    1092 : 3F                  	DB	3FH	; CCF
    3598/    1093 : C9                  	DB	0C9H	; RET
    3599/    1094 : D9                  	DB	0D9H	; EXX
    3600/    1095 : F3                  	DB	0F3H	; DI
    3601/    1096 : FB                  	DB	0FBH	; EI
    3602/    1097 :                     oth_1op_e:
    3603/    1097 :                     
    3604/    1097 :                     INC_OPCDTBLS:
    3605/    1097 : 04                  	DB	04H	; INC	B
    3606/    1098 : 0C                  	DB	0CH	; INC	C
    3607/    1099 : 14                  	DB	14H	; INC	D
    3608/    109A : 1C                  	DB	1CH	; INC	E
    3609/    109B : 24                  	DB	24H	; INC	H
    3610/    109C : 2C                  	DB	2CH	; INC	L
    3611/    109D : 34                  	DB	34H	; INC	(HL)
    3612/    109E : 3C                  	DB	3CH	; INC	A
    3613/    109F :                     INC_OPCDTBLE:
    3614/    109F :                     
    3615/    109F :                     DEC_OPCDTBLS:
    3616/    109F : 05                  	DB	05H	; DEC	B
    3617/    10A0 : 0D                  	DB	0DH	; DEC	C
    3618/    10A1 : 15                  	DB	15H	; DEC	D
    3619/    10A2 : 1D                  	DB	1DH	; DEC	E
    3620/    10A3 : 25                  	DB	25H	; DEC	H
    3621/    10A4 : 2D                  	DB	2DH	; DEC	L
    3622/    10A5 : 35                  	DB	35H	; DEC	(HL)
    3623/    10A6 : 3D                  	DB	3DH	; DEC	A
    3624/    10A7 :                     DEC_OPCDTBLE:
    3625/    10A7 :                     
    3626/    10A7 :                     inc_rp_s:
    3627/    10A7 : 03                  	DB	03H	; INC	BC
    3628/    10A8 : 13                  	DB	13H	; INC	DE
    3629/    10A9 : 23                  	DB	23H	; INC	HL
    3630/    10AA : 33                  	DB	33H	; INC	SP
    3631/    10AB :                     inc_rp_e:
    3632/    10AB :                     
    3633/    10AB :                     dec_rp_s:
    3634/    10AB : 0B                  	DB	0BH	; DEC	BC
    3635/    10AC : 1B                  	DB	1BH	; DEC	DE
    3636/    10AD : 2B                  	DB	2BH	; DEC	HL
    3637/    10AE : 3B                  	DB	3BH	; DEC	SP
    3638/    10AF :                     dec_rp_e:
    3639/    10AF :                     
    3640/    10AF :                     add_rp_s:
    3641/    10AF : 09                  	DB	09H	; ADD	HL,BC
    3642/    10B0 : 19                  	DB	19H	; ADD	HL,DE
    3643/    10B1 : 29                  	DB	29H	; ADD	HL,HL
    3644/    10B2 : 39                  	DB	39H	; ADD	HL,SP
    3645/    10B3 :                     add_rp_e:
    3646/    10B3 :                     
    3647/    10B3 :                     pop_rp_s:
    3648/    10B3 : C1                  	DB	0C1H	; POP	BC
    3649/    10B4 : D1                  	DB	0D1H	; POP	DE
    3650/    10B5 : E1                  	DB	0E1H	; POP	HL
    3651/    10B6 : F1                  	DB	0F1H	; POP	AF
    3652/    10B7 :                     pop_rp_e:
    3653/    10B7 :                     
    3654/    10B7 :                     push_rp_s:
    3655/    10B7 : C5                  	DB	0C5H	; PUSH	BC
    3656/    10B8 : D5                  	DB	0D5H	; PUSH	DE
    3657/    10B9 : E5                  	DB	0E5H	; PUSH	HL
    3658/    10BA : F5                  	DB	0F5H	; PUSH	AF
    3659/    10BB :                     push_rp_e:
    3660/    10BB :                     
    3661/    10BB :                     dd_ld_tbl:
    3662/    10BB : 46                  	DB	46h	; nn: LD B,(IX+nn)
    3663/    10BC : 4E                  	DB	4Eh	; nn: LD C,(IX+nn)
    3664/    10BD : 56                  	DB	56h	; nn: LD D,(IX+nn)
    3665/    10BE : 5E                  	DB	5Eh	; nn: LD E,(IX+nn)
    3666/    10BF : 66                  	DB	66h	; nn: LD H,(IX+nn)
    3667/    10C0 : 6E                  	DB	6Eh	; nn: LD L,(IX+nn)
    3668/    10C1 : 7E                  	DB	7Eh	; nn: LD A,(IX+nn)
    3669/    10C2 :                     
    3670/    10C2 : 70                  	DB	70h	; nn: LD (IX+nn),B
    3671/    10C3 : 71                  	DB	71h	; nn: LD (IX+nn),C
    3672/    10C4 : 72                  	DB	72h	; nn: LD (IX+nn),D
    3673/    10C5 : 73                  	DB	73h	; nn: LD (IX+nn),E
    3674/    10C6 : 74                  	DB	74h	; nn: LD (IX+nn),H
    3675/    10C7 : 75                  	DB	75h	; nn: LD (IX+nn),L
    3676/    10C8 : 77                  	DB	77h	; nn: LD (IX+nn),A
    3677/    10C9 :                     dd_ld_tble:
    3678/    10C9 :                     
    3679/    10C9 :                     dd_log_tbl:
    3680/    10C9 : 96                  	DB	96h	; nn: SUB (IX+nn)
    3681/    10CA : A6                  	DB	0A6h	; nn: AND (IX+nn)
    3682/    10CB : AE                  	DB	0AEh	; nn: XOR (IX+nn)
    3683/    10CC : B6                  	DB	0B6h	; nn: OR  (IX+nn)
    3684/    10CD : BE                  	DB	0BEh	; nn: CP  (IX+nn)
    3685/    10CE : 34                  	DB	34h	; nn: INC (IX+nn)
    3686/    10CF : 35                  	DB	35h	; nn: DEC (IX+nn)
    3687/    10D0 :                     dd_log_tble:
    3688/    10D0 :                     
    3689/    10D0 :                     dd_rt_tbles:
    3690/    10D0 : 06                  	DB	06h	; RLC (IX+nn)
    3691/    10D1 : 0E                  	DB	0Eh	; RRC (IX+nn)
    3692/    10D2 : 16                  	DB	16h	; RL  (IX+nn)
    3693/    10D3 : 1E                  	DB	1Eh	; RR  (IX+nn)
    3694/    10D4 : 26                  	DB	26h	; SLA (IX+nn)
    3695/    10D5 : 2E                  	DB	2Eh	; SRA (IX+nn)
    3696/    10D6 : 3E                  	DB	3Eh	; SRL (IX+nn)
    3697/    10D7 :                     dd_rt_tble:
    3698/    10D7 :                     
    3699/    10D7 :                     ; use checking undefine MC ( DD CB nn XX )
    3700/    10D7 :                     dd_bit_opTbl:
    3701/    10D7 : 46                  	DB	46h	; BIT 0,(IX+12H)
    3702/    10D8 : 4E                  	DB	4Eh	; BIT 1,(IX+12H)
    3703/    10D9 : 56                  	DB	56h	; BIT 2,(IX+12H)
    3704/    10DA : 5E                  	DB	5Eh	; BIT 3,(IX+12H)
    3705/    10DB : 66                  	DB	66h	; BIT 4,(IX+12H)
    3706/    10DC : 6E                  	DB	6Eh	; BIT 5,(IX+12H)
    3707/    10DD : 76                  	DB	76h	; BIT 6,(IX+12H)
    3708/    10DE : 7E                  	DB	7Eh	; BIT 7,(IX+12H)
    3709/    10DF : 86                  	DB	86h	; RES 0,(IX+12H)
    3710/    10E0 : 8E                  	DB	8Eh	; RES 1,(IX+12H)
    3711/    10E1 : 96                  	DB	96h	; RES 2,(IX+12H)
    3712/    10E2 : 9E                  	DB	9Eh	; RES 3,(IX+12H)
    3713/    10E3 : A6                  	DB	0A6h	; RES 4,(IX+12H)
    3714/    10E4 : AE                  	DB	0AEh	; RES 5,(IX+12H)
    3715/    10E5 : B6                  	DB	0B6h	; RES 6,(IX+12H)
    3716/    10E6 : BE                  	DB	0BEh	; RES 7,(IX+12H)
    3717/    10E7 : C6                  	DB	0C6h	; SET 0,(IX+12H)
    3718/    10E8 : CE                  	DB	0CEh	; SET 1,(IX+12H)
    3719/    10E9 : D6                  	DB	0D6h	; SET 2,(IX+12H)
    3720/    10EA : DE                  	DB	0DEh	; SET 3,(IX+12H)
    3721/    10EB : E6                  	DB	0E6h	; SET 4,(IX+12H)
    3722/    10EC : EE                  	DB	0EEh	; SET 5,(IX+12H)
    3723/    10ED : F6                  	DB	0F6h	; SET 6,(IX+12H)
    3724/    10EE : FE                  	DB	0FEh	; SET 7,(IX+12H)
    3725/    10EF :                     dd_bit_opTble:
    3726/    10EF :                     
    3727/    10EF :                     ; use checking undefine MC ( ED XX ....)
    3728/    10EF :                     ed_op_tbl:
    3729/    10EF : 40                  	DB	40h	; 55:IN  B,(C)
    3730/    10F0 : 48                   	DB	48h	; 54:IN  C,(C)
    3731/    10F1 : 50                  	DB	50h	; 53:IN  D,(C)
    3732/    10F2 : 58                  	DB	58h	; 52:IN  E,(C)
    3733/    10F3 : 60                  	DB	60h	; 51:IN  H,(C)
    3734/    10F4 : 68                  	DB	68h	; 50:IN  L,(C)
    3735/    10F5 : 78                  	DB	78h	; 49:IN  A,(C)
    3736/    10F6 :                     
    3737/    10F6 : 41                  	DB	41h	; 48:OUT (C),B
    3738/    10F7 : 49                  	DB	49h	; 47:OUT (C),C
    3739/    10F8 : 51                  	DB	51h	; 46:OUT (C),D
    3740/    10F9 : 59                  	DB	59h	; 45:OUT (C),E
    3741/    10FA : 61                  	DB	61h	; 44:OUT (C),H
    3742/    10FB : 69                  	DB	69h	; 43:OUT (C),L
    3743/    10FC : 79                  	DB	79h	; 42:OUT (C),A
    3744/    10FD :                     
    3745/    10FD : 42                  	DB	42h	; 41:SBC HL,BC
    3746/    10FE : 52                  	DB	52h	; 40:SBC HL,DE
    3747/    10FF : 62                  	DB	62h	; 39:SBC HL,HL
    3748/    1100 : 72                  	DB	72h	; 38:SBC HL,SP
    3749/    1101 :                     
    3750/    1101 : 4A                  	DB	4Ah	; 37:ADC HL,BC
    3751/    1102 : 5A                  	DB	5Ah	; 36:ADC HL,DE
    3752/    1103 : 6A                  	DB	6Ah	; 35:ADC HL,HL
    3753/    1104 : 7A                  	DB	7Ah	; 34:ADC HL,SP
    3754/    1105 :                     
    3755/    1105 : 47                  	DB	47h	; 33:LD I,A
    3756/    1106 : 4F                  	DB	4Fh	; 32:LD R,A
    3757/    1107 : 57                  	DB	57h	; 31:LD A,I
    3758/    1108 : 5F                  	DB	5Fh	; 30:LD A,R
    3759/    1109 :                     
    3760/    1109 : 46                  	DB	46h	; 29:IM  0
    3761/    110A : 56                  	DB	56h	; 28:IM  1
    3762/    110B : 5E                  	DB	5Eh	; 27:IM  2
    3763/    110C :                     
    3764/    110C : 44                  	DB	44h	; 26:NEG
    3765/    110D : 45                  	DB	45h	; 25:RETN
    3766/    110E : 4D                  	DB	4Dh	; 24:RETI
    3767/    110F : 67                  	DB	67h	; 23:RRD
    3768/    1110 : 6F                  	DB	6Fh	; 22:RLD
    3769/    1111 : A0                  	DB	0A0h	; 21:LDI
    3770/    1112 : A1                  	DB	0A1h	; 20:CPI
    3771/    1113 : A2                  	DB	0A2h	; 19:INI
    3772/    1114 : A3                  	DB	0A3h	; 18:OUTI
    3773/    1115 : A8                  	DB	0A8h	; 17:LDD
    3774/    1116 : A9                  	DB	0A9h	; 16:CPD
    3775/    1117 : AA                  	DB	0AAh	; 15:IND
    3776/    1118 : AB                  	DB	0ABh	; 14:OUTD
    3777/    1119 : B0                  	DB	0B0h	; 13:LDIR
    3778/    111A : B1                  	DB	0B1h	; 12:CPIR
    3779/    111B : B2                  	DB	0B2h	; 11:INIR
    3780/    111C : B3                  	DB	0B3h	; 10:OTIR
    3781/    111D : B8                  	DB	0B8h	; 09:LDDR
    3782/    111E : B9                  	DB	0B9h	; 08:CPDR
    3783/    111F : BA                  	DB	0BAh	; 07:INDR
    3784/    1120 : BB                  	DB	0BBh	; 06:OTDR
    3785/    1121 :                     
    3786/    1121 : 43                  	DB	43h	; 05:LD (nnnn),BC
    3787/    1122 : 53                  	DB	53h	; 04:LD (nnnn),DE
    3788/    1123 : 73                  	DB	73h	; 03:LD (nnnn),SP
    3789/    1124 :                     
    3790/    1124 : 4B                  	DB	4Bh	; 02:LD BC,(nnnn)
    3791/    1125 : 5B                  	DB	5Bh	; 01:LD DE,(nnnn)
    3792/    1126 : 7B                  	DB	7Bh	; 00:LD SP,(nnnn)
    3793/    1127 :                     ed_op_tble:
    3794/    1127 :                     
    3795/    1127 : 41 46 00            RNAF:		DB	"AF",00H
    3796/    112A : 41 46 27 00         RNAFX:		DB	"AF'",00H
    3797/    112E :                     
    3798/    112E : 52 45 54 00         RETstr:		db	"RET", 00h
    3799/    1132 : 4A 50 00            JPstr:		db	"JP", 00h
    3800/    1135 : 4A 52 00            JRstr:		db	"JR", 00h
    3801/    1138 : 44 4A 4E 5A 00      DJNZstr:	db	"DJNZ", 00h
    3802/    113D : 43 41 4C 4C 00      CALLstr:	db	"CALL", 00h
    3803/    1142 : 52 53 54 00         RSTstr:		db	"RST", 00h
    3804/    1146 : 4C 44 00            LDstr:		db	"LD", 00h
    3805/    1149 : 48 41 4C 54 00      HLTstr:		db	"HALT", 00h
    3806/    114E : 41 44 44 00         ADDstr:		db	"ADD", 00h
    3807/    1152 : 41 44 43 00         ADCstr:		db	"ADC", 00h
    3808/    1156 : 53 55 42 00         SUBstr:		db	"SUB", 00h
    3809/    115A : 53 42 43 00         SBCstr:		db	"SBC", 00h
    3810/    115E : 41 4E 44 00         ANDstr:		db	"AND", 00h
    3811/    1162 : 58 4F 52 00         XORstr:		db	"XOR", 00h
    3812/    1166 : 4F 52 00            ORstr:		db	"OR", 00h
    3813/    1169 : 43 50 00            CPstr:		db	"CP", 00h
    3814/    116C : 49 4E 43 00         INCstr:		db	"INC", 00h
    3815/    1170 : 44 45 43 00         DECstr:		db	"DEC", 00h
    3816/    1174 : 50 4F 50 00         POPstr:		db	"POP", 00h
    3817/    1178 : 50 55 53 48 00      PUSHstr:	db	"PUSH",00h
    3818/    117D : 45 58 00            EXstr:		db	"EX", 00h
    3819/    1180 :                     
    3820/    1180 : 45 58 58 00         EXXstr:		db	"EXX", 00h
    3821/    1184 : 4E 4F 50 00         NOPstr:		db	"NOP", 00h
    3822/    1188 : 52 4C 43 41 00      RLCAstr:	db	"RLCA", 00h
    3823/    118D : 52 52 43 41 00      RRCAstr:	db	"RRCA", 00h
    3824/    1192 : 52 4C 41 00         RLAstr:		db	"RLA", 00h
    3825/    1196 : 52 52 41 00         RRAstr:		db	"RRA", 00h
    3826/    119A : 44 41 41 00         DAAstr:		db	"DAA", 00h
    3827/    119E : 43 50 4C 00         CPLstr:		db	"CPL", 00h
    3828/    11A2 : 53 43 46 00         SCFstr:		db	"SCF", 00h
    3829/    11A6 : 43 43 46 00         CCFstr:		db	"CCF", 00h
    3830/    11AA : 44 49 00            DIstr:		db	"DI", 00h
    3831/    11AD : 45 49 00            EIstr:		db	"EI", 00h
    3832/    11B0 :                     
    3833/    11B0 : 4F 55 54 00         OUTstr:		db	"OUT", 00h
    3834/    11B4 : 49 4E 00            INstr:		db	"IN", 00h
    3835/    11B7 :                     
    3836/    11B7 : 52 4C 43 00         RLCstr		db	"RLC", 00h
    3837/    11BB : 52 52 43 00         RRCstr		db	"RRC", 00h
    3838/    11BF : 52 4C 00            RLstr		db	"RL", 00h
    3839/    11C2 : 52 52 00            RRstr		db	"RR", 00h
    3840/    11C5 : 53 4C 41 00         SLAstr		db	"SLA", 00h
    3841/    11C9 : 53 52 41 00         SRAstr		db	"SRA", 00h
    3842/    11CD : 53 52 4C 00         SRLstr		db	"SRL", 00h
    3843/    11D1 : 42 49 54 00         BITstr		db	"BIT", 00h
    3844/    11D5 : 52 45 53 00         RESstr		db	"RES", 00h
    3845/    11D9 : 4E 45 47 00         NEGstr		db	"NEG", 00h
    3846/    11DD : 49 4D 00            IMstr		db	"IM", 00h
    3847/    11E0 : 52 52 44 00         RRDstr		db	"RRD", 00h
    3848/    11E4 : 52 4C 44 00         RLDstr		db	"RLD", 00h
    3849/    11E8 : 4C 44 49 00         LDIstr		db	"LDI", 00h
    3850/    11EC : 43 50 49 00         CPIstr		db	"CPI", 00h
    3851/    11F0 : 49 4E 49 00         INIstr		db	"INI", 00h
    3852/    11F4 : 4F 55 54 49 00      OUTIstr		db	"OUTI", 00h
    3853/    11F9 : 4C 44 44 00         LDDstr		db	"LDD", 00h
    3854/    11FD : 43 50 44 00         CPDstr		db	"CPD", 00h
    3855/    1201 : 49 4E 44 00         INDstr		db	"IND", 00h
    3856/    1205 : 4F 55 54 44 00      OUTDstr		db	"OUTD", 00h
    3857/    120A : 4C 44 49 52 00      LDIRstr		db	"LDIR", 00h
    3858/    120F : 43 50 49 52 00      CPIRstr		db	"CPIR", 00h
    3859/    1214 : 49 4E 49 52 00      INIRstr		db	"INIR", 00h
    3860/    1219 : 4F 54 49 52 00      OTIRstr		db	"OTIR", 00h
    3861/    121E : 4C 44 44 52 00      LDDRstr		db	"LDDR", 00h
    3862/    1223 : 43 50 44 52 00      CPDRstr		db	"CPDR", 00h
    3863/    1228 : 49 4E 44 52 00      INDRstr		db	"INDR", 00h
    3864/    122D : 4F 54 44 52 00      OTDRstr		db	"OTDR", 00h
    3865/    1232 : 52 45 54 49 00      RETIstr		db	"RETI", 00h
    3866/    1237 : 52 45 54 4E 00      RETNstr		db	"RETN", 00h
    3867/    123C :                     ;BITstr		db	"BIT", 00h
    3868/    123C :                     ;RESstr		db	"RES", 00h
    3869/    123C : 53 45 54 00         SETstr		db	"SET", 00h
    3870/    1240 : 3F 3F 3F 00         ER_OPMSG:	db	"???", 00h
    3871/    1244 : 28 43 29 00         KCKstr		db	"(C)", 00h
    3872/    1248 :                     
    3873/    1248 : 28 48 4C 29 00      kRNHL:	db	"(HL)", 00h
    3874/    124D : 4E 5A 00            cc0:	db	"NZ", 00h
    3875/    1250 : 5A 00               cc1:	db	"Z", 00h
    3876/    1252 : 4E 43 00            cc2:	db	"NC", 00h
    3877/    1255 : 43 00               cc3:	db	"C", 00h
    3878/    1257 : 50 4F 00            cc4:	db	"PO", 00h
    3879/    125A : 50 45 00            cc5:	db	"PE", 00h
    3880/    125D : 50 00               cc6:	db	"P", 00h
    3881/    125F : 4D 00               cc7:	db	"M", 00h
    3882/    1261 :                     
    3883/    1261 : 6B 1F 6D 1F 72 1F   disRegTbl:	dw	RNB, RNC, RND, RNE, RNH, RNL, kRNHL, RNA
             1267 : 74 1F 79 1F 7B 1F 
             126D : 48 12 66 1F       
    3884/    1271 : 5F 12 5D 12 5A 12   CC_opr:		dw	cc7, cc6, cc5, cc4, cc3, cc2, cc1, cc0
             1277 : 57 12 55 12 52 12 
             127D : 50 12 4D 12       
    3885/    1281 : 55 12 52 12 50 12   JRCC_opr1:	dw	cc3, cc2, cc1, cc0
             1287 : 4D 12             
    3886/    1289 : A9 1F 76 1F 6F 1F   INC_DEC_ADDrp:	dw	RNSP, RNHL, RNDE, RNBC
             128F : 68 1F             
    3887/    1291 : 27 11 76 1F 6F 1F   POP_PUSHrp:	dw	RNAF, RNHL, RNDE, RNBC
             1297 : 68 1F             
    3888/    1299 :                     
    3889/    1299 : AD 11 AA 11 80 11   oth_1op_tbl:	dw	EIstr, DIstr, EXXstr, RETstr, CCFstr
             129F : 2E 11 A6 11       
    3890/    12A3 : A2 11 9E 11 9A 11   		dw	SCFstr, CPLstr, DAAstr, RRAstr
             12A9 : 96 11             
    3891/    12AB : 92 11 8D 11 88 11   		dw	RLAstr, RRCAstr, RLCAstr, NOPstr
             12B1 : 84 11             
    3892/    12B3 :                     
    3893/    12B3 : B0 11 B4 11 69 11   logop2str:	dw	OUTstr, INstr, CPstr, ORstr, XORstr
             12B9 : 66 11 62 11       
    3894/    12BD : 5E 11 56 11 5A 11   		dw	ANDstr, SUBstr, SBCstr, ADCstr, ADDstr
             12C3 : 52 11 4E 11       
    3895/    12C7 :                     
    3896/    12C7 : A9 1F 76 1F 6F 1F   logop3str	dw	RNSP, RNHL, RNDE, RNBC
             12CD : 68 1F             
    3897/    12CF : A9 1F 6F 1F 68 1F   ed_rp_str	dw	RNSP, RNDE, RNBC, RNSP, RNDE, RNBC
             12D5 : A9 1F 6F 1F 68 1F 
    3898/    12DB :                     
    3899/    12DB : 74 11 78 11 70 11   dd_2opt:	dw	POPstr, PUSHstr, DECstr, INCstr
             12E1 : 6C 11             
    3900/    12E3 : A9 1F A3 1F 6F 1F   addixrp_tbl:	dw	RNSP, RNIX, RNDE, RNBC
             12E9 : 68 1F             
    3901/    12EB : A9 1F A6 1F 6F 1F   addiyrp_tbl:	dw	RNSP, RNIY, RNDE, RNBC
             12F1 : 68 1F             
    3902/    12F3 :                     
    3903/    12F3 : 70 11 6C 11 69 11   ddlogtbl:	dw	DECstr, INCstr, CPstr, ORstr, XORstr, ANDstr, SUBstr
             12F9 : 66 11 62 11 5E 11 
             12FF : 56 11             
    3904/    1301 : 66 1F 7B 1F 79 1F   dd_ldtbl:	dw	RNA, RNL, RNH, RNE, RND, RNC, RNB
             1307 : 74 1F 72 1F 6D 1F 
             130D : 6B 1F             
    3905/    130F :                     
    3906/    130F : 2D 12 28 12 23 12   ed_noopr:	dw	OTDRstr, INDRstr, CPDRstr, LDDRstr
             1315 : 1E 12             
    3907/    1317 : 19 12 14 12 0F 12   		dw	OTIRstr, INIRstr, CPIRstr, LDIRstr
             131D : 0A 12             
    3908/    131F : 05 12 01 12 FD 11   		dw	OUTDstr, INDstr, CPDstr, LDDstr
             1325 : F9 11             
    3909/    1327 : F4 11 F0 11 EC 11   		dw	OUTIstr, INIstr, CPIstr, LDIstr
             132D : E8 11             
    3910/    132F : E4 11 E0 11 32 12   		dw	RLDstr, RRDstr, RETIstr, RETNstr
             1335 : 37 12             
    3911/    1337 : D9 11               		dw	NEGstr
    3912/    1339 :                     
    3913/    1339 : CD 11 C9 11 C5 11   dd_rt_str:	dw	SRLstr, SRAstr, SLAstr, RRstr
             133F : C2 11             
    3914/    1341 : BF 11 BB 11 B7 11   		dw	RLstr, RRCstr, RLCstr
    3915/    1347 :                     	
    3916/    1347 :                     ;;;
    3917/    1347 :                     ;;; GO address
    3918/    1347 :                     ;;; 
    3919/    1347 :                     
    3920/    1347 :                     GO:
    3921/    1347 : ED 5B 42 EF         	ld	de, (REGPC)
    3922/    134B : ED 53 54 EF         	ld	(goTmp), de	; save go tmp go address
    3923/    134F : 23                  	INC	HL
    3924/    1350 : CD 02 18            	CALL	SKIPSP
    3925/    1353 : CD 12 18            	CALL	RDHEX
    3926/    1356 : 30 03               	jr	nc, gostmp
    3927/    1358 : B7                  	OR	A
    3928/    1359 : 28 0A               	JR	Z, g_stpadr
    3929/    135B :                     gostmp:
    3930/    135B : 7A                  	ld	a, d
    3931/    135C : FE F0               	cp	IO_B >> 8	; a - 0F0H
    3932/    135E : D2 FE 00            	jp	nc, ERR		; detect I/O area
    3933/    1361 : ED 53 54 EF         	LD	(goTmp),DE	; save going address
    3934/    1365 :                     g_stpadr:
    3935/    1365 : CD 02 18            	CALL	SKIPSP
    3936/    1368 : 7E                  	LD	A,(HL)
    3937/    1369 : B7                  	or	a
    3938/    136A : 28 18               	jr	z, GO1
    3939/    136C : FE 2C               	cp	','
    3940/    136E : C2 FE 00            	jp	nz, ERR
    3941/    1371 :                     
    3942/    1371 :                     ; set break point with go command
    3943/    1371 :                     
    3944/    1371 : 23                  	INC	HL
    3945/    1372 : CD 02 18            	CALL	SKIPSP
    3946/    1375 : CD 12 18            	CALL	RDHEX		; 1st arg.
    3947/    1378 : DA FE 00            	jp	c, ERR
    3948/    137B :                     
    3949/    137B : 21 6D EF            	ld	hl, tmpb_f	; hl: temp break point buffer
    3950/    137E : CD 60 02            	call	setbpadr
    3951/    1381 : DA FE 00            	jp	c, ERR		; address is incorrect
    3952/    1384 :                     
    3953/    1384 :                     GO1:
    3954/    1384 : 2A 54 EF            	LD	hl, (goTmp)
    3955/    1387 : 22 42 EF            	ld	(REGPC), hl	; set go address
    3956/    138A :                     
    3957/    138A :                     G0:
    3958/    138A :                     ; check Trace mode
    3959/    138A :                     
    3960/    138A : 3A 5D EF            	ld	a, (tpt1_f)
    3961/    138D : B7                  	or	a
    3962/    138E : 28 1A               	jr	z, donot_trace
    3963/    1390 :                     	
    3964/    1390 : 2A 5A EF            	ld	hl,(tmpT)
    3965/    1393 : 22 42 EF            	ld	(REGPC), hl	; set trace address
    3966/    1396 :                     
    3967/    1396 : 21 5D EF            	ld	hl, tpt1_f
    3968/    1399 : 11 5F EF            	ld	de, tpt1_adr
    3969/    139C : CD 02 14            	call	set_bp
    3970/    139F : 21 61 EF            	ld	hl, tpt2_f
    3971/    13A2 : 11 63 EF            	ld	de, tpt2_adr
    3972/    13A5 : CD 02 14            	call	set_bp
    3973/    13A8 : 18 1B               	jr	skp_tbp		; skip set tmp bp and bp, if tracing
    3974/    13AA :                     
    3975/    13AA :                     ; set break point
    3976/    13AA :                     donot_trace:
    3977/    13AA : 21 65 EF            	ld	hl, bpt1_f
    3978/    13AD : 11 67 EF            	ld	de, bpt1_adr
    3979/    13B0 : CD 02 14            	call	set_bp
    3980/    13B3 : 21 69 EF            	ld	hl, bpt2_f
    3981/    13B6 : 11 6B EF            	ld	de, bpt2_adr
    3982/    13B9 : CD 02 14            	call	set_bp
    3983/    13BC :                     
    3984/    13BC :                     
    3985/    13BC :                     ; check go, break pointer
    3986/    13BC :                     
    3987/    13BC : 21 6D EF            	ld	hl, tmpb_f
    3988/    13BF : 11 6F EF            	ld	de, tmpb_adr
    3989/    13C2 : CD 02 14            	call	set_bp
    3990/    13C5 :                     
    3991/    13C5 :                     	;; R register adjustment
    3992/    13C5 :                     
    3993/    13C5 :                     skp_tbp:
    3994/    13C5 : 2A 40 EF            	LD	HL,(REGSP)
    3995/    13C8 : F9                  	LD	SP,HL
    3996/    13C9 : 2A 42 EF            	LD	HL,(REGPC)
    3997/    13CC : E5                  	PUSH	HL
    3998/    13CD : DD 2A 3C EF         	LD	IX,(REGIX)
    3999/    13D1 : FD 2A 3E EF         	LD	IY,(REGIY)
    4000/    13D5 : 2A 34 EF            	LD	HL,(REGAFX)
    4001/    13D8 : E5                  	PUSH	HL
    4002/    13D9 : ED 4B 36 EF         	LD	BC,(REGBCX)
    4003/    13DD : ED 5B 38 EF         	LD	DE,(REGDEX)
    4004/    13E1 : 2A 3A EF            	LD	HL,(REGHLX)
    4005/    13E4 : D9                  	EXX
    4006/    13E5 : F1                  	POP	AF
    4007/    13E6 : 08                  	EX	AF,AF'
    4008/    13E7 : 2A 2C EF            	LD	HL,(REGAF)
    4009/    13EA : E5                  	PUSH	HL
    4010/    13EB : ED 4B 2E EF         	LD	BC,(REGBC)
    4011/    13EF : ED 5B 30 EF         	LD	DE,(REGDE)
    4012/    13F3 : 2A 32 EF            	LD	HL,(REGHL)
    4013/    13F6 : 3A 44 EF            	LD	A,(REGI)
    4014/    13F9 : ED 47               	LD	I,A
    4015/    13FB : 3A 45 EF            	LD	A,(REGR)
    4016/    13FE : ED 4F               	LD	R,A
    4017/    1400 : F1                  	POP	AF
    4018/    1401 : C9                  	RET			; POP PC
    4019/    1402 :                     
    4020/    1402 :                     set_bp:
    4021/    1402 : 7E                  	ld	a, (hl)
    4022/    1403 : B7                  	or	a
    4023/    1404 : C8                  	ret	z
    4024/    1405 :                     
    4025/    1405 : 1A                  	ld	a, (de)
    4026/    1406 : 4F                  	ld	c, a
    4027/    1407 : 13                  	inc	de
    4028/    1408 : 1A                  	ld	a, (de)
    4029/    1409 : 47                  	ld	b, a	; bc = break point address
    4030/    140A :                     
    4031/    140A : 3E FF               	ld	a, 0FFH
    4032/    140C : 02                  	ld	(bc), a	; insert RST 38H code
    4033/    140D : C9                  	ret
    4034/    140E :                     	
    4035/    140E :                     ;;;
    4036/    140E :                     ;;; SET memory
    4037/    140E :                     ;;; 
    4038/    140E :                     
    4039/    140E :                     SETM:
    4040/    140E : 23                  	INC	HL
    4041/    140F : CD 02 18            	CALL	SKIPSP
    4042/    1412 : CD 12 18            	CALL	RDHEX
    4043/    1415 :                     
    4044/    1415 : DA FE 00            	jp	c, ERR
    4045/    1418 :                     
    4046/    1418 : CD 02 18            	CALL	SKIPSP
    4047/    141B : 7E                  	LD	A,(HL)
    4048/    141C : B7                  	OR	A
    4049/    141D : C2 FE 00            	JP	NZ,ERR
    4050/    1420 : 79                  	LD	A,C
    4051/    1421 : B7                  	OR	A
    4052/    1422 : 20 04               	JR	NZ,SM0
    4053/    1424 : ED 5B 27 EF         	LD	DE,(SADDR)
    4054/    1428 :                     
    4055/    1428 :                     
    4056/    1428 :                     SM0:
    4057/    1428 : EB                  	EX	DE,HL
    4058/    1429 :                     SM1:
    4059/    1429 : CD 51 17            	CALL	HEXOUT4
    4060/    142C : E5                  	PUSH	HL
    4061/    142D : 21 84 1D            	LD	HL,DSEP1
    4062/    1430 : CD 48 17            	CALL	STROUT
    4063/    1433 : E1                  	POP	HL
    4064/    1434 : 7E                  	LD	A,(HL)
    4065/    1435 : E5                  	PUSH	HL
    4066/    1436 : CD 56 17            	CALL	HEXOUT2
    4067/    1439 : 3E 20               	LD	A,' '
    4068/    143B : CD C5 1F            	CALL	CONOUT
    4069/    143E : CD A8 17            	CALL	GETLIN
    4070/    1441 : CD 02 18            	CALL	SKIPSP
    4071/    1444 : 7E                  	LD	A,(HL)
    4072/    1445 : B7                  	OR	A
    4073/    1446 : 20 07               	JR	NZ,SM2
    4074/    1448 :                     	;; Empty  (Increment address)
    4075/    1448 : E1                  	POP	HL
    4076/    1449 : 23                  	INC	HL
    4077/    144A : 22 27 EF            	LD	(SADDR),HL
    4078/    144D : 18 DA               	JR	SM1
    4079/    144F :                     SM2:
    4080/    144F : FE 2D               	CP	'-'
    4081/    1451 : 20 07               	JR	NZ,SM3
    4082/    1453 :                     	;; '-'  (Decrement address)
    4083/    1453 : E1                  	POP	HL
    4084/    1454 : 2B                  	DEC	HL
    4085/    1455 : 22 27 EF            	LD	(SADDR),HL
    4086/    1458 : 18 CF               	JR	SM1
    4087/    145A :                     SM3:
    4088/    145A : FE 2E               	CP	'.'
    4089/    145C : 20 07               	JR	NZ,SM4
    4090/    145E : E1                  	POP	HL
    4091/    145F : 22 27 EF            	LD	(SADDR),HL
    4092/    1462 : C3 BE 00            	JP	WSTART
    4093/    1465 :                     SM4:
    4094/    1465 : CD 12 18            	CALL	RDHEX
    4095/    1468 : B7                  	OR	A
    4096/    1469 : E1                  	POP	HL
    4097/    146A : CA FE 00            	JP	Z,ERR
    4098/    146D : 73                  	LD	(HL),E
    4099/    146E : 23                  	INC	HL
    4100/    146F : 22 27 EF            	LD	(SADDR),HL	; set value
    4101/    1472 :                     
    4102/    1472 :                     	; resave opcode for BP command
    4103/    1472 : ED 5B 67 EF         	ld	de, (bpt1_adr)
    4104/    1476 : 1A                  	ld	a, (de)
    4105/    1477 : 32 66 EF            	ld	(bpt1_op), a
    4106/    147A : ED 5B 6B EF         	ld	de, (bpt2_adr)
    4107/    147E : 1A                  	ld	a, (de)
    4108/    147F : 32 6A EF            	ld	(bpt2_op), a
    4109/    1482 :                     
    4110/    1482 : 18 A5               	JR	SM1
    4111/    1484 :                     
    4112/    1484 :                     ;;;
    4113/    1484 :                     ;;; LOAD HEX file
    4114/    1484 :                     ;;;
    4115/    1484 :                     
    4116/    1484 :                     LOADH:
    4117/    1484 :                     	; clear brk point
    4118/    1484 : AF                  	xor	a
    4119/    1485 : 32 65 EF            	ld	(bpt1_f), a
    4120/    1488 : 32 69 EF            	ld	(bpt2_f), a
    4121/    148B :                     	
    4122/    148B : 23                  	INC	HL
    4123/    148C : CD 02 18            	CALL	SKIPSP
    4124/    148F : CD 12 18            	CALL	RDHEX
    4125/    1492 : CD 02 18            	CALL	SKIPSP
    4126/    1495 : 7E                  	LD	A,(HL)
    4127/    1496 : B7                  	OR	A
    4128/    1497 : C2 FE 00            	JP	NZ,ERR
    4129/    149A :                     
    4130/    149A : 79                  	LD	A,C
    4131/    149B : B7                  	OR	A
    4132/    149C : 20 03               	JR	NZ,LH0
    4133/    149E :                     
    4134/    149E : 11 00 00            	LD	DE,0		;Offset
    4135/    14A1 :                     LH0:
    4136/    14A1 : CD B4 1F            	CALL	CONIN
    4137/    14A4 :                     ;	CALL	UPPER
    4138/    14A4 : FE 53               	CP	'S'
    4139/    14A6 : 28 61               	JR	Z,LHS0
    4140/    14A8 :                     LH1:
    4141/    14A8 : FE 3A               	CP	':'
    4142/    14AA : 28 0D               	JR	Z,LHI0
    4143/    14AC :                     LH2:
    4144/    14AC :                     	;; Skip to EOL
    4145/    14AC : FE 0D               	CP	CR
    4146/    14AE : 28 F1               	JR	Z,LH0
    4147/    14B0 : FE 0A               	CP	LF
    4148/    14B2 : 28 ED               	JR	Z,LH0
    4149/    14B4 :                     LH3:
    4150/    14B4 : CD B4 1F            	CALL	CONIN
    4151/    14B7 : 18 F3               	JR	LH2
    4152/    14B9 :                     
    4153/    14B9 :                     LHI0:
    4154/    14B9 : 3E 2E               	ld	a, '.'
    4155/    14BB : CD C5 1F            	call	CONOUT
    4156/    14BE :                     
    4157/    14BE : CD 6D 17            	CALL	HEXIN
    4158/    14C1 : 4F                  	LD	C,A		; Checksum
    4159/    14C2 : 47                  	LD	B,A		; Length
    4160/    14C3 :                     
    4161/    14C3 : CD 6D 17            	CALL	HEXIN
    4162/    14C6 : 67                  	LD	H,A		; Address H
    4163/    14C7 : 81                  	ADD	A,C
    4164/    14C8 : 4F                  	LD	C,A
    4165/    14C9 :                     
    4166/    14C9 : CD 6D 17            	CALL	HEXIN
    4167/    14CC : 6F                  	LD	L,A		; Address L
    4168/    14CD : 81                  	ADD	A,C
    4169/    14CE : 4F                  	LD	C,A
    4170/    14CF :                     
    4171/    14CF :                     	;; Add offset
    4172/    14CF : 19                  	ADD	HL,DE
    4173/    14D0 :                     
    4174/    14D0 : CD 6D 17            	CALL	HEXIN
    4175/    14D3 : 32 2A EF            	LD	(RECTYP),A
    4176/    14D6 : 81                  	ADD	A,C
    4177/    14D7 : 4F                  	LD	C,A		; Checksum
    4178/    14D8 :                     
    4179/    14D8 : 78                  	LD	A,B
    4180/    14D9 : B7                  	OR	A
    4181/    14DA : 28 14               	JR	Z,LHI3
    4182/    14DC :                     LHI1:
    4183/    14DC : CD 6D 17            	CALL	HEXIN
    4184/    14DF : F5                  	PUSH	AF
    4185/    14E0 : 81                  	ADD	A,C
    4186/    14E1 : 4F                  	LD	C,A		; Checksum
    4187/    14E2 :                     
    4188/    14E2 : 3A 2A EF            	LD	A,(RECTYP)
    4189/    14E5 : B7                  	OR	A
    4190/    14E6 : 20 05               	JR	NZ,LHI20
    4191/    14E8 :                     
    4192/    14E8 : F1                  	POP	AF
    4193/    14E9 : 77                  	LD	(HL),A
    4194/    14EA : 23                  	INC	HL
    4195/    14EB : 18 01               	JR	LHI2
    4196/    14ED :                     LHI20:
    4197/    14ED : F1                  	POP	AF
    4198/    14EE :                     LHI2:
    4199/    14EE : 10 EC               	DJNZ	LHI1
    4200/    14F0 :                     LHI3:
    4201/    14F0 : CD 6D 17            	CALL	HEXIN
    4202/    14F3 : 81                  	ADD	A,C
    4203/    14F4 : 20 0A               	JR	NZ,LHIE		; Checksum error
    4204/    14F6 : 3A 2A EF            	LD	A,(RECTYP)
    4205/    14F9 : B7                  	OR	A
    4206/    14FA : CA B4 14            	JP	Z,LH3
    4207/    14FD : C3 BE 00            	JP	WSTART
    4208/    1500 :                     LHIE:
    4209/    1500 : 21 5F 1D            	LD	HL,IHEMSG
    4210/    1503 : CD 48 17            	CALL	STROUT
    4211/    1506 : C3 BE 00            	JP	WSTART
    4212/    1509 :                     	
    4213/    1509 :                     LHS0:
    4214/    1509 : CD B4 1F            	CALL	CONIN
    4215/    150C : 32 2A EF            	LD	(RECTYP),A
    4216/    150F :                     
    4217/    150F : CD 6D 17            	CALL	HEXIN
    4218/    1512 : 47                  	LD	B,A		; Length+3
    4219/    1513 : 4F                  	LD	C,A		; Checksum
    4220/    1514 :                     
    4221/    1514 : CD 6D 17            	CALL	HEXIN
    4222/    1517 : 67                  	LD	H,A
    4223/    1518 : 81                  	ADD	A,C
    4224/    1519 : 4F                  	LD	C,A
    4225/    151A :                     	
    4226/    151A : CD 6D 17            	CALL	HEXIN
    4227/    151D : 6F                  	LD	L,A
    4228/    151E : 81                  	ADD	A,C
    4229/    151F : 4F                  	LD	C,A
    4230/    1520 :                     
    4231/    1520 : 19                  	ADD	HL,DE
    4232/    1521 :                     
    4233/    1521 : 05                  	DEC	B
    4234/    1522 : 05                  	DEC	B
    4235/    1523 : 05                  	DEC	B
    4236/    1524 : 28 15               	JR	Z,LHS3
    4237/    1526 :                     LHS1:
    4238/    1526 : CD 6D 17            	CALL	HEXIN
    4239/    1529 : F5                  	PUSH	AF
    4240/    152A : 81                  	ADD	A,C
    4241/    152B : 4F                  	LD	C,A		; Checksum
    4242/    152C :                     
    4243/    152C : 3A 2A EF            	LD	A,(RECTYP)
    4244/    152F : FE 31               	CP	'1'
    4245/    1531 : 20 05               	JR	NZ,LHS2
    4246/    1533 :                     
    4247/    1533 : F1                  	POP	AF
    4248/    1534 : 77                  	LD	(HL),A
    4249/    1535 : 23                  	INC	HL
    4250/    1536 : 18 01               	JR	LHS20
    4251/    1538 :                     LHS2:
    4252/    1538 : F1                  	POP	AF
    4253/    1539 :                     LHS20:
    4254/    1539 : 10 EB               	DJNZ	LHS1
    4255/    153B :                     LHS3:
    4256/    153B : CD 6D 17            	CALL	HEXIN
    4257/    153E : 81                  	ADD	A,C
    4258/    153F : FE FF               	CP	0FFH
    4259/    1541 : 20 12               	JR	NZ,LHSE
    4260/    1543 :                     
    4261/    1543 : 3A 2A EF            	LD	A,(RECTYP)
    4262/    1546 : FE 37               	CP	'7'
    4263/    1548 : 28 11               	JR	Z,LHSR
    4264/    154A : FE 38               	CP	'8'
    4265/    154C : 28 0D               	JR	Z,LHSR
    4266/    154E : FE 39               	CP	'9'
    4267/    1550 : 28 09               	JR	Z,LHSR
    4268/    1552 : C3 B4 14            	JP	LH3
    4269/    1555 :                     LHSE:
    4270/    1555 : 21 6C 1D            	LD	HL,SHEMSG
    4271/    1558 : CD 48 17            	CALL	STROUT
    4272/    155B :                     LHSR:
    4273/    155B : C3 BE 00            	JP	WSTART
    4274/    155E :                     	
    4275/    155E :                     ;;;
    4276/    155E :                     ;;; SAVE HEX file
    4277/    155E :                     ;;;
    4278/    155E :                     
    4279/    155E :                     SAVEH:
    4280/    155E : 23                  	INC	HL
    4281/    155F : 7E                  	LD	A,(HL)
    4282/    1560 :                     ;	CALL	UPPER
    4283/    1560 : FE 49               	CP	'I'
    4284/    1562 : 28 04               	JR	Z,SH0
    4285/    1564 : FE 53               	CP	'S'
    4286/    1566 : 20 04               	JR	NZ,SH1
    4287/    1568 :                     SH0:
    4288/    1568 : 23                  	INC	HL
    4289/    1569 : 32 29 EF            	LD	(HEXMOD),A
    4290/    156C :                     SH1:
    4291/    156C : CD 02 18            	CALL	SKIPSP
    4292/    156F : CD 12 18            	CALL	RDHEX
    4293/    1572 : B7                  	OR	A
    4294/    1573 : 28 1C               	JR	Z,SHE
    4295/    1575 : D5                  	PUSH	DE
    4296/    1576 : DD E1               	POP	IX		; IX = Start address
    4297/    1578 : CD 02 18            	CALL	SKIPSP
    4298/    157B : 7E                  	LD	A,(HL)
    4299/    157C : FE 2C               	CP	','
    4300/    157E : 20 11               	JR	NZ,SHE
    4301/    1580 : 23                  	INC	HL
    4302/    1581 : CD 02 18            	CALL	SKIPSP
    4303/    1584 : CD 12 18            	CALL	RDHEX		; DE = End address
    4304/    1587 : B7                  	OR	A
    4305/    1588 : 28 07               	JR	Z,SHE
    4306/    158A : CD 02 18            	CALL	SKIPSP
    4307/    158D : 7E                  	LD	A,(HL)
    4308/    158E : B7                  	OR	A
    4309/    158F : 28 03               	JR	Z,SH2
    4310/    1591 :                     SHE:
    4311/    1591 : C3 FE 00            	JP	ERR
    4312/    1594 :                     
    4313/    1594 :                     SH2:
    4314/    1594 : DD E5               	PUSH	IX
    4315/    1596 : E1                  	POP	HL
    4316/    1597 : EB                  	EX	DE,HL
    4317/    1598 : 23                  	INC	HL
    4318/    1599 : B7                  	OR	A
    4319/    159A : ED 52               	SBC	HL,DE		; HL = Length
    4320/    159C :                     SH3:
    4321/    159C : CD BC 15            	CALL	SHL00
    4322/    159F : 7C                  	LD	A,H
    4323/    15A0 : B5                  	OR	L
    4324/    15A1 : 20 F9               	JR	NZ,SH3
    4325/    15A3 :                     
    4326/    15A3 : 3A 29 EF            	LD	A,(HEXMOD)
    4327/    15A6 : FE 49               	CP	'I'
    4328/    15A8 : 20 09               	JR	NZ,SH4
    4329/    15AA :                     	;; End record for Intel HEX
    4330/    15AA : 21 88 1D            	LD	HL,IHEXER
    4331/    15AD : CD 48 17            	CALL	STROUT
    4332/    15B0 : C3 BE 00            	JP	WSTART
    4333/    15B3 :                     SH4:
    4334/    15B3 :                     	;; End record for Motorola S record
    4335/    15B3 : 21 96 1D            	LD	HL,SRECER
    4336/    15B6 : CD 48 17            	CALL	STROUT
    4337/    15B9 : C3 BE 00            	JP	WSTART
    4338/    15BC :                     
    4339/    15BC :                     SHL00:
    4340/    15BC : 0E 10               	LD	C,16
    4341/    15BE : 7C                  	LD	A,H
    4342/    15BF : B7                  	OR	A
    4343/    15C0 : 20 05               	JR	NZ,SHL0
    4344/    15C2 : 7D                  	LD	A,L
    4345/    15C3 : B9                  	CP	C
    4346/    15C4 : 30 01               	JR	NC,SHL0
    4347/    15C6 : 4F                  	LD	C,A
    4348/    15C7 :                     SHL0:
    4349/    15C7 : 06 00               	LD	B,0
    4350/    15C9 : B7                  	OR	A
    4351/    15CA : ED 42               	SBC	HL,BC
    4352/    15CC : 41                  	LD	B,C
    4353/    15CD :                     
    4354/    15CD : 3A 29 EF            	LD	A,(HEXMOD)
    4355/    15D0 : FE 49               	CP	'I'
    4356/    15D2 : 20 30               	JR	NZ,SHLS
    4357/    15D4 :                     
    4358/    15D4 :                     	;; Intel HEX
    4359/    15D4 : 3E 3A               	LD	A,':'
    4360/    15D6 : CD C5 1F            	CALL	CONOUT
    4361/    15D9 :                     
    4362/    15D9 : 78                  	LD	A,B
    4363/    15DA : CD 56 17            	CALL	HEXOUT2		; Length
    4364/    15DD : 48                  	LD	C,B		; Checksum
    4365/    15DE :                     
    4366/    15DE : 7A                  	LD	A,D
    4367/    15DF : CD 56 17            	CALL	HEXOUT2
    4368/    15E2 : 7A                  	LD	A,D
    4369/    15E3 : 81                  	ADD	A,C
    4370/    15E4 : 4F                  	LD	C,A
    4371/    15E5 :                     	
    4372/    15E5 : 7B                  	LD	A,E
    4373/    15E6 : CD 56 17            	CALL	HEXOUT2
    4374/    15E9 : 7B                  	LD	A,E
    4375/    15EA : 81                  	ADD	A,C
    4376/    15EB : 4F                  	LD	C,A
    4377/    15EC :                     	
    4378/    15EC : AF                  	XOR	A
    4379/    15ED : CD 56 17            	CALL	HEXOUT2
    4380/    15F0 :                     SHLI0:
    4381/    15F0 : 1A                  	LD	A,(DE)
    4382/    15F1 : F5                  	PUSH	AF
    4383/    15F2 : CD 56 17            	CALL	HEXOUT2
    4384/    15F5 : F1                  	POP	AF
    4385/    15F6 : 81                  	ADD	A,C
    4386/    15F7 : 4F                  	LD	C,A
    4387/    15F8 :                     
    4388/    15F8 : 13                  	INC	DE
    4389/    15F9 : 10 F5               	DJNZ	SHLI0
    4390/    15FB :                     
    4391/    15FB : 79                  	LD	A,C
    4392/    15FC : ED 44               	NEG
    4393/    15FE : CD 56 17            	CALL	HEXOUT2
    4394/    1601 : C3 91 17            	JP	CRLF
    4395/    1604 :                     
    4396/    1604 :                     SHLS:
    4397/    1604 :                     	;; Motorola S record
    4398/    1604 : 3E 53               	LD	A,'S'
    4399/    1606 : CD C5 1F            	CALL	CONOUT
    4400/    1609 : 3E 31               	LD	A,'1'
    4401/    160B : CD C5 1F            	CALL	CONOUT
    4402/    160E :                     
    4403/    160E : 78                  	LD	A,B
    4404/    160F : C6 03               	ADD	A,2+1		; DataLength + 2(Addr) + 1(Sum)
    4405/    1611 : 4F                  	LD	C,A
    4406/    1612 : CD 56 17            	CALL	HEXOUT2
    4407/    1615 :                     
    4408/    1615 : 7A                  	LD	A,D
    4409/    1616 : CD 56 17            	CALL	HEXOUT2
    4410/    1619 : 7A                  	LD	A,D
    4411/    161A : 81                  	ADD	A,C
    4412/    161B : 4F                  	LD	C,A
    4413/    161C :                     	
    4414/    161C : 7B                  	LD	A,E
    4415/    161D : CD 56 17            	CALL	HEXOUT2
    4416/    1620 : 7B                  	LD	A,E
    4417/    1621 : 81                  	ADD	A,C
    4418/    1622 : 4F                  	LD	C,A
    4419/    1623 :                     SHLS0:
    4420/    1623 : 1A                  	LD	A,(DE)
    4421/    1624 : F5                  	PUSH	AF
    4422/    1625 : CD 56 17            	CALL	HEXOUT2		; Data
    4423/    1628 : F1                  	POP	AF
    4424/    1629 : 81                  	ADD	A,C
    4425/    162A : 4F                  	LD	C,A
    4426/    162B :                     
    4427/    162B : 13                  	INC	DE
    4428/    162C : 10 F5               	DJNZ	SHLS0
    4429/    162E :                     
    4430/    162E : 79                  	LD	A,C
    4431/    162F : 2F                  	CPL
    4432/    1630 : CD 56 17            	CALL	HEXOUT2
    4433/    1633 : C3 91 17            	JP	CRLF
    4434/    1636 :                     
    4435/    1636 :                     ;;;
    4436/    1636 :                     ;;; Register
    4437/    1636 :                     ;;;
    4438/    1636 :                     
    4439/    1636 :                     REG:
    4440/    1636 : 23                  	INC	HL
    4441/    1637 : CD 02 18            	CALL	SKIPSP
    4442/    163A :                     ;	CALL	UPPER
    4443/    163A : B7                  	OR	A
    4444/    163B : 20 06               	JR	NZ,RG0
    4445/    163D : CD BC 16            	CALL	RDUMP
    4446/    1640 : C3 BE 00            	JP	WSTART
    4447/    1643 :                     RG0:
    4448/    1643 : EB                  	EX	DE,HL
    4449/    1644 : 21 4C 1E            	LD	HL,RNTAB
    4450/    1647 :                     RG1:
    4451/    1647 : BE                  	CP	(HL)
    4452/    1648 : 28 0D               	JR	Z,RG2		; Character match
    4453/    164A : 4F                  	LD	C,A
    4454/    164B : 23                  	INC	HL
    4455/    164C : 7E                  	LD	A,(HL)
    4456/    164D : B7                  	OR	A
    4457/    164E : 28 69               	JR	Z,RGE		; Found end mark
    4458/    1650 : 79                  	LD	A,C
    4459/    1651 : 01 05 00            	LD	BC,5
    4460/    1654 : 09                  	ADD	HL,BC		; Next entry
    4461/    1655 : 18 F0               	JR	RG1
    4462/    1657 :                     RG2:
    4463/    1657 : 23                  	INC	HL
    4464/    1658 : 7E                  	LD	A,(HL)
    4465/    1659 : FE 0F               	CP	0FH		; Link code
    4466/    165B : 20 09               	JR	NZ,RG3
    4467/    165D :                     	;; Next table
    4468/    165D : 23                  	INC	HL
    4469/    165E : 4E                  	LD	C,(HL)
    4470/    165F : 23                  	INC	HL
    4471/    1660 : 66                  	LD	H,(HL)
    4472/    1661 : 69                  	LD	L,C
    4473/    1662 : 13                  	INC	DE
    4474/    1663 : 1A                  	LD	A,(DE)
    4475/    1664 :                     ;	CALL	UPPER
    4476/    1664 : 18 E1               	JR	RG1
    4477/    1666 :                     RG3:
    4478/    1666 : B7                  	OR	A
    4479/    1667 : 28 50               	JR	Z,RGE		; Found end mark
    4480/    1669 :                     
    4481/    1669 : 4E                  	LD	C,(HL)		; LD C,A???
    4482/    166A : 23                  	INC	HL
    4483/    166B : 5E                  	LD	E,(HL)
    4484/    166C : 23                  	INC	HL
    4485/    166D : 56                  	LD	D,(HL)
    4486/    166E : D5                  	PUSH	DE		; Reg storage address
    4487/    166F : 23                  	INC	HL
    4488/    1670 : 7E                  	LD	A,(HL)
    4489/    1671 : 23                  	INC	HL
    4490/    1672 : 66                  	LD	H,(HL)
    4491/    1673 : 6F                  	LD	L,A		; HL: Reg name
    4492/    1674 : CD 48 17            	CALL	STROUT
    4493/    1677 : 3E 3D               	LD	A,'='
    4494/    1679 : CD C5 1F            	CALL	CONOUT
    4495/    167C :                     
    4496/    167C : 79                  	LD	A,C
    4497/    167D : E6 07               	AND	07H
    4498/    167F : FE 01               	CP	1
    4499/    1681 : 20 08               	JR	NZ,RG4
    4500/    1683 :                     	;; 8 bit register
    4501/    1683 : E1                  	POP	HL
    4502/    1684 : 7E                  	LD	A,(HL)
    4503/    1685 : E5                  	PUSH	HL
    4504/    1686 : CD 56 17            	CALL	HEXOUT2
    4505/    1689 : 18 0C               	JR	RG5
    4506/    168B :                     RG4:
    4507/    168B :                     	;; 16 bit register
    4508/    168B : E1                  	POP	HL
    4509/    168C : E5                  	PUSH	HL
    4510/    168D : 23                  	INC	HL
    4511/    168E : 7E                  	LD	A,(HL)
    4512/    168F : CD 56 17            	CALL	HEXOUT2
    4513/    1692 : 2B                  	DEC	HL
    4514/    1693 : 7E                  	LD	A,(HL)
    4515/    1694 : CD 56 17            	CALL	HEXOUT2
    4516/    1697 :                     RG5:
    4517/    1697 : 3E 20               	LD	A,' '
    4518/    1699 : CD C5 1F            	CALL	CONOUT
    4519/    169C : C5                  	PUSH	BC		; C: reg size
    4520/    169D : CD A8 17            	CALL	GETLIN
    4521/    16A0 : CD 02 18            	CALL	SKIPSP
    4522/    16A3 : CD 12 18            	CALL	RDHEX
    4523/    16A6 : B7                  	OR	A
    4524/    16A7 : 28 0D               	JR	Z,RGR
    4525/    16A9 : C1                  	POP	BC
    4526/    16AA : E1                  	POP	HL
    4527/    16AB : 79                  	LD	A,C
    4528/    16AC : FE 01               	CP	1
    4529/    16AE : 20 03               	JR	NZ,RG6
    4530/    16B0 :                     	;; 8 bit register
    4531/    16B0 : 73                  	LD	(HL),E
    4532/    16B1 : 18 03               	JR	RG7
    4533/    16B3 :                     RG6:
    4534/    16B3 :                     	;; 16 bit register
    4535/    16B3 : 73                  	LD	(HL),E
    4536/    16B4 : 23                  	INC	HL
    4537/    16B5 : 72                  	LD	(HL),D
    4538/    16B6 :                     RG7:
    4539/    16B6 :                     RGR:
    4540/    16B6 : C3 BE 00            	JP	WSTART
    4541/    16B9 :                     RGE:
    4542/    16B9 : C3 FE 00            	JP	ERR
    4543/    16BC :                     
    4544/    16BC :                     RDUMP:
    4545/    16BC : 21 A3 1D            	LD	HL,RDTAB
    4546/    16BF :                     RD0:
    4547/    16BF : 5E                  	LD	E,(HL)
    4548/    16C0 : 23                  	INC	HL
    4549/    16C1 : 56                  	LD	D,(HL)
    4550/    16C2 : 23                  	INC	HL
    4551/    16C3 : 7A                  	LD	A,D
    4552/    16C4 : B3                  	OR	E
    4553/    16C5 : CA 91 17            	JP	Z,CRLF		; End
    4554/    16C8 : D5                  	push	de
    4555/    16C9 : EB                  	EX	DE,HL
    4556/    16CA : CD 48 17            	CALL	STROUT	; print name of register
    4557/    16CD : EB                  	EX	DE,HL
    4558/    16CE : D1                  	pop	de
    4559/    16CF :                     
    4560/    16CF :                     ; flag check
    4561/    16CF : 3E 1E               	ld	a, RDSF_H
    4562/    16D1 : BA                  	cp	d
    4563/    16D2 : 20 07               	jr	nz, rd101
    4564/    16D4 : 3E 0E               	ld	a, RDSF_L
    4565/    16D6 : BB                  	cp	e
    4566/    16D7 : 20 02               	jr	nz, rd101
    4567/    16D9 : 18 29               	jr	rd20
    4568/    16DB :                     
    4569/    16DB :                     rd101:
    4570/    16DB : 3E 1E               	ld	a, RDSFX_H
    4571/    16DD : BA                  	cp	d
    4572/    16DE : 20 05               	jr	nz, rd10
    4573/    16E0 : 3E 35               	ld	a, RDSFX_L
    4574/    16E2 : BB                  	cp	e
    4575/    16E3 : 28 1F               	jr	z, rd20
    4576/    16E5 :                     
    4577/    16E5 :                     rd10:
    4578/    16E5 : 5E                  	LD	E,(HL)
    4579/    16E6 : 23                  	INC	HL
    4580/    16E7 : 56                  	LD	D,(HL)
    4581/    16E8 : 23                  	INC	HL
    4582/    16E9 : 7E                  	LD	A,(HL)
    4583/    16EA : 23                  	INC	HL
    4584/    16EB : EB                  	EX	DE,HL
    4585/    16EC : FE 01               	CP	1
    4586/    16EE : 20 07               	JR	NZ,RD1
    4587/    16F0 :                     	;; 1 byte
    4588/    16F0 : 7E                  	LD	A,(HL)
    4589/    16F1 : CD 56 17            	CALL	HEXOUT2
    4590/    16F4 : EB                  	EX	DE,HL
    4591/    16F5 : 18 C8               	JR	RD0
    4592/    16F7 :                     RD1:
    4593/    16F7 :                     	;; 2 byte
    4594/    16F7 : 23                  	INC	HL
    4595/    16F8 : 7E                  	LD	A,(HL)
    4596/    16F9 : CD 56 17            	CALL	HEXOUT2		; High byte
    4597/    16FC : 2B                  	DEC	HL
    4598/    16FD : 7E                  	LD	A,(HL)
    4599/    16FE : CD 56 17            	CALL	HEXOUT2		; Low byte
    4600/    1701 : EB                  	EX	DE,HL
    4601/    1702 : 18 BB               	JR	RD0
    4602/    1704 :                     
    4603/    1704 :                     ; make flag image string
    4604/    1704 :                     rd20:
    4605/    1704 : 5E                  	LD	E,(HL)
    4606/    1705 : 23                  	INC	HL
    4607/    1706 : 56                  	LD	D,(HL)
    4608/    1707 : 23                  	INC	HL
    4609/    1708 : 1A                  	ld	a, (de)		; get flag values
    4610/    1709 :                     
    4611/    1709 : D5                  	push	de
    4612/    170A : E5                  	push	hl
    4613/    170B :                     
    4614/    170B :                     ; make flag image
    4615/    170B :                     
    4616/    170B : 21 71 EF            	ld	hl, F_bit
    4617/    170E : 01 38 17            	ld	bc, F_bit_on
    4618/    1711 : 11 40 17            	ld	de, F_bit_off
    4619/    1714 : F5                  	push	af		; adjustment SP. DO NOT DELETE THIS LINE!
    4620/    1715 :                     
    4621/    1715 :                     flg_loop:
    4622/    1715 : F1                  	pop	af		; "push af" before loop back
    4623/    1716 : CB 27               	sla	a
    4624/    1718 : 30 06               	jr	nc, flg_off
    4625/    171A : F5                  	push	af
    4626/    171B : 0A                  	ld	a, (bc)
    4627/    171C : 77                  	ld	(hl), a
    4628/    171D : F1                  	pop	af
    4629/    171E : 18 04               	jr	flg_nxt
    4630/    1720 :                     flg_off:
    4631/    1720 : F5                  	push	af
    4632/    1721 : 1A                  	ld	a, (de)
    4633/    1722 : 77                  	ld	(hl), a
    4634/    1723 : F1                  	pop	af
    4635/    1724 :                     
    4636/    1724 :                     flg_nxt:
    4637/    1724 : 03                  	inc	bc
    4638/    1725 : 13                  	inc	de
    4639/    1726 : 23                  	inc	hl
    4640/    1727 :                     
    4641/    1727 : F5                  	push	af
    4642/    1728 : 7E                  	ld	a, (hl)
    4643/    1729 : B7                  	or	a		;check delimiter
    4644/    172A : 20 E9               	jr	nz, flg_loop
    4645/    172C :                     
    4646/    172C : F1                  	pop	af		; restore stack position
    4647/    172D : 21 71 EF            	ld	hl, F_bit
    4648/    1730 : CD 48 17            	call	STROUT		; print flag register for bit imaze
    4649/    1733 :                     
    4650/    1733 : E1                  	pop	hl
    4651/    1734 : D1                  	pop	de
    4652/    1735 :                     
    4653/    1735 : 23                  	inc	hl
    4654/    1736 : 18 87               	JR	RD0
    4655/    1738 :                     
    4656/    1738 : 53 5A 2E 48 2E 50   F_bit_on:	db	"SZ.H.PNC"
             173E : 4E 43             
    4657/    1740 : 2E 2E 2E 2E 2E 2E   F_bit_off:	db	"........"
             1746 : 2E 2E             
    4658/    1748 :                     
    4659/    1748 :                     
    4660/    1748 :                     ;;;
    4661/    1748 :                     ;;; Other support routines
    4662/    1748 :                     ;;;
    4663/    1748 :                     
    4664/    1748 :                     STROUT:
    4665/    1748 : 7E                  	LD	A,(HL)
    4666/    1749 : A7                  	AND	A
    4667/    174A : C8                  	RET	Z
    4668/    174B : CD C5 1F            	CALL	CONOUT
    4669/    174E : 23                  	INC	HL
    4670/    174F : 18 F7               	JR	STROUT
    4671/    1751 :                     
    4672/    1751 :                     ; input:  HL
    4673/    1751 :                     ; output: 4 hex_char output console
    4674/    1751 :                     
    4675/    1751 :                     HEXOUT4:
    4676/    1751 : 7C                  	LD	A,H
    4677/    1752 : CD 56 17            	CALL	HEXOUT2
    4678/    1755 : 7D                  	LD	A,L
    4679/    1756 :                     
    4680/    1756 :                     ; input:  A
    4681/    1756 :                     ; output: 2 hex_char output console
    4682/    1756 :                     HEXOUT2:
    4683/    1756 : F5                  	PUSH	AF
    4684/    1757 : 1F                  	RRA
    4685/    1758 : 1F                  	RRA
    4686/    1759 : 1F                  	RRA
    4687/    175A : 1F                  	RRA
    4688/    175B : CD 5F 17            	CALL	HEXOUT1
    4689/    175E : F1                  	POP	AF
    4690/    175F :                     
    4691/    175F :                     ; input:  A
    4692/    175F :                     ; output: 1 hex_char output console
    4693/    175F :                     HEXOUT1:
    4694/    175F : E6 0F               	AND	0FH
    4695/    1761 : C6 30               	ADD	A,'0'
    4696/    1763 : FE 3A               	CP	'9'+1
    4697/    1765 : DA C5 1F            	JP	C,CONOUT
    4698/    1768 : C6 07               	ADD	A,'A'-'9'-1
    4699/    176A : C3 C5 1F            	JP	CONOUT
    4700/    176D :                     
    4701/    176D :                     HEXIN:
    4702/    176D : AF                  	XOR	A
    4703/    176E : CD 75 17            	CALL	HI0
    4704/    1771 : 07                  	RLCA
    4705/    1772 : 07                  	RLCA
    4706/    1773 : 07                  	RLCA
    4707/    1774 : 07                  	RLCA
    4708/    1775 :                     HI0:
    4709/    1775 : C5                  	PUSH	BC
    4710/    1776 : 4F                  	LD	C,A
    4711/    1777 : CD B4 1F            	CALL	CONIN
    4712/    177A :                     ;	CALL	UPPER
    4713/    177A : FE 30               	CP	'0'
    4714/    177C : 38 11               	JR	C,HIR
    4715/    177E : FE 3A               	CP	'9'+1
    4716/    1780 : 38 0A               	JR	C,HI1
    4717/    1782 : FE 41               	CP	'A'
    4718/    1784 : 38 09               	JR	C,HIR
    4719/    1786 : FE 47               	CP	'F'+1
    4720/    1788 : 30 05               	JR	NC,HIR
    4721/    178A : D6 07               	SUB	'A'-'9'-1
    4722/    178C :                     HI1:
    4723/    178C : D6 30               	SUB	'0'
    4724/    178E : B1                  	OR	C
    4725/    178F :                     HIR:
    4726/    178F : C1                  	POP	BC
    4727/    1790 : C9                  	RET
    4728/    1791 :                     	
    4729/    1791 :                     CRLF:
    4730/    1791 : 3E 0D               	LD	A,CR
    4731/    1793 : CD C5 1F            	CALL	CONOUT
    4732/    1796 : 3E 0A               	LD	A,LF
    4733/    1798 : C3 C5 1F            	JP	CONOUT
    4734/    179B :                     
    4735/    179B :                     CLR_CRT:
    4736/    179B : E5                  	PUSH	HL
    4737/    179C : 21 A4 17            	LD	HL, ESC_CRT_CLR
    4738/    179F : CD 48 17            	CALL	STROUT
    4739/    17A2 : E1                  	POP	HL
    4740/    17A3 : C9                  	RET
    4741/    17A4 :                     	
    4742/    17A4 :                     ESC_CRT_CLR:
    4743/    17A4 : 1B                  	db	01BH
    4744/    17A5 : 5B 32               	db	"[2"
    4745/    17A7 : 00                  	db	0
    4746/    17A8 :                     
    4747/    17A8 :                     GETLIN:
    4748/    17A8 : 21 00 EF            	LD	HL,INBUF
    4749/    17AB :                     
    4750/    17AB :                     GL0:	; input hl
    4751/    17AB :                     
    4752/    17AB : C5                  	PUSH	BC
    4753/    17AC : E5                  	push	hl
    4754/    17AD : 06 00               	LD	B,0
    4755/    17AF :                     
    4756/    17AF :                     GL00:
    4757/    17AF : CD B4 1F            	CALL	CONIN
    4758/    17B2 : FE 0D               	CP	CR
    4759/    17B4 : 28 44               	JR	Z,GLE
    4760/    17B6 : FE 0A               	CP	LF
    4761/    17B8 : 28 40               	JR	Z,GLE
    4762/    17BA : FE 08               	CP	BS
    4763/    17BC : 28 25               	JR	Z,GLB
    4764/    17BE : FE 7F               	CP	DEL
    4765/    17C0 : 28 21               	JR	Z,GLB
    4766/    17C2 : FE 20               	CP	' '
    4767/    17C4 : 38 E9               	JR	C,GL00
    4768/    17C6 : FE 80               	CP	80H
    4769/    17C8 : 30 E5               	JR	NC,GL00
    4770/    17CA : 4F                  	LD	C,A
    4771/    17CB : 78                  	LD	A,B
    4772/    17CC : FE 1F               	CP	BUFLEN-1
    4773/    17CE : 30 DF               	JR	NC,GL00	; Too long
    4774/    17D0 : 04                  	INC	B
    4775/    17D1 : 79                  	LD	A,C
    4776/    17D2 : CD C5 1F            	CALL	CONOUT
    4777/    17D5 : FE 61               	cp	'a'
    4778/    17D7 : 38 06               	jr	c, GL1
    4779/    17D9 : FE 7B               	cp	'z'+1
    4780/    17DB : 30 02               	jr	nc, GL1
    4781/    17DD : E6 DF               	and	0DFH	; make upper code
    4782/    17DF :                     GL1:
    4783/    17DF : 77                  	LD	(HL),A
    4784/    17E0 : 23                  	INC	HL
    4785/    17E1 : 18 CC               	JR	GL00
    4786/    17E3 :                     GLB:
    4787/    17E3 : 78                  	LD	A,B
    4788/    17E4 : A7                  	AND	A
    4789/    17E5 : 28 C8               	JR	Z,GL00
    4790/    17E7 : 05                  	DEC	B
    4791/    17E8 : 2B                  	DEC	HL
    4792/    17E9 : 3E 08               	LD	A,08H
    4793/    17EB : CD C5 1F            	CALL	CONOUT
    4794/    17EE : 3E 20               	LD	A,' '
    4795/    17F0 : CD C5 1F            	CALL	CONOUT
    4796/    17F3 : 3E 08               	LD	A,08H
    4797/    17F5 : CD C5 1F            	CALL	CONOUT
    4798/    17F8 : 18 B5               	JR	GL00
    4799/    17FA :                     GLE:
    4800/    17FA : CD 91 17            	CALL	CRLF
    4801/    17FD : 36 00               	LD	(HL),00H
    4802/    17FF : E1                  	pop	hl
    4803/    1800 : C1                  	POP	BC
    4804/    1801 : C9                  	RET
    4805/    1802 :                     
    4806/    1802 :                     SKIPSP:
    4807/    1802 : 7E                  	LD	A,(HL)
    4808/    1803 : FE 20               	CP	' '
    4809/    1805 : C0                  	RET	NZ
    4810/    1806 : 23                  	INC	HL
    4811/    1807 : 18 F9               	JR	SKIPSP
    4812/    1809 :                     
    4813/    1809 :                     UPPER:
    4814/    1809 : FE 61               	CP	'a'
    4815/    180B : D8                  	RET	C
    4816/    180C : FE 7B               	CP	'z'+1
    4817/    180E : D0                  	RET	NC
    4818/    180F : C6 E0               	ADD	A,'A'-'a'
    4819/    1811 : C9                  	RET
    4820/    1812 :                     
    4821/    1812 :                     RDHEX:
    4822/    1812 : 0E 00               	LD	C,0
    4823/    1814 : 11 00 00            	LD	DE,0
    4824/    1817 :                     RH0:
    4825/    1817 : 7E                  	LD	A,(HL)
    4826/    1818 :                     ;	CALL	UPPER
    4827/    1818 : FE 30               	CP	'0'
    4828/    181A : 38 2C               	JR	C,RHE
    4829/    181C : FE 3A               	CP	'9'+1
    4830/    181E : 38 0A               	JR	C,RH1
    4831/    1820 : FE 41               	CP	'A'
    4832/    1822 : 38 24               	JR	C,RHE
    4833/    1824 : FE 47               	CP	'F'+1
    4834/    1826 : 30 20               	JR	NC,RHE
    4835/    1828 : D6 07               	SUB	'A'-'9'-1
    4836/    182A :                     RH1:
    4837/    182A : D6 30               	SUB	'0'
    4838/    182C : 17                  	RLA
    4839/    182D : 17                  	RLA
    4840/    182E : 17                  	RLA
    4841/    182F : 17                  	RLA
    4842/    1830 : 17                  	RLA
    4843/    1831 : CB 13               	RL	E
    4844/    1833 : CB 12               	RL	D
    4845/    1835 : 17                  	RLA
    4846/    1836 : CB 13               	RL	E
    4847/    1838 : CB 12               	RL	D
    4848/    183A : 17                  	RLA
    4849/    183B : CB 13               	RL	E
    4850/    183D : CB 12               	RL	D
    4851/    183F : 17                  	RLA
    4852/    1840 : CB 13               	RL	E
    4853/    1842 : CB 12               	RL	D
    4854/    1844 : 23                  	INC	HL
    4855/    1845 : 0C                  	INC	C
    4856/    1846 : 18 CF               	JR	RH0
    4857/    1848 :                     RHE:
    4858/    1848 : 79                  	ld	a, c
    4859/    1849 : B7                  	or	a
    4860/    184A : 28 06               	jr	z, rhe1
    4861/    184C : FE 05               	cp	5
    4862/    184E : 30 02               	jr	nc, rhe1
    4863/    1850 : B7                  	or	a	; clear carry
    4864/    1851 : C9                  	ret
    4865/    1852 :                     	
    4866/    1852 :                     rhe1:
    4867/    1852 : 37                  	scf	; set carry
    4868/    1853 : C9                  	RET
    4869/    1854 :                     
    4870/    1854 :                     ;;;
    4871/    1854 :                     ;;; API Handler
    4872/    1854 :                     ;;:   C : API entory NO.
    4873/    1854 :                     ;;;
    4874/    1854 :                     
    4875/    1854 :                     RST30H_IN:
    4876/    1854 :                     
    4877/    1854 : E5                  	PUSH	HL
    4878/    1855 : C5                  	PUSH	BC
    4879/    1856 : 21 71 18            	LD	HL,APITBL
    4880/    1859 : 06 00               	LD	B,0
    4881/    185B : 09                  	ADD	HL,BC
    4882/    185C : 09                  	ADD	HL,BC
    4883/    185D :                     
    4884/    185D : 01 9B 18            	ld	bc, APITBL_E
    4885/    1860 : B7                  	or	a
    4886/    1861 : E5                  	push	hl
    4887/    1862 : ED 42               	sbc	hl, bc
    4888/    1864 : E1                  	pop	hl
    4889/    1865 : 30 07               	jr	nc, no_api	; request No. is not exist
    4890/    1867 :                     
    4891/    1867 : 46                  	LD	B,(HL)
    4892/    1868 : 23                  	INC	HL
    4893/    1869 : 66                  	LD	H,(HL)
    4894/    186A : 68                  	LD	L,B
    4895/    186B :                     
    4896/    186B : C1                  	POP	BC
    4897/    186C : E3                  	EX	(SP),HL		; Restore HL, jump address on stack top
    4898/    186D :                     no_operate:
    4899/    186D : C9                  	RET
    4900/    186E :                     
    4901/    186E :                     no_api:
    4902/    186E : C1                  	pop	bc
    4903/    186F : E1                  	pop	hl
    4904/    1870 : C9                  	ret
    4905/    1871 :                     
    4906/    1871 :                     APITBL:
    4907/    1871 : 9B 18               	DW	API00		; 00: CSTART
    4908/    1873 : 9E 18               	DW	API01		; 01: WSTART
    4909/    1875 : C5 1F               	DW	CONOUT		; 02: CONOUT
    4910/    1877 : 48 17               	DW	STROUT		; 03: STROUT
    4911/    1879 : B4 1F               	DW	CONIN		; 04: CONIN
    4912/    187B : BF 1F               	DW	CONST		; 05: CONST
    4913/    187D : E0 18               	DW	API06		; 06: PSPEC
    4914/    187F : 51 17               	DW	HEXOUT4		; 07: CONOUT HEX4bytes: input HL
    4915/    1881 : 56 17               	DW	HEXOUT2		; 08: CONOUT HEX2bytes: input A
    4916/    1883 : 5F 17               	DW	HEXOUT1		; 09: CONOUT HEX1byte : input A
    4917/    1885 : 9B 17               	DW	CLR_CRT		; 10: Clear screen (ESC+[2)
    4918/    1887 : AB 17               	DW	GL0		; 11: GET a line (input HL : input buffer address)
    4919/    1889 : 02 18               	DW	SKIPSP		; 12: SKIP Spase
    4920/    188B : 91 17               	DW	CRLF		; 13: CONOUT CRLF
    4921/    188D : 09 18               	DW	UPPER		; 14: Lower to UPPER
    4922/    188F : 12 18               	DW	RDHEX		; 15: get hex number from chr buffer
    4923/    1891 :                     				;     input  HL : hex string buffer
    4924/    1891 :                     				;     output DE : hex number
    4925/    1891 :                     				;            CF=1 : error, C, A = hex counts(1-4)
    4926/    1891 : B4 1A               	DW	DEC_STR		; 16: get decimal srtings
    4927/    1893 :                     				; input hl : return storings buffer addr.
    4928/    1893 :                     				;       de : 16bit binary
    4929/    1893 : EA 1A               	DW	DIV16_8		; 17; division 16bit / 8bit
    4930/    1895 : 60 1B               	DW	MUL_8		; 18: multiply 8bit * 8bit
    4931/    1897 : =>TRUE               	IF RAM12K
    4932/    1897 : 17 1A               	DW	STOPW		; 19: stopwatch
    4933/    1899 : =>FALSE              	ELSE
    4934/    1899 :                     	DW	no_operate	; 19: no operation : if RAM12K=0
    4935/    1899 : [4931]               	ENDIF
    4936/    1899 : F1 07               	dw	get_disasm_st	; 20: dis assemble string
    4937/    189B :                     				;     input: HL buffer. need 42bytes
    4938/    189B :                     				;     output : DE : next MC address
    4939/    189B :                     				;              A  : disassembled MC size
    4940/    189B :                     APITBL_E:
    4941/    189B :                     
    4942/    189B :                     	;; CSTART
    4943/    189B :                     API00:
    4944/    189B : C3 40 00            	JP	CSTART
    4945/    189E :                     
    4946/    189E :                     	;; WSTART from API
    4947/    189E :                     API01:
    4948/    189E : 31 00 EF            	LD	SP,STACKM	; reset SP for monitor
    4949/    18A1 :                     
    4950/    18A1 :                     ; check stop by bp and trace operation
    4951/    18A1 :                     
    4952/    18A1 : 3A 6D EF            	ld	a, (tmpb_f)
    4953/    18A4 : B7                  	or	a
    4954/    18A5 : 28 06               	jr	z, ws_chk1
    4955/    18A7 : 21 6E EF            	ld	hl, tmpb_op
    4956/    18AA : CD CF 19            	call	rstr_tpt
    4957/    18AD :                     ws_chk1:
    4958/    18AD : 3A 5D EF            	ld	a, (tpt1_f)
    4959/    18B0 : B7                  	or	a
    4960/    18B1 : 28 06               	jr	z, ws_chk2
    4961/    18B3 : 21 5E EF            	ld	hl, tpt1_op
    4962/    18B6 : CD CF 19            	call	rstr_tpt
    4963/    18B9 :                     
    4964/    18B9 :                     ws_chk2:
    4965/    18B9 : 3A 61 EF            	ld	a, (tpt2_f)
    4966/    18BC : B7                  	or	a
    4967/    18BD : 28 06               	jr	z, ws_chk3
    4968/    18BF : 21 62 EF            	ld	hl, tpt2_op
    4969/    18C2 : CD CF 19            	call	rstr_tpt
    4970/    18C5 :                     ws_chk3:
    4971/    18C5 : 3A 69 EF            	ld	a, (bpt2_f)
    4972/    18C8 : B7                  	or	a
    4973/    18C9 : 28 06               	jr	z, ws_chk4
    4974/    18CB : 21 6A EF            	ld	hl, bpt2_op
    4975/    18CE : CD DB 19            	call	rstr_bpt
    4976/    18D1 :                     ws_chk4:
    4977/    18D1 : 3A 65 EF            	ld	a, (bpt1_f)
    4978/    18D4 : B7                  	or	a
    4979/    18D5 : 28 06               	jr	z, ws_chk5
    4980/    18D7 : 21 66 EF            	ld	hl, bpt1_op
    4981/    18DA : CD DB 19            	call	rstr_bpt
    4982/    18DD :                     ws_chk5:
    4983/    18DD : C3 A5 19            	JP	backTomon
    4984/    18E0 :                     
    4985/    18E0 :                     	;; PSPEC
    4986/    18E0 :                     API06:
    4987/    18E0 : AF                  	XOR	A
    4988/    18E1 : C9                  	RET
    4989/    18E2 :                     
    4990/    18E2 :                     ;;;
    4991/    18E2 :                     ;;; Break Point
    4992/    18E2 :                     ;;; trace Point
    4993/    18E2 :                     ;;; go, stop point
    4994/    18E2 :                     ;;; operation handler
    4995/    18E2 :                     ;;
    4996/    18E2 :                     RST38H_IN:
    4997/    18E2 : F5                  	PUSH	AF
    4998/    18E3 : ED 5F               	LD	A,R
    4999/    18E5 : 32 45 EF            	LD	(REGR),A
    5000/    18E8 : ED 57               	LD	A,I
    5001/    18EA : 32 44 EF            	LD	(REGI),A
    5002/    18ED : 22 32 EF            	LD	(REGHL),HL
    5003/    18F0 : ED 53 30 EF         	LD	(REGDE),DE
    5004/    18F4 : ED 43 2E EF         	LD	(REGBC),BC
    5005/    18F8 : E1                  	POP	HL
    5006/    18F9 : 22 2C EF            	LD	(REGAF),HL
    5007/    18FC : 08                  	EX	AF,AF'
    5008/    18FD : F5                  	PUSH	AF
    5009/    18FE : D9                  	EXX
    5010/    18FF : 22 3A EF            	LD	(REGHLX),HL
    5011/    1902 : ED 53 38 EF         	LD	(REGDEX),DE
    5012/    1906 : ED 43 36 EF         	LD	(REGBCX),BC
    5013/    190A : E1                  	POP	HL
    5014/    190B : 22 34 EF            	LD	(REGAFX),HL
    5015/    190E : DD 22 3C EF         	LD	(REGIX),IX
    5016/    1912 : FD 22 3E EF         	LD	(REGIY),IY
    5017/    1916 : E1                  	POP	HL
    5018/    1917 : 2B                  	DEC	HL
    5019/    1918 : 22 42 EF            	LD	(REGPC),HL
    5020/    191B : ED 73 40 EF         	LD	(REGSP),SP
    5021/    191F :                     
    5022/    191F :                     ; check bp and trace operation
    5023/    191F :                     
    5024/    191F : 31 00 EF            	LD	SP,STACKM	; reset SP for monitor
    5025/    1922 : AF                  	xor	a
    5026/    1923 : 57                  	ld	d, a
    5027/    1924 : 5F                  	ld	e, a		;clear msg pointer
    5028/    1925 :                     
    5029/    1925 :                     
    5030/    1925 :                     ; check go, end operation
    5031/    1925 : 3A 6D EF            	ld	a, (tmpb_f)
    5032/    1928 : B7                  	or	a
    5033/    1929 : 28 09               	jr	z, chk_bp
    5034/    192B : 11 05 1A            	ld	de, stpBrk_msg
    5035/    192E : 21 6E EF            	ld	hl, tmpb_op
    5036/    1931 : CD CF 19            	call	rstr_tpt
    5037/    1934 :                     
    5038/    1934 :                     ; check set break point
    5039/    1934 :                     
    5040/    1934 :                     chk_bp:
    5041/    1934 : 3A 69 EF            	ld	a, (bpt2_f)
    5042/    1937 : B7                  	or	a
    5043/    1938 : 28 09               	jr	z, bp_chk1
    5044/    193A : 11 05 1A            	ld	de, stpBrk_msg
    5045/    193D : 21 6A EF            	ld	hl, bpt2_op
    5046/    1940 : CD DB 19            	call	rstr_bpt
    5047/    1943 :                     
    5048/    1943 :                     bp_chk1:
    5049/    1943 : 3A 65 EF            	ld	a, (bpt1_f)
    5050/    1946 : B7                  	or	a
    5051/    1947 : 28 09               	jr	z, tp_chk1
    5052/    1949 : 11 05 1A            	ld	de, stpBrk_msg
    5053/    194C : 21 66 EF            	ld	hl, bpt1_op
    5054/    194F : CD DB 19            	call	rstr_bpt
    5055/    1952 :                     
    5056/    1952 :                     ; check trace operation
    5057/    1952 :                     tp_chk1:
    5058/    1952 : 3A 5D EF            	ld	a, (tpt1_f)
    5059/    1955 : B7                  	or	a
    5060/    1956 : 28 09               	jr	z, tp_chk2
    5061/    1958 : 11 0E 1A            	ld	de, trace_msg
    5062/    195B : 21 5E EF            	ld	hl, tpt1_op
    5063/    195E : CD CF 19            	call	rstr_tpt
    5064/    1961 :                     
    5065/    1961 :                     tp_chk2:
    5066/    1961 : 3A 61 EF            	ld	a, (tpt2_f)
    5067/    1964 : B7                  	or	a
    5068/    1965 : 28 09               	jr	z, bp_chk_end
    5069/    1967 :                     
    5070/    1967 : 11 0E 1A            	ld	de, trace_msg
    5071/    196A : 21 62 EF            	ld	hl, tpt2_op
    5072/    196D : CD CF 19            	call	rstr_tpt
    5073/    1970 :                     
    5074/    1970 :                     bp_chk_end:
    5075/    1970 : 7A                  	ld	a, d
    5076/    1971 : B3                  	or	e
    5077/    1972 : 20 03               	jr	nz, no_rst38_msg
    5078/    1974 :                     
    5079/    1974 :                     	; set RST 38H message
    5080/    1974 : 11 FB 19            	LD	de,RST38MSG
    5081/    1977 :                     
    5082/    1977 :                     no_rst38_msg:
    5083/    1977 : 1A                  	ld	a, (de)		; get first char of message
    5084/    1978 : FE 54               	cp	'T'		; trace ?
    5085/    197A : 28 0C               	jr	z, chk_ntrace
    5086/    197C :                     	
    5087/    197C : EB                  	ex	de, hl
    5088/    197D : CD 48 17            	CALL	STROUT
    5089/    1980 :                     
    5090/    1980 :                     	;; R register adjustment
    5091/    1980 :                     
    5092/    1980 : CD BC 16            	CALL	RDUMP
    5093/    1983 : CD E2 19            	call	dis_call	; list disassemble
    5094/    1986 : 18 1D               	jr	backTomon	; goto WBOOT
    5095/    1988 :                     
    5096/    1988 :                     ;
    5097/    1988 :                     ; check continue trace operation
    5098/    1988 :                     ;
    5099/    1988 :                     chk_ntrace:
    5100/    1988 : 3A 56 EF            	ld	a, (TP_mode)
    5101/    198B : FE 46               	cp	'F'		; chk
    5102/    198D : 28 0A               	jr	z, skp_rmsg
    5103/    198F :                     
    5104/    198F :                     ;no_trace:
    5105/    198F : EB                  	ex	de, hl
    5106/    1990 : CD 48 17            	CALL	STROUT
    5107/    1993 :                     
    5108/    1993 :                     	;; R register adjustment
    5109/    1993 :                     
    5110/    1993 : CD BC 16            	CALL	RDUMP
    5111/    1996 : CD E2 19            	call	dis_call	; list disassemble
    5112/    1999 :                     
    5113/    1999 :                     skp_rmsg:
    5114/    1999 : CD BF 1F            	call	CONST
    5115/    199C : 28 13               	jr	z, t_no_ky		; no key in
    5116/    199E : CD B4 1F            	call	CONIN
    5117/    19A1 : FE 03               	cp	03h	; chk CTL+C
    5118/    19A3 : 20 0C               	jr	nz, t_no_ky
    5119/    19A5 :                     
    5120/    19A5 :                     	; stop_trace
    5121/    19A5 :                     backTomon:
    5122/    19A5 : AF                  	xor	a
    5123/    19A6 : 32 5C EF            	ld	(fever_t), a	; clear forever flag
    5124/    19A9 : 67                  	ld	h, a
    5125/    19AA : 6F                  	ld	l, a
    5126/    19AB : 22 58 EF            	ld	(TC_cnt), hl
    5127/    19AE : C3 BE 00            	JP	WSTART
    5128/    19B1 :                     	
    5129/    19B1 :                     	; check trace forever
    5130/    19B1 :                     t_no_ky:
    5131/    19B1 : 3A 5C EF            	ld	a, (fever_t)
    5132/    19B4 : B7                  	or	a
    5133/    19B5 : C2 C6 19            	jp	nz, repeat_trace
    5134/    19B8 :                     
    5135/    19B8 : 2A 58 EF            	ld	hl, (TC_cnt)
    5136/    19BB : 2B                  	dec	hl
    5137/    19BC : 22 58 EF            	ld	(TC_cnt), hl
    5138/    19BF : 7D                  	ld	a, l
    5139/    19C0 : B4                  	or	h
    5140/    19C1 : 20 03               	jr	nz, repeat_trace
    5141/    19C3 : C3 BE 00            	JP	WSTART
    5142/    19C6 :                     
    5143/    19C6 :                     repeat_trace:
    5144/    19C6 : 2A 42 EF            	ld	hl, (REGPC)
    5145/    19C9 : 22 5A EF            	ld	(tmpT), hl
    5146/    19CC : C3 E1 03            	jp	t_op_chk
    5147/    19CF :                     
    5148/    19CF :                     rstr_tpt:	; HL=buffer point
    5149/    19CF : E5                  	push	hl
    5150/    19D0 : 7E                  	ld	a, (hl)
    5151/    19D1 : 23                  	inc	hl
    5152/    19D2 : 4E                  	ld	c, (hl)
    5153/    19D3 : 23                  	inc	hl
    5154/    19D4 : 46                  	ld	b, (hl)
    5155/    19D5 :                     
    5156/    19D5 : 02                  	ld	(bc), a		; restor OP CODE
    5157/    19D6 : E1                  	pop	hl
    5158/    19D7 : AF                  	xor	a
    5159/    19D8 : 2B                  	dec	hl
    5160/    19D9 : 77                  	ld	(hl), a		; clear trace flag
    5161/    19DA : C9                  	ret
    5162/    19DB :                     
    5163/    19DB :                     rstr_bpt:	; HL=buffer point
    5164/    19DB : 7E                  	ld	a, (hl)
    5165/    19DC : 23                  	inc	hl
    5166/    19DD : 4E                  	ld	c, (hl)
    5167/    19DE : 23                  	inc	hl
    5168/    19DF : 46                  	ld	b, (hl)
    5169/    19E0 :                     
    5170/    19E0 : 02                  	ld	(bc), a		; restor OP CODE
    5171/    19E1 : C9                  	ret
    5172/    19E2 :                     
    5173/    19E2 :                     dis_call:
    5174/    19E2 : 2A 42 EF            	ld	hl, (REGPC)
    5175/    19E5 : 22 7D EF            	ld	(dasm_adr), hl	; set disasm address
    5176/    19E8 : CD 47 08            	call	dis_analysis
    5177/    19EB : CD 0C 08            	call	mk_adr_str	; conout address and machine code
    5178/    19EE : 21 84 EF            	ld	hl, adr_mc_buf
    5179/    19F1 : CD 48 17            	call	STROUT		; conout disassemble strings
    5180/    19F4 : 2A 42 EF            	ld	hl, (REGPC)
    5181/    19F7 : 22 7D EF            	ld	(dasm_adr), hl	; restrore disasm address
    5182/    19FA : C9                  	ret
    5183/    19FB :                     
    5184/    19FB :                     RST38MSG:
    5185/    19FB : 52 53 54 20 33 38   	DB	"RST 38H",CR,LF,00H
             1A01 : 48 0D 0A 00       
    5186/    1A05 :                     stpBrk_msg:	
    5187/    1A05 : 42 72 65 61 6B 21   	db	"Break!",CR,LF,00H
             1A0B : 0D 0A 00          
    5188/    1A0E :                     trace_msg:	
    5189/    1A0E : 54 72 61 63 65 21   	db	"Trace!",CR,LF,00H
             1A14 : 0D 0A 00          
    5190/    1A17 :                     
    5191/    1A17 : =>TRUE               	IF RAM12K
    5192/    1A17 :                     STOPW:
    5193/    1A17 :                     	; (input) A = 0 : start timer, (output) none
    5194/    1A17 :                     	; (input) A = 1 : stop timer,  (output) BC : msec time, DE : Sec time
    5195/    1A17 :                     	; (input) A = 2 : lap timer,   (output) BC : msec time, DE : Sec time
    5196/    1A17 :                     	; (input) A = 3 : clear timer counter,  (output) none
    5197/    1A17 :                     
    5198/    1A17 : F5                  	push	af
    5199/    1A18 : E5                  	push	hl
    5200/    1A19 : FE 00               	cp	0
    5201/    1A1B : 28 0F               	jr	z, start_tim
    5202/    1A1D : FE 01               	cp	1
    5203/    1A1F : 28 14               	jr	z, stop_tim
    5204/    1A21 : FE 02               	cp	2
    5205/    1A23 : 28 16               	jr	z, lap_tim
    5206/    1A25 : FE 03               	cp	3
    5207/    1A27 : 28 50               	jr	z, clr_tim
    5208/    1A29 : E1                  	pop	hl
    5209/    1A2A : F1                  	pop	af
    5210/    1A2B : C9                  	ret
    5211/    1A2C :                     
    5212/    1A2C :                     start_tim:
    5213/    1A2C : 21 00 F8            	ld	hl, TIM0_CTL0
    5214/    1A2F : 3E 90               	ld	a, 90h
    5215/    1A31 : 77                  	ld	(hl),a		; enable timer 0
    5216/    1A32 : E1                  	pop	hl
    5217/    1A33 : F1                  	pop	af
    5218/    1A34 : C9                  	ret
    5219/    1A35 :                     	
    5220/    1A35 :                     stop_tim:
    5221/    1A35 : 21 00 F8            	ld	hl, TIM0_CTL0
    5222/    1A38 : 3E 10               	ld	a, 10h
    5223/    1A3A : 77                  	ld	(hl), a		; disable timer 0
    5224/    1A3B :                     
    5225/    1A3B :                     	; save timer counter
    5226/    1A3B :                     
    5227/    1A3B :                     lap_tim:
    5228/    1A3B : 3A 10 F8            	ld	a, (TIMER0_CNTL)
    5229/    1A3E : 32 46 EF            	ld	(c16b), a
    5230/    1A41 : 3A 11 F8            	ld	a, (TIMER0_CNTH)
    5231/    1A44 : 32 47 EF            	ld	(c16b+1), a
    5232/    1A47 :                     
    5233/    1A47 :                     ; adjust 16bit counter
    5234/    1A47 :                     
    5235/    1A47 : 01 E1 87            	ld	bc, TIMER0_INITC
    5236/    1A4A : 2A 46 EF            	ld	hl, (c16b)
    5237/    1A4D : 7C                  	ld	a, h
    5238/    1A4E : B5                  	or	l	; HL = 0?
    5239/    1A4F : 20 06               	jr	nz, adj_tim1
    5240/    1A51 : ED 43 46 EF         	ld	(c16b), bc
    5241/    1A55 : 18 05               	jr	rd_sec
    5242/    1A57 :                     
    5243/    1A57 :                     adj_tim1:
    5244/    1A57 : ED 42               	sbc	hl, bc
    5245/    1A59 : 22 46 EF            	ld	(c16b), hl
    5246/    1A5C :                     
    5247/    1A5C :                     ; read seconds counter
    5248/    1A5C :                     
    5249/    1A5C :                     rd_sec:
    5250/    1A5C : 3A 20 F8            	ld	a, (TIMER0_SCTL)
    5251/    1A5F : 32 48 EF            	ld	(secb), a
    5252/    1A62 : 3A 21 F8            	ld	a, (TIMER0_SCTH)
    5253/    1A65 : 32 49 EF            	ld	(secb+1), a
    5254/    1A68 :                     
    5255/    1A68 :                     	; convert msec from 16bit counter
    5256/    1A68 :                     
    5257/    1A68 : 2A 46 EF            	ld	hl,(c16b)
    5258/    1A6B : CD 98 1A            	call	chg_msec	; result BC
    5259/    1A6E : ED 43 4A EF         	ld	(msecb),bc	; save result
    5260/    1A72 : ED 5B 48 EF         	ld	de,(secb)	; get sec counter
    5261/    1A76 : E1                  	pop	hl
    5262/    1A77 : F1                  	pop	af
    5263/    1A78 : C9                  	ret
    5264/    1A79 :                     
    5265/    1A79 :                     clr_tim:
    5266/    1A79 : AF                  	xor	a
    5267/    1A7A : 67                  	ld	h, a
    5268/    1A7B : 6F                  	ld	l, a
    5269/    1A7C : 22 4A EF            	ld	(msecb), hl
    5270/    1A7F : 22 48 EF            	ld	(secb), hl
    5271/    1A82 : 22 46 EF            	ld	(c16b), hl
    5272/    1A85 :                     	
    5273/    1A85 : 32 20 F8            	ld	(TIMER0_SCTL), a
    5274/    1A88 : 32 21 F8            	ld	(TIMER0_SCTH), a
    5275/    1A8B : 3E E8               	ld	a, 0e8h
    5276/    1A8D : 32 10 F8            	ld	(TIMER0_CNTL), a
    5277/    1A90 : 3E 86               	ld	a, 86H
    5278/    1A92 : 32 11 F8            	ld	(TIMER0_CNTH), a
    5279/    1A95 : E1                  	pop	hl
    5280/    1A96 : F1                  	pop	af
    5281/    1A97 : C9                  	ret
    5282/    1A98 :                     
    5283/    1A98 :                     chg_msec:
    5284/    1A98 : AF                  	xor	a
    5285/    1A99 : 47                  	ld	b, a
    5286/    1A9A : 4F                  	ld	c ,a		;cear BC
    5287/    1A9B : 2A 46 EF            	ld	hl, (c16b)	; get 16bit counter
    5288/    1A9E : 7D                  	ld	a, l
    5289/    1A9F :                     u_00:
    5290/    1A9F : FE 1F               	cp	31
    5291/    1AA1 : 38 06               	jr	c, u_1
    5292/    1AA3 : D6 1F               	sub	31
    5293/    1AA5 :                     u_0:
    5294/    1AA5 : 6F                  	ld	l, a
    5295/    1AA6 : 03                  	inc	bc
    5296/    1AA7 : 18 F6               	jr	u_00
    5297/    1AA9 :                     
    5298/    1AA9 :                     u_1:
    5299/    1AA9 : 7C                  	ld	a, h
    5300/    1AAA : B7                  	or	a
    5301/    1AAB : C8                  	ret	z	; can't sub
    5302/    1AAC :                     
    5303/    1AAC : 7D                  	ld	a, l
    5304/    1AAD : D6 1F               	sub	31
    5305/    1AAF : ED 44               	neg
    5306/    1AB1 : 25                  	dec	h
    5307/    1AB2 : 18 F1               	jr	u_0
    5308/    1AB4 :                     
    5309/    1AB4 : [5191]               	ENDIF
    5310/    1AB4 :                     
    5311/    1AB4 :                     ;
    5312/    1AB4 :                     ; make decimal string
    5313/    1AB4 :                     ;
    5314/    1AB4 :                     ; input HL : output string buffer
    5315/    1AB4 :                     ;       DE : 16bit binary
    5316/    1AB4 :                     ;
    5317/    1AB4 :                     ; output (HL) : decimal strings
    5318/    1AB4 :                     
    5319/    1AB4 :                     DEC_STR:
    5320/    1AB4 : F5                  	PUSH	AF
    5321/    1AB5 : C5                  	PUSH	BC
    5322/    1AB6 : D5                  	PUSH	DE
    5323/    1AB7 : E5                  	push	hl
    5324/    1AB8 : DD E5               	push	ix
    5325/    1ABA :                     
    5326/    1ABA : E5                  	push	hl
    5327/    1ABB : DD E1               	pop	ix		; ix: save buffer top address
    5328/    1ABD :                     
    5329/    1ABD : EB                  	ex	de, hl		; hl: 16bit binary, de: buffer
    5330/    1ABE : E5                  	push	hl		; save 16bit binary
    5331/    1ABF : 21 05 00            	ld	hl, 5
    5332/    1AC2 : 19                  	add	hl, de		; hl = buffer + 5
    5333/    1AC3 : AF                  	xor	a
    5334/    1AC4 : 77                  	ld	(hl), A
    5335/    1AC5 : EB                  	ex	de, hl		; de: buffer + 5, hl : buffer
    5336/    1AC6 : E1                  	pop	hl		; hl : 16bit binary
    5337/    1AC7 : 01 01 00            	LD	BC, 1
    5338/    1ACA :                     
    5339/    1ACA :                     LOOP_DEC:
    5340/    1ACA : 3E 0A               	LD	A, 10
    5341/    1ACC : CD EA 1A            	CALL	DIV16_8
    5342/    1ACF : F6 30               	OR	30H
    5343/    1AD1 : 1B                  	DEC	DE
    5344/    1AD2 : 12                  	LD	(DE), A
    5345/    1AD3 : 0C                  	INC	C
    5346/    1AD4 : 7C                  	LD	A, H
    5347/    1AD5 : B5                  	OR	L
    5348/    1AD6 : 20 F2               	JR	NZ, LOOP_DEC
    5349/    1AD8 :                     
    5350/    1AD8 : 79                  	LD	A, C
    5351/    1AD9 : FE 06               	CP	6
    5352/    1ADB : 28 06               	JR	Z, END_DEC
    5353/    1ADD :                     
    5354/    1ADD : DD E5               	push	ix
    5355/    1ADF : E1                  	pop	hl		; hl : buffer top address
    5356/    1AE0 : EB                  	EX	DE, HL
    5357/    1AE1 : ED B0               	LDIR
    5358/    1AE3 :                     
    5359/    1AE3 :                     END_DEC:
    5360/    1AE3 : DD E1               	pop	ix
    5361/    1AE5 : E1                  	pop	hl
    5362/    1AE6 : D1                  	POP	DE
    5363/    1AE7 : C1                  	POP	BC
    5364/    1AE8 : F1                  	POP	AF
    5365/    1AE9 : C9                  	RET
    5366/    1AEA :                     
    5367/    1AEA :                     
    5368/    1AEA :                     ; DIV 16bit / 8 bit
    5369/    1AEA :                     ; input
    5370/    1AEA :                     ;	HL, A
    5371/    1AEA :                     ; output
    5372/    1AEA :                     ;	result = HL, mod = A
    5373/    1AEA :                     
    5374/    1AEA :                     DIV16_8:
    5375/    1AEA : C5                  	PUSH	BC
    5376/    1AEB : D5                  	PUSH	DE
    5377/    1AEC :                     
    5378/    1AEC : 4F                  	LD	C, A
    5379/    1AED : 06 0F               	LD	B, 15
    5380/    1AEF : AF                  	XOR	A
    5381/    1AF0 : 29                  	ADD	HL, HL
    5382/    1AF1 : 17                  	RLA
    5383/    1AF2 : 91                  	SUB	C
    5384/    1AF3 : 38 0D               	JR	C, D16_MINUS_BEFORE
    5385/    1AF5 : 29                  	ADD	HL, HL
    5386/    1AF6 : 2C                  	INC	L
    5387/    1AF7 :                     
    5388/    1AF7 :                     D16_PLUS:
    5389/    1AF7 : 17                  	RLA
    5390/    1AF8 : 91                  	SUB	C
    5391/    1AF9 : 38 0C               	JR	C, D16_MINUS_AFTER
    5392/    1AFB :                     
    5393/    1AFB :                     D16_PLUS_AFTER:
    5394/    1AFB : 29                  	ADD	HL, HL
    5395/    1AFC : 2C                  	INC	L
    5396/    1AFD : 10 F8               	DJNZ	D16_PLUS
    5397/    1AFF : C3 0B 1B            	JP	D16_END
    5398/    1B02 :                     
    5399/    1B02 :                     D16_MINUS_BEFORE:
    5400/    1B02 : 29                  	ADD	HL, HL
    5401/    1B03 :                     
    5402/    1B03 :                     D16_MINUS:
    5403/    1B03 : 17                  	RLA
    5404/    1B04 : 81                  	ADD	A, C
    5405/    1B05 : 38 F4               	JR	C, D16_PLUS_AFTER
    5406/    1B07 :                     
    5407/    1B07 :                     D16_MINUS_AFTER:
    5408/    1B07 : 29                  	ADD	HL, HL
    5409/    1B08 : 10 F9               	DJNZ	D16_MINUS
    5410/    1B0A : 81                  	ADD	A,C
    5411/    1B0B :                     D16_END:
    5412/    1B0B : D1                  	POP	DE
    5413/    1B0C : C1                  	POP	BC
    5414/    1B0D : C9                  	RET
    5415/    1B0E :                     
    5416/    1B0E :                     ;
    5417/    1B0E :                     ; input : HL / DE
    5418/    1B0E :                     ; output : quotient HL
    5419/    1B0E :                     ;	   remainder DE
    5420/    1B0E :                     
    5421/    1B0E :                     DIV16:
    5422/    1B0E : 22 4C EF            	LD	(DIV16_NA), HL
    5423/    1B11 : ED 53 4E EF         	LD	(DIV16_NB), DE
    5424/    1B15 :                     
    5425/    1B15 : AF                  	XOR	A
    5426/    1B16 : 32 50 EF            	LD	(DIV16_NC), A
    5427/    1B19 : 32 51 EF            	LD	(DIV16_NC+1), A
    5428/    1B1C : 32 52 EF            	LD	(DIV16_ND), A
    5429/    1B1F : 32 53 EF            	LD	(DIV16_ND+1), A
    5430/    1B22 : 06 10               	LD	B, 16
    5431/    1B24 :                     
    5432/    1B24 :                     DIV16_X2:
    5433/    1B24 : 21 50 EF            	LD	HL, DIV16_NC
    5434/    1B27 : CB 26               	SLA	(HL)
    5435/    1B29 : 23                  	INC	HL
    5436/    1B2A : CB 16               	RL	(HL)
    5437/    1B2C :                     
    5438/    1B2C : 21 4C EF            	LD	HL, DIV16_NA
    5439/    1B2F : CB 26               	SLA	(HL)
    5440/    1B31 : 23                  	INC	HL
    5441/    1B32 : CB 16               	RL	(HL)
    5442/    1B34 : 21 52 EF            	LD	HL, DIV16_ND
    5443/    1B37 : CB 16               	RL	(HL)
    5444/    1B39 : 23                  	INC	HL
    5445/    1B3A : CB 16               	RL	(HL)
    5446/    1B3C :                     
    5447/    1B3C : 2A 4E EF            	LD	HL, (DIV16_NB)
    5448/    1B3F : 5D                  	LD	E, L
    5449/    1B40 : 54                  	LD	D, H
    5450/    1B41 : 2A 52 EF            	LD	HL, (DIV16_ND)
    5451/    1B44 : AF                  	XOR	A
    5452/    1B45 : ED 52               	SBC	HL, DE
    5453/    1B47 : 30 02               	JR	NC, DIV16_X0
    5454/    1B49 : 18 0B               	JR	DIV16_X1
    5455/    1B4B :                     
    5456/    1B4B :                     DIV16_X0:
    5457/    1B4B : 22 52 EF            	LD	(DIV16_ND), HL
    5458/    1B4E :                     
    5459/    1B4E : 3A 50 EF            	LD	A, (DIV16_NC)
    5460/    1B51 : F6 01               	OR	1
    5461/    1B53 : 32 50 EF            	LD	(DIV16_NC), A
    5462/    1B56 :                     
    5463/    1B56 :                     DIV16_X1:
    5464/    1B56 : 10 CC               	DJNZ	DIV16_X2
    5465/    1B58 :                     
    5466/    1B58 : 2A 50 EF            	LD	HL,(DIV16_NC)
    5467/    1B5B : ED 5B 52 EF         	LD	DE,(DIV16_ND)
    5468/    1B5F : C9                  	RET
    5469/    1B60 :                     
    5470/    1B60 :                     ; 8bit * 8bit : ans = 16bit
    5471/    1B60 :                     ; input A , BC
    5472/    1B60 :                     ; output HL
    5473/    1B60 :                     
    5474/    1B60 :                     MUL_8:
    5475/    1B60 : F5                  	PUSH	AF
    5476/    1B61 : C5                  	PUSH	BC
    5477/    1B62 : B7                  	OR	A	; clear carry
    5478/    1B63 : 18 04               	JR	ST_MUL8
    5479/    1B65 :                     
    5480/    1B65 :                     LOOP_M8:
    5481/    1B65 : CB 21               	SLA	C
    5482/    1B67 : CB 10               	RL	B
    5483/    1B69 :                     
    5484/    1B69 :                     ST_MUL8:
    5485/    1B69 : 1F                  	RRA
    5486/    1B6A : 30 F9               	JR	NC, LOOP_M8
    5487/    1B6C : 09                  	ADD	HL, BC
    5488/    1B6D : 20 F6               	JR	NZ, LOOP_M8
    5489/    1B6F : C1                  	POP	BC
    5490/    1B70 : F1                  	POP	AF
    5491/    1B71 : C9                  	RET
    5492/    1B72 :                     ;;;
    5493/    1B72 :                     ;;; Messages
    5494/    1B72 :                     ;;;
    5495/    1B72 :                     
    5496/    1B72 : 3F 20 3A 43 6F 6D   cmd_hlp:	db	"? :Command Help", CR, LF
             1B78 : 6D 61 6E 64 20 48 
             1B7E : 65 6C 70 0D 0A    
    5497/    1B83 : 44 5B 3C 61 64 72   		db	"D[<adr>] :Dump Memory", CR, LF
             1B89 : 3E 5D 20 3A 44 75 
             1B8F : 6D 70 20 4D 65 6D 
             1B95 : 6F 72 79 0D 0A    
    5498/    1B9A : 53 5B 3C 61 64 72   		db	"S[<adr>] :Set Memory", CR, LF
             1BA0 : 3E 5D 20 3A 53 65 
             1BA6 : 74 20 4D 65 6D 6F 
             1BAC : 72 79 0D 0A       
    5499/    1BB0 : 52 5B 3C 72 65 67   		db	"R[<reg>] :Set or Dump register", CR, LF
             1BB6 : 3E 5D 20 3A 53 65 
             1BBC : 74 20 6F 72 20 44 
             1BC2 : 75 6D 70 20 72 65 
             1BC8 : 67 69 73 74 65 72 
             1BCE : 0D 0A             
    5500/    1BD0 : 47 5B 3C 61 64 72   		db	"G[<adr>][,<stop adr>] :Go and Stop", CR, LF
             1BD6 : 3E 5D 5B 2C 3C 73 
             1BDC : 74 6F 70 20 61 64 
             1BE2 : 72 3E 5D 20 3A 47 
             1BE8 : 6F 20 61 6E 64 20 
             1BEE : 53 74 6F 70 0D 0A 
    5501/    1BF4 : 4C 20 3A 4C 6F 61   		db	"L :Load HexFile", CR, LF
             1BFA : 64 20 48 65 78 46 
             1C00 : 69 6C 65 0D 0A    
    5502/    1C05 : 50 5B 49 7C 53 5D   		db	"P[I|S] :Save HexFile(I:Intel,S:Motorola)", CR, LF
             1C0B : 20 3A 53 61 76 65 
             1C11 : 20 48 65 78 46 69 
             1C17 : 6C 65 28 49 3A 49 
             1C1D : 6E 74 65 6C 2C 53 
             1C23 : 3A 4D 6F 74 6F 72 
             1C29 : 6F 6C 61 29 0D 0A 
    5503/    1C2F : 23 4C 7C 3C 6E 75   		db	"#L|<num> :Launch program", CR, LF
             1C35 : 6D 3E 20 3A 4C 61 
             1C3B : 75 6E 63 68 20 70 
             1C41 : 72 6F 67 72 61 6D 
             1C47 : 0D 0A             
    5504/    1C49 : 42 5B 31 7C 32 5B   		db	"B[1|2[,<adr>]] :Set or List Break Point", CR, LF
             1C4F : 2C 3C 61 64 72 3E 
             1C55 : 5D 5D 20 3A 53 65 
             1C5B : 74 20 6F 72 20 4C 
             1C61 : 69 73 74 20 42 72 
             1C67 : 65 61 6B 20 50 6F 
             1C6D : 69 6E 74 0D 0A    
    5505/    1C72 : 42 43 5B 31 7C 32   		db	"BC[1|2] :Clear Break Point", CR, LF
             1C78 : 5D 20 3A 43 6C 65 
             1C7E : 61 72 20 42 72 65 
             1C84 : 61 6B 20 50 6F 69 
             1C8A : 6E 74 0D 0A       
    5506/    1C8E : 54 5B 3C 61 64 72   		db	"T[<adr>][,<steps>|-1] : Trace command", CR, LF
             1C94 : 3E 5D 5B 2C 3C 73 
             1C9A : 74 65 70 73 3E 7C 
             1CA0 : 2D 31 5D 20 3A 20 
             1CA6 : 54 72 61 63 65 20 
             1CAC : 63 6F 6D 6D 61 6E 
             1CB2 : 64 0D 0A          
    5507/    1CB5 : 54 50 5B 4F 4E 7C   		db	"TP[ON|OFF] :Trace Print Mode", CR, LF
             1CBB : 4F 46 46 5D 20 3A 
             1CC1 : 54 72 61 63 65 20 
             1CC7 : 50 72 69 6E 74 20 
             1CCD : 4D 6F 64 65 0D 0A 
    5508/    1CD3 : 54 4D 5B 49 7C 53   		db	"TM[I|S] :Trace Option for CALL", CR, LF
             1CD9 : 5D 20 3A 54 72 61 
             1CDF : 63 65 20 4F 70 74 
             1CE5 : 69 6F 6E 20 66 6F 
             1CEB : 72 20 43 41 4C 4C 
             1CF1 : 0D 0A             
    5509/    1CF3 : 44 49 5B 3C 61 64   		db	"DI[<adr>][,s<steps>|<adr>] :Disassemble", CR, LF, 00h
             1CF9 : 72 3E 5D 5B 2C 73 
             1CFF : 3C 73 74 65 70 73 
             1D05 : 3E 7C 3C 61 64 72 
             1D0B : 3E 5D 20 3A 44 69 
             1D11 : 73 61 73 73 65 6D 
             1D17 : 62 6C 65 0D 0A 00 
    5510/    1D1D :                     
    5511/    1D1D :                     OPNMSG:
    5512/    1D1D : 0D 0A               	DB	CR,LF
    5513/    1D1F : 45 4D 55 5A 38 30   	db	"EMUZ80 MONITOR Rev.B02.2",CR,LF
             1D25 : 20 4D 4F 4E 49 54 
             1D2B : 4F 52 20 52 65 76 
             1D31 : 2E 42 30 32 2E 32 
             1D37 : 0D 0A             
    5514/    1D39 : 54 68 69 73 20 6D   	db	"This monitor is based on unimon.",CR,LF,00H
             1D3F : 6F 6E 69 74 6F 72 
             1D45 : 20 69 73 20 62 61 
             1D4B : 73 65 64 20 6F 6E 
             1D51 : 20 75 6E 69 6D 6F 
             1D57 : 6E 2E 0D 0A 00    
    5515/    1D5C :                     
    5516/    1D5C :                     PROMPT:
    5517/    1D5C : 5D 20 00            	DB	"] ",00H
    5518/    1D5F :                     
    5519/    1D5F :                     IHEMSG:
    5520/    1D5F : 45 72 72 6F 72 20   	DB	"Error ihex",CR,LF,00H
             1D65 : 69 68 65 78 0D 0A 
             1D6B : 00                
    5521/    1D6C :                     SHEMSG:
    5522/    1D6C : 45 72 72 6F 72 20   	DB	"Error srec",CR,LF,00H
             1D72 : 73 72 65 63 0D 0A 
             1D78 : 00                
    5523/    1D79 :                     ERRMSG:
    5524/    1D79 : 45 72 72 6F 72 0D   	DB	"Error",CR,LF,00H
             1D7F : 0A 00             
    5525/    1D81 :                     
    5526/    1D81 :                     DSEP0:
    5527/    1D81 : 20 3A 00            	DB	" :",00H
    5528/    1D84 :                     DSEP1:
    5529/    1D84 : 20 3A 20 00         	DB	" : ",00H
    5530/    1D88 :                     IHEXER:
    5531/    1D88 : 3A 30 30 30 30 30           DB	":00000001FF",CR,LF,00H
             1D8E : 30 30 31 46 46 0D 
             1D94 : 0A 00             
    5532/    1D96 :                     SRECER:
    5533/    1D96 : 53 39 30 33 30 30           DB	"S9030000FC",CR,LF,00H
             1D9C : 30 30 46 43 0D 0A 
             1DA2 : 00                
    5534/    1DA3 :                     
    5535/    1DA3 :                     	;; Register dump table
    5536/    1DA3 : F8 1D 2D EF         RDTAB:	DW	RDSA,   REGAF+1
    5537/    1DA7 : 01                  	DB	1
    5538/    1DA8 : FC 1D 2E EF         	DW	RDSBC,  REGBC
    5539/    1DAC : 02                  	DB	2
    5540/    1DAD : 02 1E 30 EF         	DW	RDSDE,  REGDE
    5541/    1DB1 : 02                  	DB	2
    5542/    1DB2 : 08 1E 32 EF         	DW	RDSHL,  REGHL
    5543/    1DB6 : 02                  	DB	2
    5544/    1DB7 : 0E 1E 2C EF         	DW	RDSF,   REGAF
    5545/    1DBB : 01                  	DB	1
    5546/    1DBC :                     
    5547/    1DBC : 13 1E 3C EF         	DW	RDSIX,  REGIX
    5548/    1DC0 : 02                  	DB	2
    5549/    1DC1 : 18 1E 3E EF         	DW	RDSIY,  REGIY
    5550/    1DC5 : 02                  	DB	2
    5551/    1DC6 :                     
    5552/    1DC6 : 1D 1E 35 EF         	DW	RDSAX,  REGAFX+1
    5553/    1DCA : 01                  	DB	1
    5554/    1DCB : 23 1E 36 EF         	DW	RDSBCX, REGBCX
    5555/    1DCF : 02                  	DB	2
    5556/    1DD0 : 29 1E 38 EF         	DW	RDSDEX, REGDEX
    5557/    1DD4 : 02                  	DB	2
    5558/    1DD5 : 2F 1E 3A EF         	DW	RDSHLX, REGHLX
    5559/    1DD9 : 02                  	DB	2
    5560/    1DDA : 35 1E 34 EF         	DW	RDSFX,  REGAFX
    5561/    1DDE : 01                  	DB	1
    5562/    1DDF :                     
    5563/    1DDF : 3A 1E 40 EF         	DW	RDSSP,  REGSP
    5564/    1DE3 : 02                  	DB	2
    5565/    1DE4 : 3F 1E 42 EF         	DW	RDSPC,  REGPC
    5566/    1DE8 : 02                  	DB	2
    5567/    1DE9 : 44 1E 44 EF         	DW	RDSI,   REGI
    5568/    1DED : 01                  	DB	1
    5569/    1DEE : 48 1E 45 EF         	DW	RDSR,   REGR
    5570/    1DF2 : 01                  	DB	1
    5571/    1DF3 :                     
    5572/    1DF3 : 00 00 00 00         	DW	0000H,  0000H
    5573/    1DF7 : 00                  	DB	0
    5574/    1DF8 :                     
    5575/    1DF8 : 41 20 3D 00         RDSA:	DB	"A =",00H
    5576/    1DFC : 20 42 43 20 3D 00   RDSBC:	DB	" BC =",00H
    5577/    1E02 : 20 44 45 20 3D 00   RDSDE:	DB	" DE =",00H
    5578/    1E08 : 20 48 4C 20 3D 00   RDSHL:	DB	" HL =",00H
    5579/    1E0E :                     
    5580/    1E0E : 20 46 20 3D 00      RDSF:	DB	" F =",00H
    5581/    1E13 :                     
    5582/    1E13 : =1EH                 RDSF_H	equ	RDSF >> 8
    5583/    1E13 : =0EH                 RDSF_L	equ	RDSF & 0FFh
    5584/    1E13 :                     
    5585/    1E13 :                     
    5586/    1E13 : 20 49 58 3D 00      RDSIX:	DB	" IX=",00H
    5587/    1E18 : 20 49 59 3D 00      RDSIY:	DB	" IY=",00H
    5588/    1E1D : 0D 0A 41 27 3D 00   RDSAX:	DB	CR,LF,"A'=",00H
    5589/    1E23 : 20 42 43 27 3D 00   RDSBCX:	DB	" BC'=",00H
    5590/    1E29 : 20 44 45 27 3D 00   RDSDEX:	DB	" DE'=",00H
    5591/    1E2F : 20 48 4C 27 3D 00   RDSHLX:	DB	" HL'=",00H
    5592/    1E35 :                     
    5593/    1E35 : 20 46 27 3D 00      RDSFX:	DB	" F'=",00H
    5594/    1E3A :                     
    5595/    1E3A : =1EH                 RDSFX_H	equ	RDSFX >> 8
    5596/    1E3A : =35H                 RDSFX_L	equ	RDSFX & 0FFh
    5597/    1E3A :                     
    5598/    1E3A : 20 53 50 3D 00      RDSSP:	DB	" SP=",00H
    5599/    1E3F : 20 50 43 3D 00      RDSPC:	DB	" PC=",00H
    5600/    1E44 : 20 49 3D 00         RDSI:	DB	" I=",00H
    5601/    1E48 : 20 52 3D 00         RDSR:	DB	" R=",00H
    5602/    1E4C :                     
    5603/    1E4C :                     RNTAB:
    5604/    1E4C : 41 0F               	DB	'A',0FH		; "A?"
    5605/    1E4E : 96 1E 00 00         	DW	RNTABA,0
    5606/    1E52 : 42 0F               	DB	'B',0FH		; "B?"
    5607/    1E54 : A4 1E 00 00         	DW	RNTABB,0
    5608/    1E58 : 43 0F               	DB	'C',0FH		; "C?"
    5609/    1E5A : C6 1E 00 00         	DW	RNTABC,0
    5610/    1E5E : 44 0F               	DB	'D',0FH		; "D?"
    5611/    1E60 : D4 1E 00 00         	DW	RNTABD,0
    5612/    1E64 : 45 0F               	DB	'E',0FH		; "E?"
    5613/    1E66 : F6 1E 00 00         	DW	RNTABE,0
    5614/    1E6A : 46 0F               	DB	'F',0FH		; "F?"
    5615/    1E6C : 04 1F 00 00         	DW	RNTABF,0
    5616/    1E70 : 48 0F               	DB	'H',0FH		; "H?"
    5617/    1E72 : 12 1F 00 00         	DW	RNTABH,0
    5618/    1E76 : 49 0F               	DB	'I',0FH		; "I?"
    5619/    1E78 : 42 1F 00 00         	DW	RNTABI,0
    5620/    1E7C : 4C 0F               	DB	'L',0FH		; "L?"
    5621/    1E7E : 34 1F 00 00         	DW	RNTABL,0
    5622/    1E82 : 50 0F               	DB	'P',0FH		; "P?"
    5623/    1E84 : 56 1F 00 00         	DW	RNTABP,0
    5624/    1E88 : 52 01               	DB	'R',1		; "R"
    5625/    1E8A : 45 EF B1 1F         	DW	REGR,RNR
    5626/    1E8E : 53 0F               	DB	'S',0FH		; "S?"
    5627/    1E90 : 5E 1F 00 00         	DW	RNTABS,0
    5628/    1E94 :                     
    5629/    1E94 : 00 00               	DB	00H,0		; End mark
    5630/    1E96 :                     
    5631/    1E96 :                     RNTABA:
    5632/    1E96 : 00 01               	DB	00H,1		; "A"
    5633/    1E98 : 2D EF 66 1F         	DW	REGAF+1,RNA
    5634/    1E9C : 27 01               	DB	27H,1		; "A'"
    5635/    1E9E :                     ;;	DB	'\'',1		; "A'"
    5636/    1E9E : 35 EF 7F 1F         	DW	REGAFX+1,RNAX
    5637/    1EA2 :                     
    5638/    1EA2 : 00 00               	DB	00H,0
    5639/    1EA4 :                     	
    5640/    1EA4 :                     RNTABB:
    5641/    1EA4 : 00 01               	DB	00H,1		; "B"
    5642/    1EA6 : 2F EF 6B 1F         	DW	REGBC+1,RNB
    5643/    1EAA : 27 01               	DB	27H,1		; "B'"
    5644/    1EAC :                     ;;	DB	'\'',1		; "B'"
    5645/    1EAC : 37 EF 86 1F         	DW	REGBCX+1,RNBX
    5646/    1EB0 : 43 0F               	DB	'C',0FH		; "BC?"
    5647/    1EB2 : B8 1E 00 00         	DW	RNTABBC,0
    5648/    1EB6 :                     
    5649/    1EB6 : 00 00               	DB	00H,0		; End mark
    5650/    1EB8 :                     
    5651/    1EB8 :                     RNTABBC:
    5652/    1EB8 : 00 02               	DB	00H,2		; "BC"
    5653/    1EBA : 2E EF 68 1F         	DW	REGBC,RNBC
    5654/    1EBE : 27 02               	DB	27H,2		; "BC'"
    5655/    1EC0 :                     ;;	DB	'\'',2		; "BC'"
    5656/    1EC0 : 36 EF 82 1F         	DW	REGBCX,RNBCX
    5657/    1EC4 :                     
    5658/    1EC4 : 00 00               	DB	00H,0
    5659/    1EC6 :                     	
    5660/    1EC6 :                     RNTABC:
    5661/    1EC6 : 00 01               	DB	00H,1		; "C"
    5662/    1EC8 : 2E EF 6D 1F         	DW	REGBC,RNC
    5663/    1ECC : 27 01               	DB	27H,1		; "C'"
    5664/    1ECE :                     ;;	DB	'\'',1		; "C'"
    5665/    1ECE : 36 EF 89 1F         	DW	REGBCX,RNCX
    5666/    1ED2 :                     
    5667/    1ED2 : 00 00               	DB	00H,0
    5668/    1ED4 :                     	
    5669/    1ED4 :                     RNTABD:
    5670/    1ED4 : 00 01               	DB	00H,1		; "D"
    5671/    1ED6 : 31 EF 72 1F         	DW	REGDE+1,RND
    5672/    1EDA : 27 01               	DB	27H,1		; "D'"
    5673/    1EDC :                     ;;	DB	'\'',1		; "D'"
    5674/    1EDC : 39 EF 90 1F         	DW	REGDEX+1,RNDX
    5675/    1EE0 : 45 0F               	DB	'E',0FH		; "DE?"
    5676/    1EE2 : E8 1E 00 00         	DW	RNTABDE,0
    5677/    1EE6 :                     
    5678/    1EE6 : 00 00               	DB	00H,0
    5679/    1EE8 :                     
    5680/    1EE8 :                     RNTABDE:
    5681/    1EE8 : 00 02               	DB	00H,2		; "DE"
    5682/    1EEA : 30 EF 6F 1F         	DW	REGDE,RNDE
    5683/    1EEE : 27 02               	DB	27H,2		; "DE'"
    5684/    1EF0 :                     ;;	DB	'\'',2		; "DE'"
    5685/    1EF0 : 38 EF 8C 1F         	DW	REGDEX,RNDEX
    5686/    1EF4 :                     
    5687/    1EF4 : 00 00               	DB	00H,0
    5688/    1EF6 :                     	
    5689/    1EF6 :                     RNTABE:
    5690/    1EF6 : 00 01               	DB	00H,1		; "E"
    5691/    1EF8 : 30 EF 74 1F         	DW	REGDE,RNE
    5692/    1EFC : 27 01               	DB	27H,1		; "E'"
    5693/    1EFE :                     ;;	DB	'\'',1		; "E'"
    5694/    1EFE : 38 EF 93 1F         	DW	REGDEX,RNEX
    5695/    1F02 :                     
    5696/    1F02 : 00 00               	DB	00H,0
    5697/    1F04 :                     	
    5698/    1F04 :                     RNTABF:
    5699/    1F04 : 00 01               	DB	00H,1		; "F"
    5700/    1F06 : 2C EF 7D 1F         	DW	REGAF,RNF
    5701/    1F0A : 27 01               	DB	27H,1		; "F'"
    5702/    1F0C :                     ;;	DB	'\'',1		; "F'"
    5703/    1F0C : 34 EF A0 1F         	DW	REGAFX,RNFX
    5704/    1F10 :                     
    5705/    1F10 : 00 00               	DB	00H,0
    5706/    1F12 :                     	
    5707/    1F12 :                     RNTABH:
    5708/    1F12 : 00 01               	DB	00H,1		; "H"
    5709/    1F14 : 33 EF 79 1F         	DW	REGHL+1,RNH
    5710/    1F18 : 27 01               	DB	27H,1		; "H'"
    5711/    1F1A :                     ;;	DB	'\'',1		; "H'"
    5712/    1F1A : 3B EF 9A 1F         	DW	REGHLX+1,RNHX
    5713/    1F1E : 4C 0F               	DB	'L',0FH		; "HL?"
    5714/    1F20 : 26 1F 00 00         	DW	RNTABHL,0
    5715/    1F24 :                     
    5716/    1F24 : 00 00               	DB	00H,0
    5717/    1F26 :                     
    5718/    1F26 :                     RNTABHL:
    5719/    1F26 : 00 02               	DB	00H,2		; "HL"
    5720/    1F28 : 32 EF 76 1F         	DW	REGHL,RNHL
    5721/    1F2C : 27 02               	DB	27H,2		; "HL'"
    5722/    1F2E :                     ;;	DB	'\'',2		; "HL'"
    5723/    1F2E : 3A EF 96 1F         	DW	REGHLX,RNHLX
    5724/    1F32 :                     
    5725/    1F32 : 00 00               	DB	00H,0
    5726/    1F34 :                     	
    5727/    1F34 :                     RNTABL:
    5728/    1F34 : 00 01               	DB	00H,1		; "L"
    5729/    1F36 : 32 EF 7B 1F         	DW	REGHL,RNL
    5730/    1F3A : 27 01               	DB	27H,1		; "L'"
    5731/    1F3C :                     ;;	DB	'\'',1		; "L'"
    5732/    1F3C : 3A EF 9D 1F         	DW	REGHLX,RNLX
    5733/    1F40 :                     
    5734/    1F40 : 00 00               	DB	00H,0
    5735/    1F42 :                     	
    5736/    1F42 :                     RNTABI:
    5737/    1F42 : 00 01               	DB	00H,1		; "I"
    5738/    1F44 : 44 EF AF 1F         	DW	REGI,RNI
    5739/    1F48 : 58 02               	DB	'X',2		; "IX"
    5740/    1F4A : 3C EF A3 1F         	DW	REGIX,RNIX
    5741/    1F4E : 59 02               	DB	'Y',2		; "IY"
    5742/    1F50 : 3E EF A6 1F         	DW	REGIY,RNIY
    5743/    1F54 :                     	
    5744/    1F54 : 00 00               	DB	00H,0
    5745/    1F56 :                     
    5746/    1F56 :                     RNTABP:
    5747/    1F56 : 43 02               	DB	'C',2		; "PC"
    5748/    1F58 : 42 EF AC 1F         	DW	REGPC,RNPC
    5749/    1F5C :                     
    5750/    1F5C : 00 00               	DB	00H,0
    5751/    1F5E :                     
    5752/    1F5E :                     RNTABS:
    5753/    1F5E : 50 02               	DB	'P',2		; "SP"
    5754/    1F60 : 40 EF A9 1F         	DW	REGSP,RNSP
    5755/    1F64 :                     
    5756/    1F64 : 00 00               	DB	00H,0
    5757/    1F66 :                     
    5758/    1F66 : 41 00               RNA:	DB	"A",00H
    5759/    1F68 : 42 43 00            RNBC:	DB	"BC",00H
    5760/    1F6B : 42 00               RNB:	DB	"B",00H
    5761/    1F6D : 43 00               RNC:	DB	"C",00H
    5762/    1F6F : 44 45 00            RNDE:	DB	"DE",00H
    5763/    1F72 : 44 00               RND:	DB	"D",00H
    5764/    1F74 : 45 00               RNE:	DB	"E",00H
    5765/    1F76 : 48 4C 00            RNHL:	DB	"HL",00H
    5766/    1F79 : 48 00               RNH:	DB	"H",00H
    5767/    1F7B : 4C 00               RNL:	DB	"L",00H
    5768/    1F7D : 46 00               RNF:	DB	"F",00H
    5769/    1F7F : 41 27 00            RNAX:	DB	"A'",00H
    5770/    1F82 : 42 43 27 00         RNBCX:	DB	"BC'",00H
    5771/    1F86 : 42 27 00            RNBX:	DB	"B'",00H
    5772/    1F89 : 43 27 00            RNCX:	DB	"C'",00H
    5773/    1F8C : 44 45 27 00         RNDEX:	DB	"DE'",00H
    5774/    1F90 : 44 27 00            RNDX:	DB	"D'",00H
    5775/    1F93 : 45 27 00            RNEX:	DB	"E'",00H
    5776/    1F96 : 48 4C 27 00         RNHLX:	DB	"HL'",00H
    5777/    1F9A : 48 27 00            RNHX:	DB	"H'",00H
    5778/    1F9D : 4C 27 00            RNLX:	DB	"L'",00H
    5779/    1FA0 : 46 27 00            RNFX:	DB	"F'",00H
    5780/    1FA3 : 49 58 00            RNIX:	DB	"IX",00H
    5781/    1FA6 : 49 59 00            RNIY:	DB	"IY",00H
    5782/    1FA9 : 53 50 00            RNSP:	DB	"SP",00H
    5783/    1FAC : 50 43 00            RNPC:	DB	"PC",00H
    5784/    1FAF : 49 00               RNI:	DB	"I",00H
    5785/    1FB1 : 52 00               RNR:	DB	"R",00H
    5786/    1FB3 :                     
    5787/    1FB3 :                     ;;;
    5788/    1FB3 :                     ;;; Cold start for device dependent
    5789/    1FB3 :                     ;;;
    5790/    1FB3 :                     INIT:
    5791/    1FB3 : C9                  	RET
    5792/    1FB4 :                     
    5793/    1FB4 :                     ;;;
    5794/    1FB4 :                     ;;; Console drivers
    5795/    1FB4 :                     ;;;
    5796/    1FB4 :                     
    5797/    1FB4 :                     CONIN:
    5798/    1FB4 : 3A 01 FF            	LD	A,(UARTCR)
    5799/    1FB7 : CB 47               	BIT	0,A
    5800/    1FB9 : 28 F9               	JR	Z,CONIN
    5801/    1FBB : 3A 00 FF            	LD	A,(UARTDR)
    5802/    1FBE : C9                  	RET
    5803/    1FBF :                     
    5804/    1FBF :                     CONST:
    5805/    1FBF : 3A 01 FF            	LD	A,(UARTCR)
    5806/    1FC2 : CB 47               	BIT	0,A
    5807/    1FC4 : C9                  	RET
    5808/    1FC5 :                     
    5809/    1FC5 :                     CONOUT:
    5810/    1FC5 : F5                  	PUSH	AF
    5811/    1FC6 : 3A 01 FF            PCST1:	LD	A,(UARTCR)
    5812/    1FC9 : CB 4F               	BIT	1,A
    5813/    1FCB : 28 F9               	JR	Z,PCST1
    5814/    1FCD : F1                  	POP	AF
    5815/    1FCE : 32 00 FF            	LD	(UARTDR),A
    5816/    1FD1 : C9                  	RET
    5817/    1FD2 :                     
    5818/    1FD2 : FF FF FF FF FF FF   	db	BASIC_TOP - $ dup(0ffH)
             1FD8 : FF FF FF FF FF FF 
             1FDE : FF FF FF FF FF FF 
             1FE4 : FF FF FF FF FF FF 
             1FEA : FF FF FF FF FF FF 
             1FF0 : FF FF FF FF FF FF 
             1FF6 : FF FF FF FF FF FF 
             1FFC : FF FF FF FF       
    5819/    2000 :                     ;	ORG	BASIC_TOP
    5820/    2000 :                     
    5821/    2000 :                     ;;;
    5822/    2000 :                     ;;; RAM area
    5823/    2000 :                     ;;;
    5824/    2000 :                     
    5825/    2000 :                     	;;
    5826/    2000 :                     	;; Work Area
    5827/    2000 :                     	;;
    5828/    2000 :                     	
    5829/    EF00 :                     	ORG	WORK_B
    5830/    EF00 :                     
    5831/    EF00 : =>FALSE              	IF	BACKDOOR
    5832/    EF00 :                     stealRST08:	ds	2	; hacking RST 08H, set jump address
    5833/    EF00 :                     stealRST10:	ds	2	; hacking RST 10H, set jump address
    5834/    EF00 :                     stealRST18:	ds	2	; hacking RST 18H, set jump address
    5835/    EF00 :                     stealRST20:	ds	2	; hacking RST 20H, set jump address
    5836/    EF00 :                     stealRST28:	ds	2	; hacking RST 28H, set jump address
    5837/    EF00 :                     stealRST30:	ds	2	; hacking RST 30H, set jump address
    5838/    EF00 :                     stealRST38:	ds	2	; hacking RST 38H, set jump address
    5839/    EF00 :                     save_hl:	ds	2
    5840/    EF00 : [5831]               	ENDIF
    5841/    EF00 :                     	
    5842/    EF00 :                     INBUF:	DS	BUFLEN	; Line input buffer
    5843/    EF20 :                     DSADDR:	DS	2	; Dump start address
    5844/    EF22 :                     DEADDR:	DS	2	; Dump end address
    5845/    EF24 :                     DSTATE:	DS	1	; Dump state
    5846/    EF25 :                     GADDR:	DS	2	; Go address
    5847/    EF27 :                     SADDR:	DS	2	; Set address
    5848/    EF29 :                     HEXMOD:	DS	1	; HEX file mode
    5849/    EF2A :                     RECTYP:	DS	1	; Record type
    5850/    EF2B :                     SIZE:	DS	1	; I/O Size 00H,'W','S'
    5851/    EF2C :                     
    5852/    EF2C :                     REG_B:	
    5853/    EF2C :                     REGAF:	DS	2
    5854/    EF2E :                     REGBC:	DS	2
    5855/    EF30 :                     REGDE:	DS	2
    5856/    EF32 :                     REGHL:	DS	2
    5857/    EF34 :                     REGAFX:	DS	2		; Register AF'
    5858/    EF36 :                     REGBCX:	DS	2
    5859/    EF38 :                     REGDEX:	DS	2
    5860/    EF3A :                     REGHLX:	DS	2		; Register HL'
    5861/    EF3C :                     REGIX:	DS	2
    5862/    EF3E :                     REGIY:	DS	2
    5863/    EF40 :                     REGSP:	DS	2
    5864/    EF42 :                     REGPC:	DS	2
    5865/    EF44 :                     REGI:	DS	1
    5866/    EF45 :                     REGR:	DS	1
    5867/    EF46 :                     REG_E:
    5868/    EF46 :                     
    5869/    EF46 : =>TRUE               	IF RAM12K
    5870/    EF46 :                     ; stop watch timer
    5871/    EF46 :                     
    5872/    EF46 :                     c16b:	ds	2	; copy of TIMER0_CNT
    5873/    EF48 :                     secb:	ds	2	; copy of TIMER0_SCTT
    5874/    EF4A :                     msecb:	ds	2
    5875/    EF4C : [5869]               	ENDIF
    5876/    EF4C :                     
    5877/    EF4C :                     ; DIV 16 /16 buffer
    5878/    EF4C :                     DIV16_NA:	ds	2
    5879/    EF4E :                     DIV16_NB:	ds	2
    5880/    EF50 :                     DIV16_NC:	DS	2
    5881/    EF52 :                     DIV16_ND:	DS	2
    5882/    EF54 :                     
    5883/    EF54 :                     ; go command temp start address
    5884/    EF54 :                     goTmp:		ds	2
    5885/    EF56 :                     
    5886/    EF56 :                     ; trace mode switch
    5887/    EF56 :                     TP_mode:	ds	1	; N: display on, F: display off
    5888/    EF57 :                     TM_mode:	ds	1	; 'S':skip call, 'I':trace CALL IN
    5889/    EF58 :                     TC_cnt:		ds	2	; numbers of step
    5890/    EF5A :                     tmpT:		ds	2	; save temp buffer
    5891/    EF5C :                     fever_t:	ds	1	; flag trace forever
    5892/    EF5D :                     
    5893/    EF5D :                     ; break, trace point work area
    5894/    EF5D : =0EF5DH              dbg_wtop	equ	$
    5895/    EF5D :                     tpt1_f:		ds	1
    5896/    EF5E :                     tpt1_op:	ds	1	; save trace point1 opcode
    5897/    EF5F :                     tpt1_adr:	ds	2
    5898/    EF61 :                     tpt2_f:		ds	1
    5899/    EF62 :                     tpt2_op:	ds	1	; save trace point2 opcode (for branch)
    5900/    EF63 :                     tpt2_adr:	ds	2
    5901/    EF65 :                     
    5902/    EF65 :                     ; break point work area
    5903/    EF65 :                     bpt1_f:		ds	1
    5904/    EF66 :                     bpt1_op:	ds	1
    5905/    EF67 :                     bpt1_adr:	ds	2
    5906/    EF69 :                     bpt2_f:		ds	1
    5907/    EF6A :                     bpt2_op:	ds	1
    5908/    EF6B :                     bpt2_adr:	ds	2
    5909/    EF6D :                     
    5910/    EF6D :                     tmpb_f:		ds	1
    5911/    EF6E :                     tmpb_op:	ds	1
    5912/    EF6F :                     tmpb_adr:	ds	2
    5913/    EF71 : =0EF71H              dbg_wend	equ	$
    5914/    EF71 :                     
    5915/    EF71 :                     F_bit:		ds	F_bitSize+1
    5916/    EF7A :                     
    5917/    EF7A :                     ;::::::::::::::::::::::::::
    5918/    EF7A :                     ; DISASEM work area
    5919/    EF7A :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;
    5920/    EF7A :                     dasm_ed:	ds	2
    5921/    EF7C :                     dasm_stpf:	ds	1
    5922/    EF7D :                     dasm_adr:	ds	2
    5923/    EF7F :                     reg_xy:		ds	2	; RNIX or RNIY
    5924/    EF81 :                     xy_srtp		ds	2	; strings pointer
    5925/    EF83 :                     
    5926/    EF83 :                     mc_Size:	ds	1
    5927/    EF84 :                     
    5928/    EF84 :                     ;  DidAsm string buffer
    5929/    EF84 :                     ; total 42 bytes
    5930/    EF84 :                     dasm_bs:
    5931/    EF84 :                     adr_mc_buf:	ds	19
    5932/    EF97 :                     dasm_OpcStr:	ds	8
    5933/    EF9F :                     dasm_OprStr:	ds	15
    5934/    EFAE :                     dasm_be:
    5935/    EFAE :                     
    5936/    EFAE :                     	END
 AS V1.42 Beta [Bld 227] - Source File emuz80monRevB022.asm - Page 2 - 11/27/2022 22:27:27


  Symbol Table (* = unused):
  --------------------------

 ACS_KN2K :                    0AD0 C |  ADCSTR :                      1152 C |
 ADDIXRP_TBL :                 12E3 C |  ADDIYRP_TBL :                 12EB C |
 ADDSTR :                      114E C |  ADD_OPSTR :                   1008 C |
 ADD_RP_E :                    10B3 C |  ADD_RP_S :                    10AF C |
 ADJ_TIM1 :                    1A57 C |  ADR_MC_BUF :                 0EF84 C |
 ANDSTR :                      115E C |  APENDTBL :                     15C C |
 API00 :                       189B C |  API01 :                       189E C |
 API06 :                       18E0 C |  APITBL :                      1871 C |
 APITBL_E :                    189B C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
 A_COLON_SP :                  105B C |  A_CRLF :                      1026 C |
 BACKDOOR :                       0 - |  BACKTOMON :                   19A5 C |
 BASIC_CST :                   2000 - |  BASIC_TOP :                   2000 - |
 BASIC_WST :                   2003 - |  BC_PLUS_DE :                   1FA C |
 BITSTR :                      11D1 C |  BPT1_ADR :                   0EF67 C |
 BPT1_F :                     0EF65 C |  BPT1_OP :                    0EF66 C |
 BPT2_ADR :                   0EF6B C |  BPT2_F :                     0EF69 C |
 BPT2_OP :                    0EF6A C |  BP_CHK1 :                     1943 C |
 BP_CHK_END :                  1970 C |  BP_CLR :                       279 C |
 BP_CLR1 :                      28F C |  BP_LOT :                       2A0 C |
 BP_MSG1 :                      2B6 C |  BP_MSG2 :                      2BA C |
 BRK_CMD :                      222 C |  BS :                             8 - |
 BUFLEN :                        20 - |  B_ACLR :                       294 C |
 B_LIST :                       202 C |  B_LIST1 :                      210 C |
 B_MSG_OUT :                    2BD C |  C16B :                       0EF46 C |
 CALC_DIS_STEP :                7E3 C |  CALLSTR :                     113D C |
*CASESENSITIVE :                  0 - |  CC0 :                         124D C |
 CC1 :                         1250 C |  CC2 :                         1252 C |
 CC3 :                         1255 C |  CC4 :                         1257 C |
 CC5 :                         125A C |  CC6 :                         125D C |
 CC7 :                         125F C |  CCFSTR :                      11A6 C |
 CC_NNNN :                     0BB1 C |  CC_OPR :                      1271 C |
 CHG_MSEC :                    1A98 C |  CHKERR :                       277 C |
 CHK_0CBH :                    0BCE C |  CHK_0DD3OP :                  0D1B C |
 CHK_0DD4OP :                  0D9A C |  CHK_0DDH :                    0C94 C |
 CHK_0DDH_1 :                  0CA7 C |  CHK_0EDH :                    0E3A C |
 CHK_0FDH :                    0F37 C |  CHK_1MC_BNH :                 0A2D C |
 CHK_2MC :                     0A7A C |  CHK_3MC :                     0B2A C |
 CHK_ADC :                      8F3 C |  CHK_ADD :                      8E7 C |
 CHK_ADD_RP :                   9AC C |  CHK_AND :                      91D C |
 CHK_BP :                      1934 C |  CHK_CALCC :                   0BBF C |
 CHK_CALLN4 :                  0B98 C |  CHK_CP :                       941 C |
 CHK_DD_CB :                   0DE6 C |  CHK_DEC :                      966 C |
 CHK_DEC_RP :                   993 C |  CHK_DI1 :                      78B C |
 CHK_DJNZ :                    0AF5 C |  CHK_EX :                       9FC C |
 CHK_FEVRE :                    3CB C |  CHK_INC :                      94E C |
 CHK_INC_RP :                   97A C |  CHK_JPCC :                    0BA4 C |
 CHK_JPN4 :                    0B8C C |  CHK_JRCC :                    0B0E C |
 CHK_JRNN :                    0AFE C |  CHK_LD :                       878 C |
 CHK_LD1 :                      8B6 C |  CHK_LD16 :                    0B4B C |
 CHK_LOGOP2 :                  0AA1 C |  CHK_NTRACE :                  1988 C |
 CHK_OR :                       935 C |  CHK_POP_RP :                   9CA C |
 CHK_PUSH_RP :                  9E3 C |  CHK_RET :                     0A40 C |
 CHK_RST :                     0A59 C |  CHK_SBC :                      90E C |
 CHK_STPDI :                    7AA C |  CHK_SUB :                      902 C |
 CHK_XOR :                      929 C |  CLCC_TBLE :                    59B C |
 CLCC_TBLS :                    593 C |  CLR_CRT :                     179B C |
 CLR_TIM :                     1A79 C |  CMD_HLP :                     1B72 C |
 COMMAND_HLP :                  106 C | *COMPMODE :                       0 - |
 CONIN :                       1FB4 C |  CONOUT :                      1FC5 C |
 CONST :                       1FBF C | *CONSTPI :        3.141592653589793 - |
 CPDRSTR :                     1223 C |  CPDSTR :                      11FD C |
 CPIRSTR :                     120F C |  CPISTR :                      11EC C |
 CPLSTR :                      119E C |  CPSTR :                       1169 C |
 CPSTR_CRLF :                  1034 C |  CR :                            0D - |
 CRLF :                        1791 C |  CSTART :                        40 C |
 D16_END :                     1B0B C |  D16_MINUS :                   1B03 C |
 D16_MINUS_AFTER :             1B07 C |  D16_MINUS_BEFORE :            1B02 C |
 D16_PLUS :                    1AF7 C |  D16_PLUS_AFTER :              1AFB C |
 DAASTR :                      119A C |  DASM_ADR :                   0EF7D C |
 DASM_BE :                    0EFAE C |  DASM_BS :                    0EF84 C |
 DASM_ED :                    0EF7A C |  DASM_OPCSTR :                0EF97 C |
 DASM_OPRSTR :                0EF9F C |  DASM_STPF :                  0EF7C C |
*DATE :                "11/27/2022" - |  DBG_WEND :                   0EF71 - |
 DBG_WINI :                      7E C |  DBG_WTOP :                   0EF5D - |
 DDLOGTBL :                    12F3 C |  DD_21 :                       0DC0 C |
 DD_22 :                       0DCD C |  DD_2A :                       0DD6 C |
 DD_2A1 :                      0DDA C |  DD_2NDTBL :                    656 C |
 DD_2NDTBL1 :                   65A C |  DD_2NDTBL2 :                   65E C |
 DD_2NDTBL_E :                  660 C |  DD_2OPT :                     12DB C |
 DD_BIT :                      0E2A C |  DD_BIT_OPTBL :                10D7 C |
 DD_BIT_OPTBLE :               10EF C |  DD_BSR :                      0E21 C |
 DD_CB_NN_XX :                 0E06 C |  DD_LD :                       0D5A C |
 DD_LD1 :                      0D72 C |  DD_LDTBL :                    1301 C |
 DD_LD_TBL :                   10BB C |  DD_LD_TBLE :                  10C9 C |
 DD_LOG_TBL :                  10C9 C |  DD_LOG_TBLE :                 10D0 C |
 DD_MIX :                      0D85 C |  DD_MIX1 :                     0D90 C |
 DD_MIX2 :                     0D95 C |  DD_MIX3 :                     0D88 C |
 DD_MIX4 :                     0D7E C |  DD_RES :                      0E32 C |
 DD_RT_STR :                   1339 C |  DD_RT_TBLE :                  10D7 C |
 DD_RT_TBLES :                 10D0 C |  DEADDR :                     0EF22 C |
 DECSTR :                      1170 C |  DEC_OPCDTBLE :                10A7 C |
 DEC_OPCDTBLS :                109F C |  DEC_RP_E :                    10AF C |
 DEC_RP_S :                    10AB C |  DEC_STR :                     1AB4 C |
 DEL :                           7F - |  DIP_TM :                       30E C |
 DISASM_GO :                    7B8 C |  DISASSEMBLE :                  768 C |
 DISREGTBL :                   1261 C |  DISTR :                       11AA C |
 DIS_ANALYSIS :                 847 C |  DIS_CALL :                    19E2 C |
 DIS_GO1 :                      7C3 C | *DIV16 :                       1B0E C |
 DIV16_8 :                     1AEA C |  DIV16_NA :                   0EF4C C |
 DIV16_NB :                   0EF4E C |  DIV16_NC :                   0EF50 C |
 DIV16_ND :                   0EF52 C |  DIV16_X0 :                    1B4B C |
 DIV16_X1 :                    1B56 C |  DIV16_X2 :                    1B24 C |
 DI_NXT :                       771 C |  DJNZSTR :                     1138 C |
 DMKST1 :                      101C C |  DMKST2 :                      101E C |
 DMKSTR0 :                     1012 C |  DONOT_TRACE :                 13AA C |
 DP0 :                          675 C |  DP00 :                         685 C |
 DP1 :                          69A C |  DPB :                          71C C |
 DPB0 :                         733 C |  DPB1 :                         742 C |
 DPB2 :                         747 C |  DPL :                          6E2 C |
 DPL0 :                         6F3 C |  DPL1 :                         703 C |
 DPL2 :                         712 C |  DPL3 :                         717 C |
 DPM :                          6B0 C |  DPM0 :                         6BB C |
 DPM1 :                         6D9 C |  DSADDR :                     0EF20 C |
 DSEP0 :                       1D81 C |  DSEP1 :                       1D84 C |
 DSTATE :                     0EF24 C |  DUMP :                         660 C |
 ED_4MC :                      0F18 C |  ED_ADC :                      0EC6 C |
 ED_IM :                       0EF7 C |  ED_LD_AI :                    0EE0 C |
 ED_LD_AR :                    0ED7 C |  ED_LD_IA :                    0EF2 C |
 ED_LD_RA :                    0EE9 C |  ED_LD_RA1 :                   0EEC C |
 ED_NOOPR :                    130F C |  ED_NO_OPR :                   0F0A C |
 ED_OP_TBL :                   10EF C |  ED_OP_TBLE :                  1127 C |
 ED_OUT :                      0E95 C |  ED_OUT1 :                     0EA9 C |
 ED_RP_STR :                   12CF C |  ED_SBC :                      0EB0 C |
 ED_SBC1 :                     0EBF C |  EISTR :                       11AD C |
 END_DEC :                     1AE3 C |  END_INS_TC :                   503 C |
 ENTRY :                         40 - |  ERR :                          0FE C |
 ERRMSG :                      1D79 C |  ERR_TRACE_SEQ :                506 C |
 ER_OPMSG :                    1240 C |  ESC_CRT_CLR :                 17A4 C |
 EXP_MSB :                      525 C |  EXSTR :                       117D C |
 EXXSTR :                      1180 C |  EX_AF_AF :                    0A17 C |
 EX_SP_HL :                    0A25 C | *E_CSTART :                       0 C |
*E_WSTART :                       3 C | *FALSE :                          0 - |
 FEVER_T :                    0EF5C C |  FLG_LOOP :                    1715 C |
 FLG_NXT :                     1724 C |  FLG_OFF :                     1720 C |
*FULLPMMU :                       1 - |  F_BIT :                      0EF71 C |
 F_BITSIZE :                      8 - |  F_BIT_OFF :                   1740 C |
 F_BIT_ON :                    1738 C |  G0 :                          138A C |
 GADDR :                      0EF25 C |  GETLIN :                      17A8 C |
 GET_BI :                       1D4 C |  GET_DI1 :                      785 C |
 GET_DISASM_ST :                7F1 C |  GET_N4 :                      0B73 C |
 GET_N4CRLF :                  0B45 C |  GET_NNNN :                    0F76 C |
 GET_NUM :                      1B6 C |  GET_NUM0 :                     1B9 C |
 GET_RSTG_OFF :                0F8A C |  GET_R_NUM :                    86F C |
 GET_STRBUFPOINT :             0F8D C |  GL0 :                         17AB C |
 GL00 :                        17AF C |  GL1 :                         17DF C |
 GLB :                         17E3 C |  GLE :                         17FA C |
 GO :                          1347 C |  GO1 :                         1384 C |
 GOSTMP :                      135B C |  GOTMP :                      0EF54 C |
 G_STPADR :                    1365 C |  H2SA_1 :                      0FE2 C |
 H2S_N1 :                      0FF8 C |  H2S_N2 :                      0FFC C |
 H4SA_1 :                      0FD1 C |  H4SA_2 :                      0FD4 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HEX2STR :                     0FEF C |
 HEX2STR_ASM :                 0FD9 C |  HEX4STR :                     0FE7 C |
 HEX4STR_ASM :                 0FC8 C |  HEXIN :                       176D C |
 HEXMOD :                     0EF29 C |  HEXOUT1 :                     175F C |
 HEXOUT2 :                     1756 C |  HEXOUT4 :                     1751 C |
 HI0 :                         1775 C |  HI1 :                         178C C |
 HIR :                         178F C |  HLTSTR :                      1149 C |
 HL_CRLF :                     1031 C |  IB1 :                          536 C |
 IB2 :                          535 C |  IB3 :                          534 C |
 ICKA1 :                        56F C |  ICKA_END :                     57A C |
 IHEMSG :                      1D5F C |  IHEXER :                      1D88 C |
 IKK_1 :                       1074 C |  IMSTR :                       11DD C |
 INADR_CHK_AND_WRT :            554 C |  INBUF :                      0EF00 C |
 INCSTR :                      116C C |  INC_DEC :                      960 C |
 INC_DEC_ADDRP :               1289 C |  INC_OPCDTBLE :                109F C |
 INC_OPCDTBLS :                1097 C |  INC_RP_E :                    10AB C |
 INC_RP_S :                    10A7 C |  INDRSTR :                     1228 C |
 INDSTR :                      1201 C |  INIRSTR :                     1214 C |
 INISTR :                      11F0 C | *INIT :                        1FB3 C |
 INS2 :                         5A3 C |  INSBRK_1OP :                   527 C |
 INSBRK_2OP :                   52C C |  INSBRK_3OP :                   531 C |
 INSBRK_BRP :                   53B C |  INSBRK_SP :                    547 C |
 INSPOSTSTR :                  1037 C |  INSTC1 :                       457 C |
*INSTC2 :                       3E5 C |  INSTR :                       11B4 C |
*INSUPMODE :                      0 - |  INS_EX_OPC :                  0A11 C |
 INS_HLKK :                    0B7D C |  INS_HL_OPR :                  0A0E C |
 INS_IXRP :                    0D06 C |  INS_JPIX :                    0CDC C |
*INS_JPIX1 :                   0CE0 C |  INS_KAKKOL :                  106E C |
 INS_KAKKOR :                  1072 C |  INS_KKA :                     0B67 C |
 INS_KKHL :                    0B61 C |  INS_KMR :                     1083 C |
 INS_KN2K :                    0AD9 C |  INS_KN4KCS :                  0FA2 C |
 INS_KSPKIX :                  0CEE C |  INS_MISR :                    107F C |
 INS_N2CRLF :                  0AC6 C |  INS_PLSR :                    107B C |
 INS_RSTG :                    0C79 C |  INS_SPCR :                    1077 C |
 INS_SPIX :                    0CFD C |  IO_B :                       0F000 - |
 IR0 :                           5B C |  IR00 :                          72 C |
 IX_CRLF :                     102B C |  JPCC_TBLE :                    593 C |
 JPCC_TBLS :                    58B C |  JPHL :                         49D C |
 JPSTR :                       1132 C |  JRCC_OPR1 :                   1281 C |
 JRCC_TBLE :                    58B C |  JRCC_TBLS :                    586 C |
 JRCC_TBLS1 :                   587 C |  JRSTR :                       1135 C |
 JR_N4CRLF :                   0B05 C |  KCKSTR :                      1244 C |
 KIXYPNK_CRLF :                0F51 C |  KIXYPNK_CS :                  0F48 C |
 KN2K :                        0AE5 C |  KN4HK :                       0B6D C |
 KN4KCRLF :                    0B83 C |  KRNHL :                       1248 C |
 LANCH1 :                       17C C |  LANCH10 :                      1B4 C |
 LANCH11 :                      1B4 C |  LANCH12 :                      1B4 C |
 LANCH13 :                      1B4 C |  LANCH14 :                      1B4 C |
 LANCH15 :                      1B4 C |  LANCH16 :                      1B4 C |
 LANCH2 :                       198 C |  LANCH3 :                       1B4 C |
 LANCH4 :                       1B4 C |  LANCH5 :                       1B4 C |
 LANCH6 :                       1B4 C |  LANCH7 :                       1B4 C |
 LANCH8 :                       1B4 C |  LANCH9 :                       1B4 C |
 LAP_TIM :                     1A3B C |  LAUNCHER :                     10E C |
 LD1OP :                        8C9 C |  LDDRSTR :                     121E C |
 LDDSTR :                      11F9 C |  LDIRSTR :                     120A C |
 LDISTR :                      11E8 C |  LDSTR :                       1146 C |
 LD_A_KBCK :                    895 C |  LD_A_KDEK :                    8A3 C |
 LD_A_KXXK :                    898 C |  LD_KBCK_A :                    8A8 C |
 LD_KDEK_A :                    8B1 C |  LD_KXXK_A :                    8AB C |
 LD_R_NN_E :                    644 C |  LD_R_NN_S :                    63C C |
 LF :                            0A - |  LH0 :                         14A1 C |
*LH1 :                         14A8 C |  LH2 :                         14AC C |
 LH3 :                         14B4 C |  LHI0 :                        14B9 C |
 LHI1 :                        14DC C |  LHI2 :                        14EE C |
 LHI20 :                       14ED C |  LHI3 :                        14F0 C |
 LHIE :                        1500 C |  LHS0 :                        1509 C |
 LHS1 :                        1526 C |  LHS2 :                        1538 C |
 LHS20 :                       1539 C |  LHS3 :                        153B C |
 LHSE :                        1555 C |  LHSR :                        155B C |
*LISTON :                         1 - |  LOADH :                       1484 C |
 LOGOP2STR :                   12B3 C |  LOGOP3STR :                   12C7 C |
 LOG_OP_E :                     64E C |  LOG_OP_S :                     644 C |
 LOOP_DEC :                    1ACA C |  LOOP_M8 :                     1B65 C |
 LST_END :                      159 C |  LST_PRG :                      13E C |
 LST_PRG1 :                     141 C |  L_B2 :                         2B0 C |
*MACEXP :                         7 - |  MAS_1 :                        822 C |
 MAS_2 :                        833 C |  MAS_3 :                        83F C |
 MC_SIZE :                    0EF83 C |  MEET_DD :                      5CE C |
 MEET_ED :                      5F0 C |  MEET_OP1 :                     60C C |
 MEET_OP2 :                     617 C |  MEET_OP3 :                     622 C |
 MEET_OP4 :                     62D C |  MKOPCSTR :                    100B C |
 MKREL_STR :                   0FBA C |  MK_2NDOPR :                    8D5 C |
 MK_2NDOPR1 :                   8DF C |  MK_ADR_STR :                   80C C |
 MK_BITR :                     0C5C C |  MK_BITR_STR :                 0C74 C |
 MK_KIXPNK :                   0D50 C |  MK_KIXYPNK :                  0F57 C |
*MK_KIYPNK :                   0D54 C |  MK_KN4K :                     0FB1 C |
 MK_KRK :                      1045 C |  MK_KRKCS :                    104D C |
 MK_KRK_1 :                    1042 C |  MK_N2CRLF :                   0F96 C |
 MK_N4CRLF :                   0F9C C |  MK_RCS :                      105E C |
 MK_RESR :                     0C65 C |  MK_RLCR :                     0C1D C |
 MK_RLR :                      0C2F C |  MK_RRCR :                     0C26 C |
 MK_RRR :                      0C38 C |  MK_SLAR :                     0C41 C |
 MK_SRAR :                     0C4A C |  MK_SRLR :                     0C53 C |
 MK_STR :                      0F81 C | *MOMCPU :                        80 - |
*MOMCPUNAME :                 "Z80" - |  MSECB :                      0EF4A C |
 MUL_10 :                       1E3 C |  MUL_8 :                       1B60 C |
 NEGSTR :                      11D9 C | *NESTMAX :                      100 - |
 NEXT_BC1 :                     402 C |  NEXT_BC10 :                    4DC C |
 NEXT_BC11 :                    4E9 C |  NEXT_BC111 :                   4FE C |
 NEXT_BC2 :                     425 C |  NEXT_BC21 :                    433 C |
 NEXT_BC22 :                    44E C | *NEXT_BC221 :                   44C C |
 NEXT_BC222 :                   446 C |  NEXT_BC3 :                     466 C |
 NEXT_BC4 :                     47B C |  NEXT_BC5 :                     492 C |
 NEXT_BC6 :                     489 C |  NEXT_BC7 :                     4A6 C |
 NEXT_BC8 :                     4B5 C |  NEXT_BC9 :                     4C8 C |
 NOPSTR :                      1184 C |  NO_API :                      186E C |
*NO_OPERATE :                  186D C |  NO_RAM_AREA :                  57C C |
 NO_RST38_MSG :                1977 C |  NUMPLUS :                     0F71 C |
 OPNMSG :                      1D1D C |  OP_ERR :                      0C6E C |
 ORSTR :                       1166 C |  OTDRSTR :                     122D C |
 OTH_1OP_E :                   1097 C |  OTH_1OP_S :                   108A C |
 OTH_1OP_TBL :                 1299 C |  OTIRSTR :                     1219 C |
 OUTDSTR :                     1205 C |  OUTISTR :                     11F4 C |
 OUTSTR :                      11B0 C | *PADDING :                        1 - |
 PCST1 :                       1FC6 C |  POPSTR :                      1174 C |
 POP_PUSHRP :                  1291 C |  POP_RP_E :                    10B7 C |
 POP_RP_S :                    10B3 C |  PROMPT :                      1D5C C |
 PUSHSTR :                     1178 C |  PUSH_RP_E :                   10BB C |
 PUSH_RP_S :                   10B7 C |  RAM12K :                         1 - |
 RAM4K :                          0 - |  RAM8K :                          0 - |
 RAM_B :                      0C000 - |  RAM_E :                      0EFFF - |
 RD0 :                         16BF C |  RD1 :                         16F7 C |
 RD10 :                        16E5 C |  RD101 :                       16DB C |
 RD20 :                        1704 C |  RDHEX :                       1812 C |
 RDSA :                        1DF8 C |  RDSAX :                       1E1D C |
 RDSBC :                       1DFC C |  RDSBCX :                      1E23 C |
 RDSDE :                       1E02 C |  RDSDEX :                      1E29 C |
 RDSF :                        1E0E C |  RDSFX :                       1E35 C |
 RDSFX_H :                       1E - |  RDSFX_L :                       35 - |
 RDSF_H :                        1E - |  RDSF_L :                        0E - |
 RDSHL :                       1E08 C |  RDSHLX :                      1E2F C |
 RDSI :                        1E44 C |  RDSIX :                       1E13 C |
 RDSIY :                       1E18 C |  RDSPC :                       1E3F C |
 RDSR :                        1E48 C |  RDSSP :                       1E3A C |
 RDTAB :                       1DA3 C |  RDUMP :                       16BC C |
 RD_SEC :                      1A5C C |  RECTYP :                     0EF2A C |
 REG :                         1636 C |  REGAF :                      0EF2C C |
 REGAFX :                     0EF34 C |  REGBC :                      0EF2E C |
 REGBCX :                     0EF36 C |  REGDE :                      0EF30 C |
 REGDEX :                     0EF38 C |  REGHL :                      0EF32 C |
 REGHLX :                     0EF3A C |  REGI :                       0EF44 C |
 REGIX :                      0EF3C C |  REGIY :                      0EF3E C |
 REGPC :                      0EF42 C |  REGR :                       0EF45 C |
 REGSP :                      0EF40 C |  REG_B :                      0EF2C C |
 REG_E :                      0EF46 C |  REG_XY :                     0EF7F C |
*RELAXED :                        0 - |  REL_ADR_C :                    51A C |
 REPEAT_TRACE :                19C6 C |  RESSTR :                      11D5 C |
 RETCC_TBLE :                   586 C |  RETCC_TBLS :                   57E C |
 RETISTR :                     1232 C |  RETNSTR :                     1237 C |
 RETSTR :                      112E C |  RG0 :                         1643 C |
 RG1 :                         1647 C |  RG2 :                         1657 C |
 RG3 :                         1666 C |  RG4 :                         168B C |
 RG5 :                         1697 C |  RG6 :                         16B3 C |
 RG7 :                         16B6 C |  RGE :                         16B9 C |
 RGR :                         16B6 C |  RH0 :                         1817 C |
 RH1 :                         182A C |  RHE :                         1848 C |
 RHE1 :                        1852 C |  RLASTR :                      1192 C |
 RLCASTR :                     1188 C |  RLCSTR :                      11B7 C |
 RLDSTR :                      11E4 C |  RLSTR :                       11BF C |
 RNA :                         1F66 C |  RNAF :                        1127 C |
 RNAFX :                       112A C |  RNAX :                        1F7F C |
 RNB :                         1F6B C |  RNBC :                        1F68 C |
 RNBCX :                       1F82 C |  RNBX :                        1F86 C |
 RNC :                         1F6D C |  RNCX :                        1F89 C |
 RND :                         1F72 C |  RNDE :                        1F6F C |
 RNDEX :                       1F8C C |  RNDX :                        1F90 C |
 RNE :                         1F74 C |  RNEX :                        1F93 C |
 RNF :                         1F7D C |  RNFX :                        1FA0 C |
 RNH :                         1F79 C |  RNHL :                        1F76 C |
 RNHLX :                       1F96 C |  RNHX :                        1F9A C |
 RNI :                         1FAF C |  RNIX :                        1FA3 C |
 RNIY :                        1FA6 C |  RNL :                         1F7B C |
 RNLX :                        1F9D C |  RNPC :                        1FAC C |
 RNR :                         1FB1 C |  RNSP :                        1FA9 C |
 RNTAB :                       1E4C C |  RNTABA :                      1E96 C |
 RNTABB :                      1EA4 C |  RNTABBC :                     1EB8 C |
 RNTABC :                      1EC6 C |  RNTABD :                      1ED4 C |
 RNTABDE :                     1EE8 C |  RNTABE :                      1EF6 C |
 RNTABF :                      1F04 C |  RNTABH :                      1F12 C |
 RNTABHL :                     1F26 C |  RNTABI :                      1F42 C |
 RNTABL :                      1F34 C |  RNTABP :                      1F56 C |
 RNTABS :                      1F5E C |  ROM_B :                          0 - |
 RRASTR :                      1196 C |  RRCASTR :                     118D C |
 RRCSTR :                      11BB C |  RRDSTR :                      11E0 C |
 RRSTR :                       11C2 C |  RST30H_IN :                   1854 C |
 RST38H_IN :                   18E2 C |  RST38MSG :                    19FB C |
 RSTR_BPT :                    19DB C |  RSTR_TPT :                    19CF C |
 RSTSTR :                      1142 C |  RST_TBLE :                     5A3 C |
 RST_TBLS :                     59B C |  SADDR :                      0EF27 C |
 SAVEH :                       155E C |  SBCSTR :                      115A C |
 SCFSTR :                      11A2 C |  SECB :                       0EF48 C |
 SETBPADR :                     260 C |  SETM :                        140E C |
 SETSTR :                      123C C |  SET_BITNO :                   0C86 C |
 SET_BP :                      1402 C |  SET_BP1 :                      23E C |
 SET_TM :                       325 C |  SH0 :                         1568 C |
 SH1 :                         156C C |  SH2 :                         1594 C |
 SH3 :                         159C C |  SH4 :                         15B3 C |
 SHE :                         1591 C |  SHEMSG :                      1D6C C |
 SHL0 :                        15C7 C |  SHL00 :                       15BC C |
 SHLI0 :                       15F0 C |  SHLS :                        1604 C |
 SHLS0 :                       1623 C | *SIZE :                       0EF2B C |
 SKIPSP :                      1802 C |  SKP_RMSG :                    1999 C |
 SKP_TBP :                     13C5 C |  SLASTR :                      11C5 C |
 SM0 :                         1428 C |  SM1 :                         1429 C |
 SM2 :                         144F C |  SM3 :                         145A C |
 SM4 :                         1465 C |  SRASTR :                      11C9 C |
 SRECER :                      1D96 C |  SRLSTR :                      11CD C |
 STACK :                      0EEC0 - |  STACKM :                     0EF00 - |
*START :                          0 C |  START_TIM :                   1A2C C |
 STOPW :                       1A17 C |  STOP_TIM :                    1A35 C |
 STPBRK_MSG :                  1A05 C |  STP_CHK :                      3AE C |
 STROUT :                      1748 C |  ST_COPY :                     1066 C |
 ST_MUL8 :                     1B69 C |  SUBSTR :                      1156 C |
 SV_NNKR :                     0F6B C |  TADR_CHK :                     39D C |
 TC_CNT :                     0EF58 C |  TERR_MSG :                     510 C |
 THREE_OPTBL :                  64E C |  THREE_OPTBLE :                 652 C |
 THREE_OPTBL_E :                656 C |  TIM0_CTL0 :                  0F800 - |
*TIM0_CTL1 :                  0F801 - | *TIME :                  "22:27:27" - |
 TIMER0_CNTH :                0F811 - |  TIMER0_CNTL :                0F810 - |
 TIMER0_INITC :                87E1 - |  TIMER0_SCTH :                0F821 - |
 TIMER0_SCTL :                0F820 - |  TMPB_ADR :                   0EF6F C |
 TMPB_F :                     0EF6D C |  TMPB_OP :                    0EF6E C |
 TMPT :                       0EF5A C |  TM_MODE :                    0EF57 C |
 TM_MSG_0 :                     336 C |  TM_MSG_I :                     345 C |
 TM_MSG_S :                     34B C |  TPT1_ADR :                   0EF5F C |
 TPT1_F :                     0EF5D C |  TPT1_OP :                    0EF5E C |
 TPT2_ADR :                   0EF63 C |  TPT2_F :                     0EF61 C |
 TPT2_OP :                    0EF62 C |  TP_CHK1 :                     1952 C |
 TP_CHK2 :                     1961 C |  TP_CMD :                       353 C |
 TP_MD_ON :                     377 C |  TP_MODE :                    0EF56 C |
 TP_MSG_0 :                     388 C |  TP_MSG_OFF :                   397 C |
 TP_MSG_ON :                    392 C |  TP_N1 :                        35F C |
 TP_N2 :                        368 C |  TRACE_CMD :                    2D7 C |
 TRACE_MSG :                   1A0E C | *TRUE :                           1 - |
 TWO_OPTBL :                    63C C |  TWO_OPTBL_E :                  64E C |
 T_NO_KY :                     19B1 C |  T_OP1 :                        3C6 C |
 T_OP11 :                       3C0 C |  T_OP_CHK :                     3E1 C |
 UARTCR :                     0FF01 - |  UARTDR :                     0FF00 - |
 UPPER :                       1809 C |  UP_BI :                        1E1 C |
 U_0 :                         1AA5 C |  U_00 :                        1A9F C |
 U_1 :                         1AA9 C | *VERSION :                     142F - |
 WORK_B :                     0EF00 - |  WSTART :                       0BE C |
 WS_CHK1 :                     18AD C |  WS_CHK2 :                     18B9 C |
 WS_CHK3 :                     18C5 C |  WS_CHK4 :                     18D1 C |
 WS_CHK5 :                     18DD C |  XORSTR :                      1162 C |
 XY_SRTP :                    0EF81 C |

    797 symbols
     34 unused symbols

 AS V1.42 Beta [Bld 227] - Source File emuz80monRevB022.asm - Page 3 - 11/27/2022 22:27:27


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.05 seconds assembly time

   5937 lines source file
      2 passes
      0 errors
      0 warnings
